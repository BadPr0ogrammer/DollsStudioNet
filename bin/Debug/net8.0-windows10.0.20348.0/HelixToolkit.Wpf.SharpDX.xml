<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HelixToolkit.Wpf.SharpDX</name>
    </assembly>
    <members>
        <member name="T:HelixToolkit.Wpf.SharpDX.CameraController">
            <summary>
            Provides a control that manipulates the camera by mouse and keyboard gestures.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.cameraHistory">
            <summary>
            The camera history stack.
            </summary>
            <remarks>
            Implemented as a list since we want to remove items at the bottom of the stack.
            </remarks>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.changeFieldOfViewHandler">
            <summary>
            The change field of view event handler.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.changeLookAtHandler">
            <summary>
            The change look at event handler.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.allowCombinedManipulation">
            <summary>
            Decides if combined manipulation is allowed.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.isSpinning">
            <summary>
            The is spinning flag.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.lastTick">
            <summary>
            The last tick.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.moveSpeed">
            <summary>
            The move speed.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.panFingerCount">
            <summary>
            The number of fingers used for panning.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.panHandler">
            <summary>
            The pan event handler.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.panSpeed">
            <summary>
            The pan speed.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.rotateFingerCount">
            <summary>
            The number of fingers used for rotating.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.rotateHandler">
            <summary>
            The rotation event handler.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.rotationPoint3D">
            <summary>
            The 3D rotation point.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.rotationPosition">
            <summary>
            The rotation position.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.rotationSpeed">
            <summary>
            The rotation speed.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.setTargetHandler">
            <summary>
            The set target handler
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.spinningPoint3D">
            <summary>
            The 3D point to spin around.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.spinningPosition">
            <summary>
            The spinning position.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.spinningSpeed">
            <summary>
            The spinning speed.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.touchPreviousPoint">
            <summary>
            The touch point in the last touch delta event
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.manipulatorCount">
            <summary>
            The number of touch manipulators (fingers) in the last touch delta event
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.zoomFingerCount">
            <summary>
            The number of fingers used for zooming.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.zoomHandler">
            <summary>
            The zoom event handler.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.zoomPoint3D">
            <summary>
            The point to zoom around.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.zoomRectangleHandler">
            <summary>
            The zoom rectangle event handler.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.zoomSpeed">
            <summary>
            The zoom speed.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraController.CursorHistory">
            <summary>
            Records series of mouse down cursor changes. And play back during mouse up.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.#ctor(HelixToolkit.Wpf.SharpDX.Viewport3DX)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.CameraController" /> class.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraController.ActualCamera">
            <summary>
            Gets ActualCamera.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraController.CameraLookDirection">
            <summary>
            Gets or sets CameraLookDirection.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.CameraMode">
            <summary>
            Gets or sets CameraMode.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraController.CameraPosition">
            <summary>
            Gets or sets CameraPosition.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.CameraRotationMode">
            <summary>
            Gets or sets CameraRotationMode.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraController.CameraTarget">
            <summary>
            Gets or sets CameraTarget.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraController.CameraUpDirection">
            <summary>
            Gets or sets CameraUpDirection.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.ChangeFieldOfViewCursor">
            <summary>
            Gets or sets the change field of view cursor.
            </summary>
            <value> The change field of view cursor. </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.DefaultCamera">
            <summary>
            Gets or sets the default camera (used when resetting the view).
            </summary>
            <value> The default camera. </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.InertiaFactor">
            <summary>
            Gets or sets InertiaFactor.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.InfiniteSpin">
            <summary>
            Gets or sets a value indicating whether InfiniteSpin.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.IsChangeFieldOfViewEnabled">
            <summary>
            Gets or sets a value indicating whether field of view can be changed.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.IsInertiaEnabled">
            <summary>
            Gets or sets a value indicating whether inertia is enabled for the camera manipulations.
            </summary>
            <value><c>true</c> if inertia is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.IsMoveEnabled">
            <summary>
            Gets or sets a value indicating whether move is enabled.
            </summary>
            <value> <c>true</c> if move is enabled; otherwise, <c>false</c> . </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.IsPanEnabled">
            <summary>
            Gets or sets a value indicating whether pan is enabled.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.IsRotationEnabled">
            <summary>
            Gets or sets a value indicating whether IsRotationEnabled.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.IsZoomEnabled">
            <summary>
            Gets or sets a value indicating whether IsZoomEnabled.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.LeftRightPanSensitivity">
            <summary>
            Gets or sets the sensitivity for pan by the left and right keys.
            </summary>
            <value> The pan sensitivity. </value>
            <remarks>
            Use -1 to invert the pan direction.
            </remarks>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.LeftRightRotationSensitivity">
            <summary>
            Gets or sets the sensitivity for rotation by the left and right keys.
            </summary>
            <value> The rotation sensitivity. </value>
            <remarks>
            Use -1 to invert the rotation direction.
            </remarks>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.MaximumFieldOfView">
            <summary>
            Gets or sets the maximum field of view.
            </summary>
            <value> The maximum field of view. </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.MinimumFieldOfView">
            <summary>
            Gets or sets the minimum field of view.
            </summary>
            <value> The minimum field of view. </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.ModelUpDirection">
            <summary>
            Gets or sets the model up direction.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.MoveSensitivity">
            <summary>
            Gets or sets the move sensitivity.
            </summary>
            <value> The move sensitivity. </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.PageUpDownZoomSensitivity">
            <summary>
            Gets or sets the sensitivity for zoom by the page up and page down keys.
            </summary>
            <value> The zoom sensitivity. </value>
            <remarks>
            Use -1 to invert the zoom direction.
            </remarks>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.PanCursor">
            <summary>
            Gets or sets the pan cursor.
            </summary>
            <value> The pan cursor. </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.RotateAroundMouseDownPoint">
            <summary>
            Gets or sets a value indicating whether to rotate around the mouse down point.
            </summary>
            <value> <c>true</c> if rotation around the mouse down point is enabled; otherwise, <c>false</c> . </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.RotateCursor">
            <summary>
            Gets or sets the rotate cursor.
            </summary>
            <value> The rotate cursor. </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.RotationSensitivity">
            <summary>
            Gets or sets the rotation sensitivity (degrees/pixel).
            </summary>
            <value> The rotation sensitivity. </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.ShowCameraTarget">
            <summary>
            Gets or sets a value indicating whether to show a target adorner when manipulating the camera.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.SpinReleaseTime">
            <summary>
            Gets or sets the max duration of mouse drag to activate spin.
            </summary>
            <remarks>
            If the time between mouse down and mouse up is less than this value, spin is activated.
            </remarks>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.UpDownPanSensitivity">
            <summary>
            Gets or sets the sensitivity for pan by the up and down keys.
            </summary>
            <value> The pan sensitivity. </value>
            <remarks>
            Use -1 to invert the pan direction.
            </remarks>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.UpDownRotationSensitivity">
            <summary>
            Gets or sets the sensitivity for rotation by the up and down keys.
            </summary>
            <value> The rotation sensitivity. </value>
            <remarks>
            Use -1 to invert the rotation direction.
            </remarks>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraController.Viewport">
            <summary>
            Gets or sets Viewport.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.ZoomAroundMouseDownPoint">
            <summary>
            Gets or sets a value indicating whether to zoom around mouse down point.
            </summary>
            <value> <c>true</c> if zooming around the mouse down point is enabled; otherwise, <c>false</c> . </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.ZoomCursor">
            <summary>
            Gets or sets the zoom cursor.
            </summary>
            <value> The zoom cursor. </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.ZoomRectangleCursor">
            <summary>
            Gets or sets the zoom rectangle cursor.
            </summary>
            <value> The zoom rectangle cursor. </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.ZoomSensitivity">
            <summary>
            Gets or sets ZoomSensitivity.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.ZoomDistanceLimitFar">
            <summary>
            Gets or sets the zoom distance limit far.
            </summary>
            <value>
            The zoom distance limit far.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CameraController.ZoomDistanceLimitNear">
            <summary>
            Gets or sets the zoom distance limit near.
            </summary>
            <value>
            The zoom distance limit near.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraController.IsOrthographicCamera">
            <summary>
            Gets a value indicating whether IsOrthographicCamera.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraController.IsPerspectiveCamera">
            <summary>
            Gets a value indicating whether IsPerspectiveCamera.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraController.OrthographicCamera">
            <summary>
            Gets OrthographicCamera.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraController.PerspectiveCamera">
            <summary>
            Gets PerspectiveCamera.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraController.FixedRotationPointEnabled">
            <summary>
            Gets or sets a value indicating whether [fixed rotation point enabled].
            </summary>
            <value>
              <c>true</c> if [fixed rotation point enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraController.FixedRotationPoint">
            <summary>
            Gets or sets the fixed rotation point.
            </summary>
            <value>
            The fixed rotation point.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraController.AllowRotateXY">
            <summary>
            Gets or sets to allow rotate x direction and y direction globally. X, Y is screen space.
            <para>X = 1: Allow left/right rotation. Y = 1: Allow up/down rotation</para>
            <para>Default is (1, 1)</para>
            </summary>
            <value>
            The allow rotate xy.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.AddMoveForce(System.Single,System.Single,System.Single)">
            <summary>
            Adds the specified move force.
            </summary>
            <param name="dx">
            The delta x.
            </param>
            <param name="dy">
            The delta y.
            </param>
            <param name="dz">
            The delta z.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.AddMoveForce(System.Numerics.Vector3)">
            <summary>
            Adds the specified move force.
            </summary>
            <param name="delta">
            The delta.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.AddPanForce(System.Single,System.Single)">
            <summary>
            Adds the specified pan force.
            </summary>
            <param name="dx">
            The delta x.
            </param>
            <param name="dy">
            The delta y.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.AddPanForce(System.Numerics.Vector3)">
            <summary>
            The add pan force.
            </summary>
            <param name="pan">
            The pan.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.AddRotateForce(System.Single,System.Single)">
            <summary>
            The add rotate force.
            </summary>
            <param name="dx">
            The delta x.
            </param>
            <param name="dy">
            The delta y.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.AddZoomForce(System.Single)">
            <summary>
            Adds the zoom force.
            </summary>
            <param name="delta">
            The delta.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.AddZoomForce(System.Single,System.Numerics.Vector3)">
            <summary>
            Adds the zoom force.
            </summary>
            <param name="delta">
            The delta.
            </param>
            <param name="zoomOrigin">
            The zoom origin.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.ChangeDirection(System.Numerics.Vector3,System.Numerics.Vector3,System.Double)">
            <summary>
            Changes the direction of the camera.
            </summary>
            <param name="lookDir">
            The look direction.
            </param>
            <param name="upDir">
            The up direction.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.ChangeDirection(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
            <summary>
            Changes the direction.
            </summary>
            <param name="lookDir">The look dir.</param>
            <param name="upDir">Up dir.</param>
            <param name="animationTime">The animation time.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.ChangeDirection(System.Numerics.Vector3,System.Double)">
            <summary>
            Changes the direction of the camera.
            </summary>
            <param name="lookDir">
            The look direction.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.LookAt(System.Numerics.Vector3,System.Double)">
            <summary>
            Change the "look-at" point.
            </summary>
            <param name="target">
            The target.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.PushCameraSetting">
            <summary>
            Push the current camera settings on an internal stack.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.ResetCamera">
            <summary>
            Resets the camera.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.ResetCameraUpDirection">
            <summary>
            Resets the camera up direction.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.RestoreCameraSetting">
            <summary>
            Restores the most recent camera setting from the internal stack.
            </summary>
            <returns> The restore camera setting. </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.StartSpin(System.Numerics.Vector2,System.Windows.Point,System.Numerics.Vector3)">
            <summary>
            Starts the spin.
            </summary>
            <param name="speed">
            The speed.
            </param>
            <param name="position">
            The position.
            </param>
            <param name="aroundPoint">
            The spin around point.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.StopSpin">
            <summary>
            Stops the spin.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.StopZooming">
            <summary>
            Stops the zooming inertia.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.StopPanning">
            <summary>
            Stops the panning.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.Zoom(System.Double)">
            <summary>
            Zooms by the specified delta value.
            </summary>
            <param name="delta">
            The delta value.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.ZoomExtents(System.Double)">
            <summary>
            Zooms to the extents of the model.
            </summary>
            <param name="animationTime">
            The animation time (milliseconds).
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.ManipulationCompleted"/> event occurs.
            </summary>
            <param name="e">
            The data for the event.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.ManipulationDelta"/> event occurs.
            </summary>
            <param name="e">
            The data for the event.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.UIElement.ManipulationStarted"/> event occurs.
            </summary>
            <param name="e">
            The data for the event.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Invoked when an unhandled MouseDown attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">
            The <see cref="T:System.Windows.Input.MouseButtonEventArgs"/> that contains the event data. This event data reports details about the mouse button that was pressed and the handled state.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)">
            <summary>
            Invoked when an unhandled StylusSystemGesture attached event reaches an element in its route that is derived from this class. Implement this method to add class handling for this event.
            </summary>
            <param name="e">
            The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs"/> that contains the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.BackViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The back view event handler.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.BottomViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The bottom view event handler.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.Clamp(System.Double,System.Double,System.Double)">
            <summary>
            Clamps the specified value between the limits.
            </summary>
            <param name="value">
            The value.
            </param>
            <param name="min">
            The min.
            </param>
            <param name="max">
            The max.
            </param>
            <returns>
            The clamp.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.FindPanVector(System.Single,System.Single)">
            <summary>
            Finds the pan vector.
            </summary>
            <param name="dx">
            The delta x.
            </param>
            <param name="dy">
            The delta y.
            </param>
            <returns>
            The <see cref="T:System.Numerics.Vector3"/> .
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.FrontViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The front view event handler.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.InitializeBindings">
            <summary>
            Initializes the input bindings.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.LeftViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The left view event handler.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.OnCameraChanged">
            <summary>
            The on camera changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.OnCompositionTargetRendering(System.Int64)">
            <summary>
            Called when [composition target rendering].
            </summary>
            <param name="ticks">The ticks.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Called when a key is pressed.
            </summary>
            <param name="e">
            The <see cref="T:System.Windows.Input.KeyEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.OnMouseWheel(System.Object,System.Windows.Input.MouseWheelEventArgs)">
            <summary>
            Called when the mouse wheel is moved.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The <see cref="T:System.Windows.Input.MouseWheelEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.OnTimeStep(System.Int64)">
            <summary>
            The on time step.
            </summary>
            <param name="ticks">
            The time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.OnViewportChanged">
            <summary>
            The on viewport changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.RefreshViewport">
            <summary>
            The refresh viewport.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.ResetCameraHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The reset camera event handler.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.RightViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The right view event handler.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.StopAnimations">
            <summary>
            The stop animations.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.TopViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The top view event handler.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraController.ZoomExtentsHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The Zoom extents event handler.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Controls.CompositionTargetEx">
            <summary>
            https://evanl.wordpress.com/2009/12/06/efficient-optimal-per-frame-eventing-in-wpf/
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Controls.IRenderCanvas">
            <summary>
            Canvas holds the RenderHost. Provide entry point or render surface for RenderHost to render to.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Controls.IRenderCanvas.DpiScale">
            <summary>
            Gets or sets the dpi scale.
            </summary>
            <value>
            The dpi scale.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Controls.IRenderCanvas.EnableDpiScale">
            <summary>
            Gets or sets a value indicating whether [enable dpi scale].
            </summary>
            <value>
              <c>true</c> if [enable dpi scale]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Controls.IRenderCanvas.RenderHost">
            <summary>
            Gets the render host.
            </summary>
            <value>
            The render host.
            </value>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.Controls.IRenderCanvas.ExceptionOccurred">
            <summary>
            Fired whenever an exception occurred on this object.
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Controls.RenderControl">
            <summary>
            A Renderable UserControl.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Controls.RenderControl.#ctor(System.Windows.Media.Visual)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.Controls.RenderControl"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Controls.RenderControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the background of the control.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Controls.RenderControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Controls.WinformHostExtend.Capture">
            <summary>
            Has to do this, otherwise the mouse point is wrong in mouse event.
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Controls.WinformHostExtend.FormMouseMoveEventArgs">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.RoutedEventArgs" />
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Controls.WinformHostExtend.FormMouseMoveEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Point,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.Controls.WinformHostExtend.FormMouseMoveEventArgs"/> class.
            </summary>
            <param name="routedEvent">The routed event.</param>
            <param name="p">The p.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="delta">The delta.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Controls.WinformHostExtend.FormMouseWheelEventArgs">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Input.MouseWheelEventArgs" />
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Controls.WinformHostExtend.FormMouseWheelEventArgs.#ctor(System.Windows.RoutedEvent,System.Windows.Input.MouseDevice,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.Controls.WinformHostExtend.FormMouseWheelEventArgs"/> class.
            </summary>
            <param name="routedEvent"></param>
            <param name="mouse">The mouse device associated with this event.</param>
            <param name="timestamp">The time when the input occurred.</param>
            <param name="delta">The amount the wheel has changed.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.DPFCanvas">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Controls.Image" />
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DPFCanvas.#cctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DPFCanvas.RenderHost">
            <summary>
            Gets or sets the render host.
            </summary>
            <value>
            The render host.
            </value>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.DPFCanvas.ExceptionOccurred">
            <summary>
            Fired whenever an exception occurred on this object.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DPFCanvas.#ctor(System.Boolean,System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DPFCanvas.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DPFCanvas.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DPFCanvas.StartD3D">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DPFCanvas.EndD3D">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DPFCanvas.OnIsFrontBufferAvailableChanged(System.Object,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DPFCanvas.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <summary>
            
            </summary>
            <param name="sizeInfo"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DPFCanvas.HandleExceptionOccured(System.Exception)">
            <summary>
            Invoked whenever an exception occurs. Stops rendering, frees resources and throws 
            </summary>
            <param name="exception">The exception that occured.</param>
            <returns><c>true</c> if the exception has been handled, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.DPFSurfaceSwapChain">
            <summary>
            
            </summary>
            <seealso cref="T:System.Windows.Controls.Image" />
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DPFSurfaceSwapChain.RenderHost">
            <summary>
            Gets or sets the render host.
            </summary>
            <value>
            The render host.
            </value>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.DPFSurfaceSwapChain.ExceptionOccurred">
            <summary>
            Fired whenever an exception occurred on this object.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DPFSurfaceSwapChain.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DPFSurfaceSwapChain.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DPFSurfaceSwapChain.StartD3D">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DPFSurfaceSwapChain.EndD3D">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DPFSurfaceSwapChain.OnRenderSizeChanged(System.Windows.SizeChangedInfo)">
            <summary>
            
            </summary>
            <param name="sizeInfo"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DPFSurfaceSwapChain.HandleExceptionOccured(System.Exception)">
            <summary>
            Invoked whenever an exception occurs. Stops rendering, frees resources and throws 
            </summary>
            <param name="exception">The exception that occured.</param>
            <returns><c>true</c> if the exception has been handled, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.DPFSurfaceSwapChain.D3DImageExt">
            <summary>
            Use a fake D3DImage to bump up frame rate.
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.DrawingContextExtensions">
            <summary>
            Extension methods for DrawingContext.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DrawingContextExtensions.DrawArc(System.Windows.Media.DrawingContext,System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Point,System.Windows.Point,System.Windows.Media.SweepDirection,System.Double,System.Double)">
            <summary>
            Draws the arc.
            </summary>
            <param name="dc">The dc.</param>
            <param name="brush">The brush.</param>
            <param name="pen">The pen.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="direction">The direction.</param>
            <param name="radiusX">The radius X.</param>
            <param name="radiusY">The radius Y.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DrawingContextExtensions.DrawArc(System.Windows.Media.DrawingContext,System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Double,System.Windows.Media.SweepDirection,System.Double,System.Double)">
            <summary>
            Draws the arc.
            </summary>
            <param name="dc">
            The dc.
            </param>
            <param name="brush">
            The brush.
            </param>
            <param name="pen">
            The pen.
            </param>
            <param name="position">
            The position.
            </param>
            <param name="startAngle">
            The start angle.
            </param>
            <param name="endAngle">
            The end angle.
            </param>
            <param name="direction">
            The direction.
            </param>
            <param name="radiusX">
            The radius X.
            </param>
            <param name="radiusY">
            The radius Y.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DrawingContextExtensions.DrawArc(System.Windows.Media.DrawingContext,System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws the arc.
            </summary>
            <param name="dc">
            The dc.
            </param>
            <param name="brush">
            The brush.
            </param>
            <param name="pen">
            The pen.
            </param>
            <param name="position">
            The position.
            </param>
            <param name="startAngle">
            The start angle.
            </param>
            <param name="endAngle">
            The end angle.
            </param>
            <param name="radiusX">
            The radius X.
            </param>
            <param name="radiusY">
            The radius Y.
            </param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ManipulationActionConverter">
            <summary>
            Converts a <see cref="T:HelixToolkit.Wpf.SharpDX.ManipulationAction"/> object to and from other types.
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ManipulationGesture">
            <summary>
            Defines a touch input gesture that can be used to invoke a command.
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ManipulationGestureConverter">
            <summary>
            Converts a <see cref="T:HelixToolkit.Wpf.SharpDX.ManipulationGesture"/> object to and from other types.
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.MouseGestureHandler">
            <summary>
            An abstract base class for the mouse gesture handlers.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.#ctor(HelixToolkit.Wpf.SharpDX.CameraController)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.MouseGestureHandler"/> class.
            </summary>
            <param name="controller">
            The camera controller.
            </param>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.Origin">
            <summary>
            Gets the origin.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.Camera">
            <summary>
            Gets the camera.
            </summary>
            <value>The camera.</value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.CameraMode">
            <summary>
            Gets the camera mode.
            </summary>
            <value>The camera mode.</value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.LastPoint">
            <summary>
            Gets or sets the last point (in 2D screen coordinates).
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.LastPoint3D">
            <summary>
            Gets or sets the last point (in 3D world coordinates).
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.Inv">
            <summary>
            Use to invert the left handed system
            </summary>
            <value>
            The inv.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.ModelUpDirection">
            <summary>
            Gets the model up direction.
            </summary>
            <value>The model up direction.</value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.MouseDownNearestPoint3D">
            <summary>
            Gets or sets the mouse down point at the nearest hit element (3D world coordinates).
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.MouseDownNearestModelBoundCenter">
            <summary>
            Gets or sets the mouse down nearest hit model bounding box center.
            </summary>
            <value>
            The mouse down nearest model bound center.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.MouseDownPoint">
            <summary>
            Gets or sets the mouse down point (2D screen coordinates).
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.MouseDownPoint3D">
            <summary>
            Gets or sets the mouse down point (3D world coordinates).
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.RotationSensitivity">
            <summary>
            Gets the rotation sensitivity.
            </summary>
            <value>The rotation sensitivity.</value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.Viewport">
            <summary>
            Gets the viewport.
            </summary>
            <value>The viewport.</value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.ZoomSensitivity">
            <summary>
            Gets the zoom sensitivity.
            </summary>
            <value>The zoom sensitivity.</value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.Completed(System.Windows.Point)">
            <summary>
            Occurs when the manipulation is completed.
            </summary>
            <param name="e">
            The <see cref="T:System.Windows.Point"/> instance containing the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.Delta(System.Windows.Point)">
            <summary>
            Occurs when the position is changed during a manipulation.
            </summary>
            <param name="e">
            The <see cref="T:System.Windows.Point"/> instance containing the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.Execute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Executes the mouse gesture command.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.Started(System.Windows.Point)">
            <summary>
            Occurs when the manipulation is started.
            </summary>
            <param name="e">
            The <see cref="T:System.Windows.Point"/> instance containing the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.UnProject(System.Windows.Point,System.Numerics.Vector3,System.Numerics.Vector3)">
            <summary>
            Un-projects a point from the screen (2D) to a point on plane (3D)
            </summary>
            <param name="p">
            The 2D point.
            </param>
            <param name="position">
            plane position
            </param>
            <param name="normal">
            plane normal
            </param>
            <returns>
            A 3D point.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.UnProject(System.Windows.Point)">
            <summary>
            Un-projects a point from the screen (2D) to a point on the plane trough the camera target point.
            </summary>
            <param name="p">
            The 2D point.
            </param>
            <returns>
            A 3D point.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.CanExecute">
            <summary>
            Occurs when the command associated with this handler initiates a check to determine whether the command can be executed on the command target.
            </summary>
            <returns>
            True if the execution can continue.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.GetCursor">
            <summary>
            Gets the cursor for the gesture.
            </summary>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.GetRay(System.Windows.Point)">
            <summary>
            Get the ray into the view volume given by the position in 2D (screen coordinates)
            </summary>
            <param name="position">
            A 2D point.
            </param>
            <returns>
            A ray
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.OnInertiaStarting(System.Double)">
            <summary>
            Called when inertia is starting.
            </summary>
            <param name="elapsedTime">
            The elapsed time (milliseconds).
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.OnMouseDown(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            Called when the mouse button is pressed down.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The <see cref="T:System.Windows.Input.MouseEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            The on mouse move.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.OnMouseUp(System.Object,System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            The on mouse up.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.Project(System.Numerics.Vector3)">
            <summary>
            Calculate the screen position of a 3D point.
            </summary>
            <param name="p">
            The 3D point.
            </param>
            <returns>
            The 2D point.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MouseGestureHandler.SetMouseDownPoint(System.Windows.Point)">
            <summary>
            Sets mouse down point.
            </summary>
            <param name="position">
            The position.
            </param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.VirtualTouchDevice">
            <summary>
            A virtual <see cref="T:System.Windows.Input.TouchDevice"/> enabling Windows.Forms controls to generate Touch/Manipulation-Events.
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ZoomHandler">
            <summary>
            Handles zooming.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ZoomHandler.changeFieldOfView">
            <summary>
            The change field of view.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ZoomHandler.zoomPoint">
            <summary>
            The zoom point.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ZoomHandler.zoomPoint3D">
            <summary>
            The 3D zoom point.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomHandler.#ctor(HelixToolkit.Wpf.SharpDX.CameraController,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.ZoomHandler"/> class.
            </summary>
            <param name="controller">
            The camera controller.
            </param>
            <param name="changeFieldOfView">
            if set to <c>true</c> [change field of view].
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomHandler.Completed(System.Windows.Point)">
            <summary>
            Occurs when the manipulation is completed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Point"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomHandler.Delta(System.Windows.Point)">
            <summary>
            Occurs when the position is changed during a manipulation.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Point"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomHandler.Started(System.Windows.Point)">
            <summary>
            Occurs when the manipulation is started.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Point"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomHandler.Zoom(System.Double)">
            <summary>
            Zooms the view.
            </summary>
            <param name="delta">
            The delta.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomHandler.Zoom(System.Double,System.Numerics.Vector3,System.Boolean,System.Boolean)">
            <summary>
            Zooms the view around the specified point.
            </summary>
            <param name="delta">
            The delta.
            </param>
            <param name="zoomAround">
            The zoom around.
            </param>
            <param name="isTouch"></param>
            <param name="stopOther">Stop other manipulation</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomHandler.MoveCameraPosition(System.Numerics.Vector3,System.Boolean)">
            <summary>
            Changes the camera position by the specified vector.
            </summary>
            <param name="delta">The translation vector in camera space (z in look direction, y in up direction, and x perpendicular to the two others)</param>
            <param name="stopOther">Stop other manipulation</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomHandler.ZoomByChangingCameraWidth(System.Double,System.Numerics.Vector3)">
            <summary>
            The change camera width.
            </summary>
            <param name="delta">
            The delta.
            </param>
            <param name="zoomAround">
            The zoom around.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomHandler.CanExecute">
            <summary>
            Occurs when the command associated with this handler initiates a check to determine whether the command can be executed on the command target.
            </summary>
            <returns>
            True if the execution can continue.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomHandler.GetCursor">
            <summary>
            Gets the cursor for the gesture.
            </summary>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomHandler.ChangeCameraDistance(System.Double@,System.Numerics.Vector3)">
            <summary>
            Changes the camera distance.
            </summary>
            <param name="delta">The delta.</param>
            <param name="zoomAround">The zoom around point.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ZoomRectangleHandler">
            <summary>
            Handles rectangle zooming.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ZoomRectangleHandler.zoomRectangle">
            <summary>
            The zoom rectangle.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomRectangleHandler.#ctor(HelixToolkit.Wpf.SharpDX.CameraController)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.ZoomRectangleHandler"/> class.
            </summary>
            <param name="controller">
            The camera controller.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomRectangleHandler.Completed(System.Windows.Point)">
            <summary>
            Occurs when the manipulation is completed.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Point"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomRectangleHandler.Delta(System.Windows.Point)">
            <summary>
            Occurs when the position is changed during a manipulation.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Point"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomRectangleHandler.Started(System.Windows.Point)">
            <summary>
            Occurs when the manipulation is started.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Point"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomRectangleHandler.ZoomRectangle(System.Windows.Rect)">
            <summary>
            Zooms to the specified rectangle.
            </summary>
            <param name="rectangle">
            The zoom rectangle.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomRectangleHandler.CanExecute">
            <summary>
            Occurs when the command associated with this handler initiates a check to determine whether the command can be executed on the command target.
            </summary>
            <returns>True if the execution can continue.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ZoomRectangleHandler.GetCursor">
            <summary>
            Gets the cursor for the gesture.
            </summary>
            <returns>A cursor.</returns>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.RectangleAdorner">
            <summary>
            An adorner showing a rectangle with a crosshair in the middle. This is shown when zooming a rectangle.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.RectangleAdorner.crossHairSize">
            <summary>
            The cross hair size.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.RectangleAdorner.pen">
            <summary>
            The pen.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.RectangleAdorner.pen2">
            <summary>
            The pen 2.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RectangleAdorner.#ctor(System.Windows.UIElement,System.Windows.Rect,System.Windows.Media.Color,System.Windows.Media.Color,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.RectangleAdorner"/> class.
            </summary>
            <param name="adornedElement">
            The adorned element.
            </param>
            <param name="rectangle">
            The rectangle.
            </param>
            <param name="color1">
            The color1.
            </param>
            <param name="color2">
            The color2.
            </param>
            <param name="thickness1">
            The thickness1.
            </param>
            <param name="thickness2">
            The thickness2.
            </param>
            <param name="crossHairSize">
            Size of the cross hair.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RectangleAdorner.#ctor(System.Windows.UIElement,System.Windows.Rect,System.Windows.Media.Color,System.Windows.Media.Color,System.Double,System.Double,System.Double,System.Windows.Media.DashStyle)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.RectangleAdorner"/> class.
            </summary>
            <param name="adornedElement">
            The adorned element.
            </param>
            <param name="rectangle">
            The rectangle.
            </param>
            <param name="color1">
            The color1.
            </param>
            <param name="color2">
            The color2.
            </param>
            <param name="thickness1">
            The thickness1.
            </param>
            <param name="thickness2">
            The thickness2.
            </param>
            <param name="crossHairSize">
            Size of the cross hair.
            </param>
            <param name="dashStyle2">
            The dash style2.
            </param>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.RectangleAdorner.Rectangle">
            <summary>
            Gets or sets Rectangle.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RectangleAdorner.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Called when rendering.
            </summary>
            <param name="dc">
            The dc.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RenderUtil.CreateBuffer``1(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.BindFlags,System.Int32,``0[],System.Int32)">
            <summary>
            Create buffer
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RenderUtil.CreateBuffer``1(SharpDX.Direct3D11.Device,SharpDX.Direct3D11.BindFlags,System.Int32,``0[])">
            <summary>
            Create buffer
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ScreenDuplicationViewport3DX.EffectsManagerProperty">
            <summary>
            The EffectsManager property.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenDuplicationViewport3DX.EffectsManager">
            <summary>
            Gets or sets the <see cref="T:HelixToolkit.SharpDX.IEffectsManager"/>.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ScreenDuplicationViewport3DX.RenderTechniqueProperty">
            <summary>
            The Render Technique property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenDuplicationViewport3DX.RenderTechnique">
            <summary>
            Gets or sets value for the shading model shading is used
            </summary>
            <value>
            <c>true</c> if deferred shading is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ScreenDuplicationViewport3DX.RenderExceptionProperty">
            <summary>
            The render exception property.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenDuplicationViewport3DX.RenderException">
            <summary>
            Gets or sets the <see cref="T:System.Exception"/> that occured at rendering subsystem.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ScreenDuplicationViewport3DX.MessageTextProperty">
            <summary>
            The message text property.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenDuplicationViewport3DX.MessageText">
            <summary>
            Gets or sets the message text.
            </summary>
            <value>
            The message text.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ScreenDuplicationViewport3DX.BackgroundColorProperty">
            <summary>
            Background Color property.this.RenderHost
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenDuplicationViewport3DX.BackgroundColor">
            <summary>
            Background Color
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.ScreenDuplicationViewport3DX.RenderExceptionOccurred">
            <summary>
            Fired whenever an exception occurred at rendering subsystem.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ScreenDuplicationViewport3DX.EffectsManagerPropertyChanged">
            <summary>
            Handles the change of the effects manager.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ScreenDuplicationViewport3DX.RenderTechniquePropertyChanged">
            <summary>
            Handles the change of the render technique        
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ScreenDuplicationViewport3DX.HandleRenderException(System.Object,HelixToolkit.SharpDX.Utilities.RelayExceptionEventArgs)">
            <summary>
            Handles a rendering exception.
            </summary>
            <param name="sender">The event source.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.TargetSymbolAdorner">
            <summary>
            A Target symbol adorner. This is shown in the HelixViewport3D when manipulating the camera with the mouse.
            </summary>
            <remarks>
            Inspired by Google Earth...
            </remarks>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.TargetSymbolAdorner.#ctor(System.Windows.UIElement,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.TargetSymbolAdorner"/> class.
            </summary>
            <param name="adornedElement">
            The adorned element.
            </param>
            <param name="position">
            The position.
            </param>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.TargetSymbolAdorner.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.TargetSymbolAdorner.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
            Called when rendering.
            </summary>
            <param name="dc">
            The drawing context.
            </param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Viewport3DX">
            <summary>
            Provides a Viewport control.
            </summary>
            <summary>
            Provides the events for Viewport3DX.
            </summary>
            <summary>
            Provides the dependency properties for Viewport3DX.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.orthographicCamera">
            <summary>
            The orthographic camera.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.perspectiveCamera">
            <summary>
            The perspective camera.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.cameraController">
            <summary>
            The camera controller.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.currentHit">
            <summary>
            The nearest valid result during a hit test.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.RenderHost">
            <summary>
            Gets the render host.
            </summary>
            <value>
            The render host.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CameraCore">
            <summary>
            Gets the camera core.
            </summary>
            <value>
            The camera core.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.Items">
            <summary>
            Gets the items.
            </summary>
            <value>
            The items.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.Renderables">
            <summary>
            <para>Return enumerable of all the rederable elements</para>
            <para>If enabled shared model mode, the returned rederables are current viewport renderable plus shared models</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.D2DRenderables">
            <summary>
            Gets the d2d renderables.
            </summary>
            <value>
            The d2d renderables.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.RenderContext">
            <summary>
            Get current render context
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.currentHit2D">
            <summary>
            Current 2D model hit
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.hasBeenLoadedBefore">
            <summary>
            The "control has been loaded before" flag.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.rectangleAdorner">
            <summary>
              The rectangle adorner.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.targetAdorner">
            <summary>
              The target adorner.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.touchDownDevice">
            <summary>
            The <see cref="T:System.Windows.Input.TouchDevice"/> of the first TouchDown.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.renderHostInternal">
            <summary>
            Gets or sets the render host internal.
            </summary>
            <value>
            The render host internal.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.viewCube">
            <summary>
            The view cube.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.coordinateView">
            <summary>
            The coordinate view.
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.Viewport3DX.RenderExceptionOccurred">
            <summary>
            Fired whenever an exception occurred at rendering subsystem.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.hits">
            <summary>
            The nearest valid result during a hit test.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.SharedModelContainerInternal">
            <summary>
            Gets or sets the shared model container internal.
            </summary>
            <value>
            The shared model container internal.
            </value>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.Viewport3DX.OnRendered">
            <summary>
            Occurs when each render frame finished rendering. Called directly from RenderHost after each frame. 
            Use this event carefully. Unsubscrible this event when not used. Otherwise may cause performance issue.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.#cctor">
            <summary>
            Initializes static members of the <see cref="T:HelixToolkit.Wpf.SharpDX.Viewport3DX" /> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.Viewport3DX" /> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.AddMoveForce(System.Double,System.Double,System.Double)">
            <summary>
            Adds the specified move force.
            </summary>
            <param name="dx">
            The delta x. 
            </param>
            <param name="dy">
            The delta y. 
            </param>
            <param name="dz">
            The delta z. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.AddMoveForce(System.Windows.Media.Media3D.Vector3D)">
            <summary>
            Adds the specified move force.
            </summary>
            <param name="delta">
            The delta. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.AddPanForce(System.Double,System.Double)">
            <summary>
            Adds the specified pan force.
            </summary>
            <param name="dx">
            The delta x. 
            </param>
            <param name="dy">
            The delta y. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.AddPanForce(System.Windows.Media.Media3D.Vector3D)">
            <summary>
            The add pan force.
            </summary>
            <param name="pan">
            The pan. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.AddRotateForce(System.Double,System.Double)">
            <summary>
            The add rotate force.
            </summary>
            <param name="dx">
            The delta x. 
            </param>
            <param name="dy">
            The delta y. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.AddZoomForce(System.Double)">
            <summary>
            Adds the zoom force.
            </summary>
            <param name="dx">
            The delta. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.AddZoomForce(System.Double,System.Windows.Media.Media3D.Point3D)">
            <summary>
            Adds the zoom force.
            </summary>
            <param name="dx">
            The delta. 
            </param>
            <param name="zoomOrigin">
            The zoom origin. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.ChangeDirection(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
            <summary>
            Changes the direction of the camera.
            </summary>
            <param name="lookDir">
            The look direction. 
            </param>
            <param name="upDir">
            The up direction. 
            </param>
            <param name="animationTime">
            The animation time. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.FindNearestPoint(System.Windows.Point)">
            <summary>
            Finds the nearest 3D point in the scene.
            </summary>
            <param name="pt">
            The screen point (2D).
            </param>
            <returns>
            A Point3D or null.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.HideTargetAdorner">
            <summary>
            Hides the target adorner.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.HideZoomRectangle">
            <summary>
            Hides the zoom rectangle.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.InvalidateRender">
            <summary>
            Tries to invalidate the current render.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.InvalidateSceneGraph">
            <summary>
            Invalidates the scene graph.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.LookAt(System.Windows.Media.Media3D.Point3D)">
            <summary>
            Change the camera to look at the specified point.
            </summary>
            <param name="p">
            The point.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.LookAt(System.Windows.Media.Media3D.Point3D,System.Double)">
            <summary>
            Change the camera to look at the specified point.
            </summary>
            <param name="p">
            The point.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.LookAt(System.Windows.Media.Media3D.Point3D,System.Double,System.Double)">
            <summary>
            Change the camera to look at the specified point.
            </summary>
            <param name="p">
            The point.
            </param>
            <param name="distance">
            The distance.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.LookAt(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
            <summary>
            Change the camera to look at the specified point.
            </summary>
            <param name="p">
            The point.
            </param>
            <param name="direction">
            The direction.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
            <exception cref="T:HelixToolkit.HelixToolkitException">{0} is missing from the template.</exception>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.Reset">
            <summary>
            Resets the view.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.SetView(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
            <summary>
            Change the camera position and directions.
            </summary>
            <param name="newPosition">
            The new camera position.
            </param>
            <param name="newDirection">
            The new camera look direction.
            </param>
            <param name="newUpDirection">
            The new camera up direction.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowTargetAdorner(System.Windows.Point)">
            <summary>
            Shows the target adorner.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowZoomRectangle(System.Windows.Rect)">
            <summary>
            Shows the zoom rectangle.
            </summary>
            <param name="rect">The zoom rectangle.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.StartSpin(System.Windows.Vector,System.Windows.Point,System.Windows.Media.Media3D.Point3D)">
            <summary>
            Starts spinning.
            </summary>
            <param name="speed">The speed.</param>
            <param name="position">The position.</param>
            <param name="aroundPoint">The point to spin around.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.StopSpin">
            <summary>
              Stops the spinning.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomExtents(System.Windows.Media.Media3D.Rect3D,System.Double)">
            <summary>
            Zooms to the extents of the specified bounding box.
            </summary>
            <param name="bounds">
            The bounding box.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomExtents(System.Double)">
            <summary>
            Zooms to the extents of the model.
            </summary>
            <param name="animationTime">
            The animation time (milliseconds). 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.Attach(HelixToolkit.SharpDX.IRenderHost)">
            <summary>
            Attaches the elements to the specified host.
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.Detach">
            <summary>
            Detaches the elements.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.GetPressedMouseButtons">
            <summary>
            Gets the pressed mouse buttons as flags of <see cref="T:System.Windows.Input.MouseButton"/>.
            If no button is pressed (result is zero), then it was a touch down.
            </summary>
            <returns>
            The pressed mouse buttons as flags of <see cref="T:System.Windows.Input.MouseButton"/>.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.OnTouchDown(System.Windows.Input.TouchEventArgs)">
            <inheritdoc/>
            <remarks>
            This makes selection via Touch work without disabling the CameraController which uses Manipulation.
            </remarks>>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.OnMouseMove(System.Windows.Input.MouseEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.EmulateMouseMoveByTouch(System.Windows.Point)">
            <summary>
            Emulates the mouse move by touch.
            </summary>
            <param name="pt">The pt.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.UpdateCurrentPosition(System.Windows.Point)">
            <summary>
            Updates the property <see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CursorPosition"/>.
            </summary>
            <param name="pt">The current mouse hit point.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.OnTouchUp(System.Windows.Input.TouchEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
            <inheritdoc/>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.RaiseCameraChangedEvent">
            <summary>
            Raises the camera changed event.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.AnimateOpacity(System.Windows.UIElement,System.Double,System.Double)">
            <summary>
            Animates the opacity of the specified object.
            </summary>
            <param name="obj">
            The object to animate.
            </param>
            <param name="toOpacity">
            The to opacity.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.BackViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The back view event handler.
            </summary>
            <param name="sender">
            The sender. 
            </param>
            <param name="e">
            The event arguments. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.BottomViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The bottom view event handler.
            </summary>
            <param name="sender">
            The sender. 
            </param>
            <param name="e">
            The event arguments. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsModelUpDirectionY">
            <summary>
            Determines whether the model up direction is (0,1,0).
            </summary>
            <returns>
              <c>true</c> if the up direction is (0,1,0); otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.EffectsManagerPropertyChanged">
            <summary>
            Handles the change of the effects manager.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.RenderTechniquePropertyChanged(HelixToolkit.SharpDX.IRenderTechnique)">
            <summary>
            Handles the change of the render technique        
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.CameraPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes in the camera properties.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.Clamp(System.Double,System.Double,System.Double)">
            <summary>
            Clamps the specified value between the limits.
            </summary>
            <param name="value">
            The value. 
            </param>
            <param name="min">
            The min. 
            </param>
            <param name="max">
            The max. 
            </param>
            <returns>
            The clamp. 
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.ControlLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the control is loaded.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.ControlUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Called when the control is unloaded.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.FrontViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The front view event handler.
            </summary>
            <param name="sender">
            The sender. 
            </param>
            <param name="e">
            The event arguments. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.LeftViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The left view event handler.
            </summary>
            <param name="sender">
            The sender. 
            </param>
            <param name="e">
            The event arguments. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.OnCompositionTargetRendering">
            <summary>
            The rendering event handler.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.Update(System.TimeSpan)">
            <summary>
            </summary>
            <param name="timeStamp"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.OrthographicChanged">
            <summary>
            Called when the camera type is changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.HandleRenderException(System.Object,HelixToolkit.SharpDX.Utilities.RelayExceptionEventArgs)">
            <summary>
            Handles a rendering exception.
            </summary>
            <param name="sender">The event source.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.ResetHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Handles the reset command.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.RightViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The right view event handler.
            </summary>
            <param name="sender">
            The sender. 
            </param>
            <param name="e">
            The event arguments. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.SetDefaultGestures">
            <summary>
            Sets the default gestures.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.TopViewHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            The top view event handler.
            </summary>
            <param name="sender">
            The sender. 
            </param>
            <param name="e">
            The event arguments. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.UseDefaultGesturesChanged">
            <summary>
            The UseDefaultGestures property changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomExtentsHandler(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            Handles the zoom extents command.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Input.ExecutedRoutedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.MouseDownHitTest(System.Windows.Point,System.Windows.Input.InputEventArgs)">
            <summary>
            Handles hit testing on mouse down.
            </summary>
            <param name="pt">The hit point.</param>
            <param name="originalInputEventArgs">
            The original input event (which mouse button pressed?)
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.MouseMoveHitTest(System.Windows.Point,System.Windows.Input.InputEventArgs)">
            <summary>
            Handles hit testing on mouse move.
            </summary>
            <param name="pt">The hit point.</param>
            <param name="originalInputEventArgs">
            The original input (which mouse button pressed?)
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Viewport3DX.MouseUpHitTest(System.Windows.Point,System.Windows.Input.InputEventArgs)">
            <summary>
            Handles hit testing on mouse up.
            </summary>
            <param name="pt">The hit point.</param>
            <param name="originalInputEventArgs">
            The original input event (which mouse button pressed?)
            </param>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.Viewport3DX.MouseDown3D">
            <summary>
            Provide CLR accessors for the event 
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.Viewport3DX.MouseUp3D">
            <summary>
            Provide CLR accessors for the event 
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.Viewport3DX.MouseMove3D">
            <summary>
            Provide CLR accessors for the event 
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.Viewport3DX.FormMouseMove">
            <summary>
            Occurs when [form mouse move].
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.Viewport3DX.FormMouseWheel">
            <summary>
            Occurs when [form mouse wheel].
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.Viewport3DX.CameraChanged">
            <summary>
            Event when a property has been changed
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CameraChangedEvent">
            <summary>
            The camera changed event.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.BackgroundColorProperty">
            <summary>
            Background Color property.this.RenderHost
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.BelongsToParentWindowProperty">
            <summary>
            The belongs to parent window property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CameraProperty">
            <summary>
            The camera property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CameraInertiaFactorProperty">
            <summary>
            The camera inertia factor property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CameraModeProperty">
            <summary>
            The camera mode property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CameraRotationModeProperty">
            <summary>
            The camera rotation mode property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ChangeFieldOfViewCursorProperty">
            <summary>
            The change fov cursor property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.Content2DProperty">
            <summary>
            The content 2d property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemAxisXColorProperty">
            <summary>
            The coordinate system color X property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemAxisYColorProperty">
            <summary>
            The coordinate system Color Y property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemAxisZColorProperty">
            <summary>
            The coordinate system Color Z property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemHorizontalPositionProperty">
            <summary>
            The coordinate system horizontal position property. Relative to viewport center
            <para>Default: -0.8</para>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemLabelForegroundProperty">
            <summary>
            The coordinate system label foreground property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemLabelXProperty">
            <summary>
            The coordinate system label X property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemLabelYProperty">
            <summary>
            The coordinate system label Y property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemLabelZProperty">
            <summary>
            The coordinate system label Z property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemVerticalPositionProperty">
            <summary>
            The coordinate system vertical position property. Relative to viewport center.
            <para>Default: -0.8</para>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemSizeProperty">
            <summary>
            The coordinate system size property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CursorPositionProperty">
            <summary>
            Identifies the <see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CursorPosition"/> dependency property.
            </summary>
            <remarks>
            The return value equals ConstructionPlanePosition or CursorModelSnapPosition if CursorSnapToModels is not null.
            </remarks>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.CursorOnElementPositionProperty">
            <summary>
            Identifies the <see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CursorOnElementPosition"/> dependency property.
            </summary>
            <remarks>
            This property returns the position of the nearest model.
            </remarks>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.DefaultCameraProperty">
            <summary>
            The default camera property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.DpiScaleProperty">
            <summary>
            The dpi scale
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.EffectsManagerProperty">
            <summary>
            The EffectsManager property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableAutoOctreeUpdateProperty">
            <summary>
            The enable automatic octree update property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableCursorPositionProperty">
            <summary>
            Identifies the <see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableCursorPosition"/> dependency property.
            It enables (true) or disables (false) the calculation of the cursor position in the 3D Viewport
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableD2DRenderingProperty">
            <summary>
            The enable d2d rendering property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableDeferredRenderingProperty">
            <summary>
            <para>Enable deferred rendering. Use multithreading to call rendering procedure using different Deferred Context.</para> 
            <para>Deferred Rendering: https://msdn.microsoft.com/en-us/library/windows/desktop/ff476892.aspx</para>
            <para>https://docs.nvidia.com/gameworks/content/gameworkslibrary/graphicssamples/d3d_samples/d3d11deferredcontextssample.htm</para>
            <para>Note: Only if draw calls > 3000 to be benefit according to the online performance test.</para>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableDesignModeRenderingProperty">
            <summary>
            The enable design mode rendering property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableDpiScaleProperty">
            <summary>
            The enable dpi scale property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableMouseButtonHitTestProperty">
            <summary>
            Enable mouse button hit test
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableRenderFrustumProperty">
            <summary>
            Enable render frustum to avoid rendering model if it is out of view frustum
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableRenderOrderProperty">
            <summary>
            The enable render order property. <see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableRenderOrder"/>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableSharedModelModeProperty">
            <summary>
            Used to create multiple viewport with shared models.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableSSAOProperty">
            <summary>
            The enable ssao property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableSwapChainRenderingProperty">
            <summary>
            The enable swap chain rendering property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.FieldOfViewTextProperty">
            <summary>
            The field of view text property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.FixedRotationPointProperty">
            <summary>
            Rotate around this fixed rotation point only.<see cref="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.FixedRotationPointEnabledProperty"/> 
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.FixedRotationPointEnabledProperty">
            <summary>
            Enable fixed rotation mode and use FixedRotationPoint for rotation. Only works under CameraMode = Inspect
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.FrameRateProperty">
            <summary>
            The frame rate property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.FrameRateTextProperty">
            <summary>
            The frame rate text property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.FXAALevelProperty">
            <summary>
            The fxaa level property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.InfiniteSpinProperty">
            <summary>
            The infinite spin property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.InfoBackgroundProperty">
            <summary>
            The info background property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.InfoForegroundProperty">
            <summary>
            The info foreground property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsChangeFieldOfViewEnabledProperty">
            <summary>
            The is change field of view enabled property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsCoordinateSystemMoverEnabledProperty">
            <summary>
            The is coordinate system mover enabled property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsInertiaEnabledProperty">
            <summary>
            Identifies the <see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsInertiaEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsMoveEnabledProperty">
            <summary>
              The is move enabled property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsPanEnabledProperty">
            <summary>
            The is pan enabled property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsPinchZoomEnabledProperty">
            <summary>
            The IsTouchZoomEnabled property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsRotationEnabledProperty">
            <summary>
            The is rotation enabled property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsShadowMappingEnabledProperty">
            <summary>
            The is deferred shading enabled propery
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsThreeFingerPanningEnabledProperty">
            <summary>
            The enable touch rotate property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsTouchRotateEnabledProperty">
            <summary>
            The enable touch rotate property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsViewCubeEdgeClicksEnabledProperty">
            <summary>
            Identifies the <see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsViewCubeEdgeClicksEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsViewCubeMoverEnabledProperty">
            <summary>
            Identifies the <see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsViewCubeEdgeClicksEnabled"/> dependency property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsZoomEnabledProperty">
            <summary>
            The is zoom enabled property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.LeftRightPanSensitivityProperty">
            <summary>
            The left right pan sensitivity property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.LeftRightRotationSensitivityProperty">
            <summary>
            The left right rotation sensitivity property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ManualLookAtPointProperty">
            <summary>
            Manually move camera to look at a point in 3D space
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.MaximumFieldOfViewProperty">
            <summary>
            The maximum field of view property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.MessageTextProperty">
            <summary>
            The message text property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.MinimumFieldOfViewProperty">
            <summary>
            The minimum field of view property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.MinimumUpdateCountProperty">
            <summary>
            The minimum update count property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ModelUpDirectionProperty">
            <summary>
            The model up direction property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.MoveSensitivityProperty">
            <summary>
            Identifies the <see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.MoveSensitivity"/> dependency property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.MSAAProperty">
            <summary>
            Set MSAA Level
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.OITRenderModeProperty">
            <summary>
            Gets or sets a value indicating for Transparent objects render mode.
            <see cref="P:HelixToolkit.Wpf.SharpDX.MaterialGeometryModel3D.IsTransparent"/>, <see cref="P:HelixToolkit.Wpf.SharpDX.BillboardTextModel3D.IsTransparent"/>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.OITWeightDepthSlopeProperty">
            <summary>
            The oit weight depth slope property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.OITWeightModeProperty">
            <summary>
            The oit weight mode property
            <para>Please refer to http://jcgt.org/published/0002/02/09/ </para>
            <para>Linear0: eq7; Linear1: eq8; Linear2: eq9; NonLinear: eq10</para>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.OITWeightPowerProperty">
            <summary>
            The Order independent transparency rendering color weight power property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.OrthographicProperty">
            <summary>
            The orthographic property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.PageUpDownZoomSensitivityProperty">
            <summary>
            Identifies the <see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.PageUpDownZoomSensitivity"/> dependency property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.PanCursorProperty">
            <summary>
            The pan cursor property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.PinchZoomAtCenterProperty">
            <summary>
            The pinch zoom at center property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.RenderDetailOutputProperty">
            <summary>
            The render detail output property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.RenderExceptionProperty">
            <summary>
            The render exception property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.RotateAroundMouseDownPointProperty">
            <summary>
            The rotate around mouse down point property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.RotateCursorProperty">
            <summary>
            The rotate cursor property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.RotationSensitivityProperty">
            <summary>
            The rotation sensitivity property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.SharedModelContainerProperty">
            <summary>
            Binding to the element inherit with <see cref="T:HelixToolkit.SharpDX.IModelContainer"/> 
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowCameraInfoProperty">
            <summary>
            The show camera info property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowCameraTargetProperty">
            <summary>
            The show camera target property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowCoordinateSystemProperty">
            <summary>
            The show coordinate system property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowFrameDetailsProperty">
            <summary>
            The show frame rate property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowFrameRateProperty">
            <summary>
            The show frame rate property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowTriangleCountInfoProperty">
            <summary>
            The show triangle count info property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowViewCubeProperty">
            <summary>
            The show view cube property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.SpinReleaseTimeProperty">
            <summary>
            The spin release time property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.SSAOIntensityProperty">
            <summary>
            The ssao intensity property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.SSAOQualityProperty">
            <summary>
            The ssao quality property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.SSAOSamplingRadiusProperty">
            <summary>
            The ssao sampling radius property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.SubTitleProperty">
            <summary>
            The sub title property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.SubTitleSizeProperty">
            <summary>
            The sub title size property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.TextBrushProperty">
            <summary>
            The text brush property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.TitleProperty">
            <summary>
            The title property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.TitleBackgroundProperty">
            <summary>
            The title background property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.TitleFontFamilyProperty">
            <summary>
            The title font family property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.TitleSizeProperty">
            <summary>
            The title size property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.UpDownPanSensitivityProperty">
            <summary>
            The up down Pan sensitivity property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.UpDownRotationSensitivityProperty">
            <summary>
            The up down rotation sensitivity property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.UseDefaultGesturesProperty">
            <summary>
            The use default gestures property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ViewCubeHorizontalPositionProperty">
            <summary>
            The view cube horizontal position property. Relative to viewport center.
            <para>Default: 0.8</para>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ViewCubeSizeProperty">
            <summary>
            The view cube size property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ViewCubeTextureProperty">
            <summary>
            The view cube texture. It must be a 6x1 (ex: 600x100) ratio image. You can also use BitmapExtension.CreateViewBoxBitmapSource to create
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ViewCubeVerticalPositionProperty">
            <summary>
            The view cube vertical position property. Relative to viewport center.
            <para>Default: -0.8</para>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomAroundMouseDownPointProperty">
            <summary>
            The zoom around mouse down point property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomCursorProperty">
            <summary>
            The zoom cursor property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomDistanceLimitFarProperty">
            <summary>
            The far zoom distance limit property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomDistanceLimitNearProperty">
            <summary>
            The near zoom distance limit property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomExtentsWhenLoadedProperty">
            <summary>
            The zoom extents when loaded property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomRectangleCursorProperty">
            <summary>
            The zoom rectangle cursor property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomSensitivityProperty">
            <summary>
            The zoom sensitivity property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.AllowLeftRightRotation">
            <summary>
            Gets or sets a value indicating whether globally [allow left right rotation].
            </summary>
            <value>
              <c>true</c> if [allow left right rotation]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.AllowUpDownRotation">
            <summary>
            Gets or sets a value indicating whether globally [allow up down rotation].
            </summary>
            <value>
              <c>true</c> if [allow up down rotation]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.BackgroundColor">
            <summary>
            Background Color
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.BelongsToParentWindow">
            <summary>
            Gets or sets a value indicating if the life cycle of the viewport
            depends on the first parent window found in the actual visual tree.
            </summary>
            <value>
            <c>true</c> if the viewport belongs to the first parent window; otherwise, <c>false</c>
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.Camera">
            <summary>
            Gets or sets the camera.
            </summary>
            <value>
            The camera.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CameraInertiaFactor">
            <summary>
            Gets or sets the camera inertia factor.
            </summary>
            <value>
            The camera inertia factor.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CameraMode">
            <summary>
            Gets or sets the camera mode.
            </summary>
            <value>
            The camera mode.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CameraRotationMode">
            <summary>
            Gets or sets the camera rotation mode.
            </summary>
            <value>
            The camera rotation mode.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ChangeFieldOfViewCursor">
            <summary>
            Gets or sets the change field of view cursor.
            </summary>
            <value>
            The change field of view cursor.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.Content2D">
            <summary>
            Gets or sets the content2d.
            </summary>
            <value>
            The content2 d.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemAxisXColor">
            <summary>
            Gets or sets the coordinate system color X.
            </summary>
            <value>
            The coordinate system color X.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemAxisYColor">
            <summary>
            Gets or sets the coordinate system color Y.
            </summary>
            <value>
            The coordinate system color T.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemAxisZColor">
            <summary>
            Gets or sets the coordinate system color Z.
            </summary>
            <value>
            The coordinate system color Z.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemHorizontalPosition">
            <summary>
            Gets or sets the horizontal position of the coordinate system viewport. Relative to the viewport center.
            <para>Default: -0.8</para>
            </summary>
            <value>
            The horizontal position.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemLabelForeground">
            <summary>
            Gets or sets the color of the coordinate system label.
            </summary>
            <value>
            The color of the coordinate system label.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemLabelX">
            <summary>
            Gets or sets the coordinate system label X.
            </summary>
            <value>
            The coordinate system label X.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemLabelY">
            <summary>
            Gets or sets the coordinate system label Y.
            </summary>
            <value>
            The coordinate system label Y.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemLabelZ">
            <summary>
            Gets or sets the coordinate system label Z.
            </summary>
            <value>
            The coordinate system label Z.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemSize">
            <summary>
            Gets or sets the width of the coordinate system viewport.
            </summary>
            <value>
            The width of the coordinate system viewport.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CoordinateSystemVerticalPosition">
            <summary>
            Gets or sets the vertical position of the coordinate system viewport. Relative to the viewport center
            <para>Default: -0.8</para>
            </summary>
            <value>
            The vertical position.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CursorPosition">
            <summary>
            Gets the current cursor position.
            </summary>
            <value>
            The current cursor position.
            </value>
            <remarks>
            The <see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableCursorPosition" /> property must be set to true to enable updating of this property.
            </remarks>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CursorOnElementPosition">
            <summary>
            Gets the current cursor position on the nearest model. If the model is not hit, the position is <c>null</c>.
            </summary>
            <value>
            The position of the model intersection.
            </value>
            <remarks>
            The <see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableCursorPosition" /> property must be set to <c>true</c> to enable updating of this property.
            </remarks>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.DefaultCamera">
            <summary>
            Gets or sets the default camera.
            </summary>
            <value>
            The default camera.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.DpiScale">
            <summary>
            Gets or sets the dpi scale. For example, if dpi scale is set to 200% in windows, this value must be set to 2.
            </summary>
            <value>
            The dpi scale.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EffectsManager">
            <summary>
            Gets or sets the <see cref="T:HelixToolkit.SharpDX.IEffectsManager"/>.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableAutoOctreeUpdate">
            <summary>
            Gets or sets a value indicating whether [enable automatic update octree for geometry models].
            </summary>
            <value>
              <c>true</c> if [enable automatic octree update]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableCursorPosition">
            <summary>
            Gets or sets a value indicating whether calculation of the <see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CursorPosition" /> properties is enabled.
            </summary>
            <value>
              <c>true</c> if calculation is enabled; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableD2DRendering">
            <summary>
            Gets or sets a value indicating whether [enable direct2D rendering]. Default is On
            </summary>
            <value>
              <c>true</c> if [render d2d]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableDeferredRendering">
            <summary>
            <para>Enable deferred rendering. Use multithreading to call rendering procedure using different Deferred Context.</para> 
            <para>Deferred Rendering: https://msdn.microsoft.com/en-us/library/windows/desktop/ff476892.aspx</para>
            <para>https://docs.nvidia.com/gameworks/content/gameworkslibrary/graphicssamples/d3d_samples/d3d11deferredcontextssample.htm</para>
            <para>Note: Only if draw calls > 3000 to be benefit according to the online performance test.</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableDesignModeRendering">
            <summary>
            Gets or sets a value indicating whether [enable design mode rendering].
            </summary>
            <value>
              <c>true</c> if [enable design mode rendering]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableDpiScale">
            <summary>
            Gets or sets a value indicating whether [enable dpi scale].
            Enable this option if you want to render high definition image with using high definition monitor and using dpi scaling in windows.
            This option may impact rendering performance due to higher resolution.
            </summary>
            <value>
              <c>true</c> if [enable dpi scale]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableMouseButtonHitTest">
            <summary>
            Enable mouse button hit test
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableRenderFrustum">
            <summary>
            Enable render frustum to skip rendering model if model is out of the camera bounding frustum
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableRenderOrder">
            <summary>
            Gets or sets a value indicating whether [enable render order]. 
            Specify render order in <see cref="P:HelixToolkit.Wpf.SharpDX.Element3D.RenderOrder"/>. 
            Scene node will be sorted by the <see cref="P:HelixToolkit.Wpf.SharpDX.Element3D.RenderOrder"/> during rendering.
            </summary>
            <value>
              <c>true</c> if [enable manual render order]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableSharedModelMode">
            <summary>
            Used to create multiple viewport with shared models.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableSSAO">
            <summary>
            Gets or sets a value indicating whether [enable ScreenSpaced Ambient Occlusion].
            </summary>
            <value>
              <c>true</c> if [enable ssao]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.EnableSwapChainRendering">
            <summary>
            <para>Use HwndHost as rendering surface, swapchain for rendering. Much faster than using D3DImage.</para> 
            <para>Drawbacks: The rendering surface will cover all WPF controls in the same Viewport region. Move controls out of viewport region to solve this problem.</para>
            <para>For displaying ViewCube and CoordinateSystem, separate Model needs to create to render along with the other models. WPF viewport will not be visibled.</para>
            <para>Note: Enable deferred rendering will use seperate rendering thread or rendering.</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.FieldOfViewText">
            <summary>
            Gets or sets the field of view text.
            </summary>
            <value>
            The field of view text.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.FixedRotationPoint">
            <summary>
            Rotate around this fixed rotation point only.<see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.FixedRotationPointEnabled"/> 
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.FixedRotationPointEnabled">
            <summary>
            Enable fixed rotation mode and use <see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.FixedRotationPoint"/>  for rotation. Only works under <see cref="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.CameraMode"/> = Inspect
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.FrameRate">
            <summary>
            Gets or sets the frame rate.
            </summary>
            <value>
            The frame rate.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.FrameRateText">
            <summary>
            Gets or sets the frame rate text.
            </summary>
            <value>
            The frame rate text.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.FXAALevel">
            <summary>
            Gets or sets the fxaa. If MSAA is set, FXAA will be disabled automatically
            </summary>
            <value>
            The enable fxaa.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IncreaseSwapchainFPS">
            <summary>
            Increase swapchain fps by speed up the wpf composition target frame rate.
            This may negatively impact the performance on low end graphics card.
            Default is enabled.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.InfiniteSpin">
            <summary>
            Gets or sets a value indicating whether infinite spin is enabled.
            </summary>
            <value>
            <c>true</c> if infinite spin is enabled; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.InfoBackground">
            <summary>
            Gets or sets the background brush for the CameraInfo and TriangleCount fields.
            </summary>
            <value>
            The info background.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.InfoForeground">
            <summary>
            Gets or sets the foreground brush for informational text.
            </summary>
            <value>
            The foreground brush.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsChangeFieldOfViewEnabled">
            <summary>
            Gets or sets a value indicating whether change field of view is enabled.
            </summary>
            <value>
            <c>true</c> if change field of view is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsCoordinateSystemMoverEnabled">
            <summary>
            Gets or sets a value indicating whether coordinate system mover enabled.
            </summary>
            <value>
              <c>true</c> if coordinate system mover enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsInertiaEnabled">
            <summary>
            Gets or sets a value indicating whether inertia is enabled for the camera manipulations.
            </summary>
            <value><c>true</c> if inertia is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsMoveEnabled">
            <summary>
              Gets or sets a value indicating whether move is enabled.
            </summary>
            <value> <c>true</c> if move is enabled; otherwise, <c>false</c> . </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsPanEnabled">
            <summary>
            Gets or sets a value indicating whether pan is enabled.
            </summary>
            <value>
            <c>true</c> if pan is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsPinchZoomEnabled">
            <summary>
            Gets or sets a value indicating whether two finger pinch zoom is enabled.
            </summary>
            <value>
            <c>true</c> if pinch zoom is enabled; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsRotationEnabled">
            <summary>
            Gets or sets a value indicating whether rotation is enabled.
            </summary>
            <value>
            <c>true</c> if rotation is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsShadowMappingEnabled">
            <summary>
            Gets or sets a value indicating whether shadow mapping is enabled
            </summary>
            <value>
            <c>true</c> if deferred shading is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsThreeFingerPanningEnabled">
            <summary>
            Gets or sets a value indicating whether [enable three finger panning].
            </summary>
            <value>
              <c>true</c> if [enable three finger panning]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsTouchRotateEnabled">
            <summary>
            Gets or sets a value indicating whether [enable one finger touch rotate].
            </summary>
            <value>
              <c>true</c> if [enable touch rotate]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsViewCubeEdgeClicksEnabled">
            <summary>
            Gets or sets if the view cube edge clickable.
            </summary>
            <value>
            Boolean for enable or disable.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsViewCubeMoverEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is view cube mover enabled.
            </summary>
            <value>
              <c>true</c> if this instance is view cube mover enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.IsZoomEnabled">
            <summary>
            Gets or sets a value indicating whether zoom is enabled.
            </summary>
            <value>
            <c>true</c> if zoom is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.LeftRightPanSensitivity">
            <summary>
            Gets or sets the sensitivity for pan by the left and right keys.
            </summary>
            <value>
            The pan sensitivity.
            </value>
            <remarks>
            Use -1 to invert the pan direction.
            </remarks>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.LeftRightRotationSensitivity">
            <summary>
            Gets or sets the sensitivity for rotation by the left and right keys.
            </summary>
            <value>
            The rotation sensitivity.
            </value>
            <remarks>
            Use -1 to invert the rotation direction.
            </remarks>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ManualLookAtPoint">
            <summary>
            Manually move camera to look at a point in 3D space. (Same as calling Viewport3DX.LookAt() function)
            Since camera may have been moved by mouse, the value gets does not reflect the actual point camera currently looking at.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.MaximumFieldOfView">
            <summary>
            Gets or sets the maximum field of view.
            </summary>
            <value>
            The maximum field of view.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.MessageText">
            <summary>
            Gets or sets the message text.
            </summary>
            <value>
            The message text.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.MinimumFieldOfView">
            <summary>
            Gets or sets the minimum field of view.
            </summary>
            <value>
            The minimum field of view.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.MinimumUpdateCount">
            <summary>
            The update count. Used to render at least N frames for each InvalidateRenderer. 
            D3DImage sometimes not getting refresh if only render once.
            Default = 6.
            </summary>
            <value>
            The minimum update count.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ModelUpDirection">
            <summary>
            Gets or sets the model up direction.
            </summary>
            <value>
            The model up direction.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.MoveSensitivity">
            <summary>
            Gets or sets the move sensitivity.
            </summary>
            <value> The move sensitivity. </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.MSAA">
            <summary>
            Set MSAA level. If set to Two/Four/Eight, the actual level is set to minimum between Maximum and Two/Four/Eight
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.OITDepthPeelingIteration">
            <summary>
            Sets or gets Order independent transparency depth peeling mode iteration.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.OITRenderMode">
            <summary>
            Gets or sets order independent transparency render mode
            <see cref="P:HelixToolkit.Wpf.SharpDX.MaterialGeometryModel3D.IsTransparent"/>, <see cref="P:HelixToolkit.Wpf.SharpDX.BillboardTextModel3D.IsTransparent"/>
            </summary>
            <value>
              <c>true</c> if [enable oit rendering]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.OITWeightDepthSlope">
            <summary>
            Gets or sets the oit weight depth slope. Used to increase resolution for particular range of depth values. 
            <para>If value = 2, the depth range from 0-0.5 expands to 0-1 to increase resolution. However, values from 0.5 - 1 will be pushed to 1</para>
            </summary>
            <value>
            The oit weight depth slope.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.OITWeightMode">
            <summary>
            Gets or sets the oit weight mode.
            <para>Please refer to http://jcgt.org/published/0002/02/09/ </para>
            <para>Linear0: eq7; Linear1: eq8; Linear2: eq9; NonLinear: eq10</para>
            </summary>
            <value>
            The oit weight mode.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.OITWeightPower">
            <summary>
            Gets or sets the Order independent transparency rendering color weight power. 
            Used for color weight calculation. 
            <para>Different near field/far field settings may need different power value for z value based weight calculation.</para>
            </summary>
            <value>
            The oit weight power.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.Orthographic">
            <summary>
            Gets or sets a value indicating whether an orthographic camera should be used.
            </summary>
            <value>
            <c>true</c> if orthographic; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.PageUpDownZoomSensitivity">
            <summary>
            Gets or sets the sensitivity for zoom by the page up and page down keys.
            </summary>
            <value>
            The zoom sensitivity.
            </value>
            <remarks>
            Use -1 to invert the zoom direction.
            </remarks>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.PanCursor">
            <summary>
            Gets or sets the pan cursor.
            </summary>
            <value>
            The pan cursor.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.PinchZoomAtCenter">
            <summary>
            Gets or sets a value indicating whether [pinch zoom at center] instead of at finger down point.
            Default is false.
            </summary>
            <value>
              <c>true</c> if [pinch zoom at center]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.RenderDetailOutput">
            <summary>
            Gets or sets the render detail output.
            </summary>
            <value>
            The render detail output.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.RenderException">
            <summary>
            Gets or sets the <see cref="T:System.Exception"/> that occured at rendering subsystem.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.RotateAroundMouseDownPoint">
            <summary>
            Gets or sets a value indicating whether to rotate around the mouse down point.
            </summary>
            <value>
            <c>true</c> if rotating around mouse down point; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.RotateCursor">
            <summary>
            Gets or sets the rotate cursor.
            </summary>
            <value>
            The rotate cursor.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.RotationSensitivity">
            <summary>
            Gets or sets the rotation sensitivity.
            </summary>
            <value>
            The rotation sensitivity.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.SharedModelContainer">
            <summary>
            Binding to the element inherit with <see cref="T:HelixToolkit.SharpDX.IModelContainer"/> 
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowCameraInfo">
            <summary>
            Gets or sets a value indicating whether to show camera info.
            </summary>
            <value>
            <c>true</c> if camera info should be shown; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowCameraTarget">
            <summary>
            Gets or sets a value indicating whether to show the camera target adorner.
            </summary>
            <value>
            <c>true</c> if camera target should be shown; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowCoordinateSystem">
            <summary>
            Gets or sets a value indicating whether to show the coordinate system.
            </summary>
            <value>
            <c>true</c> if coordinate system should be shown; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowFrameDetails">
            <summary>
            Gets or sets a value indicating whether [show frame details].
            </summary>
            <value>
              <c>true</c> if [show frame details]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowFrameRate">
            <summary>
            Gets or sets a value indicating whether to show frame rate.
            </summary>
            <value>
            <c>true</c> if frame rate should be shown; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowTriangleCountInfo">
            <summary>
            Gets or sets a value indicating whether to show the total number of triangles in the scene.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ShowViewCube">
            <summary>
            Gets or sets a value indicating whether to show the view cube.
            </summary>
            <value>
            <c>true</c> if the view cube should be shown; otherwise, <c>false</c> .
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.SpinReleaseTime">
            <summary>
            Gets or sets the spin release time in milliseconds (maximum allowed time to start a spin).
            </summary>
            <value>
            The spin release time (in milliseconds).
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.SSAOIntensity">
            <summary>
            Gets or sets the ssao intensity.
            </summary>
            <value>
            The ssao intensity.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.SSAOQuality">
            <summary>
            Gets or sets the ssao quality.
            </summary>
            <value>
            The ssao quality.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.SSAOSamplingRadius">
            <summary>
            Gets or sets the ssao sampling radius.
            </summary>
            <value>
            The ssao sampling radius.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.SubTitle">
            <summary>
            Gets or sets the sub title.
            </summary>
            <value>
            The sub title.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.SubTitleSize">
            <summary>
            Gets or sets the size of the sub title.
            </summary>
            <value>
            The size of the sub title.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.TextBrush">
            <summary>
            Gets or sets the text brush.
            </summary>
            <value>
            The text brush.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>
            The title.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.TitleBackground">
            <summary>
            Gets or sets the title background brush.
            </summary>
            <value>
            The title background.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.TitleFontFamily">
            <summary>
            Gets or sets the title font family.
            </summary>
            <value>
            The title font family.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.TitleSize">
            <summary>
            Gets or sets the size of the title.
            </summary>
            <value>
            The size of the title.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.UpDownPanSensitivity">
            <summary>
            Gets or sets the sensitivity for pan by the up and down keys.
            </summary>
            <value>
            The pan sensitivity.
            </value>
            <remarks>
            Use -1 to invert the pan direction.
            </remarks>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.UpDownRotationSensitivity">
            <summary>
            Gets or sets the sensitivity for rotation by the up and down keys.
            </summary>
            <value>
            The rotation sensitivity.
            </value>
            <remarks>
            Use -1 to invert the rotation direction.
            </remarks>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.UseDefaultGestures">
            <summary>
            Gets or sets a value indicating whether to use default mouse/keyboard gestures.
            </summary>
            <value>
              <c>true</c> if default gestures should be used; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ViewCubeHorizontalPosition">
            <summary>
            Gets or sets the horizontal position of the view cube viewport. Relative to viewport center
            <para>Default: 0.8</para>
            </summary>
            <value>
            The horizontal position.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ViewCubeSize">
            <summary>
            Gets or sets the width of the view cube viewport.
            </summary>
            <value>
            The width of the view cube viewport.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ViewCubeTexture">
            <summary>
            Gets or sets the view cube texture;
            The view cube texture. It must be a 6x1 (ex: 600x100) ratio image. You can also use BitmapExtension.CreateViewBoxBitmapSource to create
            </summary>
            <value>
            The view cube texture.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ViewCubeVerticalPosition">
            <summary>
            Gets or sets the vertical position of view cube viewport. Relative to viewport center
            <para>Default: -0.8</para>
            </summary>
            <value>
            The vertical position.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomAroundMouseDownPoint">
            <summary>
            Gets or sets a value indicating whether to zoom around the mouse down point.
            </summary>
            <value>
            <c>true</c> if zooming around the mouse down point; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomCursor">
            <summary>
            Gets or sets the zoom cursor.
            </summary>
            <value>
            The zoom cursor.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomDistanceLimitFar">
            <summary>
            Gets or sets a value indicating the far distance limit for zoom.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomDistanceLimitNear">
            <summary>
            Gets or sets a value indicating the near distance limit for zoom.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomExtentsWhenLoaded">
            <summary>
            Gets or sets a value indicating whether to Zoom extents when the control has loaded.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomRectangleCursor">
            <summary>
            Gets or sets the zoom rectangle cursor.
            </summary>
            <value>
            The zoom rectangle cursor.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Viewport3DX.ZoomSensitivity">
            <summary>
            Gets or sets the zoom sensitivity.
            </summary>
            <value>
            The zoom sensitivity.
            </value>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ViewportPartNames">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ViewportPartNames.PartCanvas">
            <summary>
            The canvas part name.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ViewportPartNames.PartAdornerLayer">
            <summary>
            The adorner layer part name.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ViewportPartNames.PartCoordinateView">
            <summary>
            The coordinate view part name.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ViewportPartNames.PartViewCube">
            <summary>
            The view cube part name.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ViewportPartNames.PartFrameStatisticView">
            <summary>
            The frame statistic view part name
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ViewportPartNames.PartTitleView">
            <summary>
            The part title view
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ViewportPartNames.PartItems">
            <summary>
            The part items used to inherit datacontext for children
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.VisualTargetPresentationSource">
            <summary>
                The VisualTargetPresentationSource represents the root
                of a visual subtree owned by a different thread that the
                visual tree in which is is displayed.
                https://blogs.msdn.microsoft.com/dwayneneed/2007/04/26/multithreaded-ui-hostvisual/
            </summary>
            <remarks>
                A HostVisual belongs to the same UI thread that owns the
                visual tree in which it resides.
                
                A HostVisual can reference a VisualTarget owned by another
                thread.
                
                A VisualTarget has a root visual.
                
                VisualTargetPresentationSource wraps the VisualTarget and
                enables basic functionality like Loaded, which depends on
                a PresentationSource being available.
            </remarks>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.VisualWrapper`1">
            <summary>
                The VisualWrapper simply integrates a raw Visual child into a tree
                of FrameworkElements.
                 https://blogs.msdn.microsoft.com/dwayneneed/2007/04/26/multithreaded-ui-hostvisual/
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.VisualWrapper">
            <summary>
                The VisualWrapper simply integrates a raw Visual child into a tree
                of FrameworkElements.
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.CameraExtensions">
            <summary>
            Provides extension methods for the cameras.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.ChangeDirection(HelixToolkit.Wpf.SharpDX.Camera,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
            <summary>
            Changes the direction of a camera.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="newLookDir">
            The new look direction.
            </param>
            <param name="newUpDirection">
            The new up direction.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.CopyTo(HelixToolkit.Wpf.SharpDX.ICameraModel,HelixToolkit.Wpf.SharpDX.Camera)">
            <summary>
            Copies the specified camera, converts field of view/width if necessary.
            </summary>
            <param name="source">
            The source camera.
            </param>
            <param name="dest">
            The destination camera.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.CreateDefaultCamera">
            <summary>
            Creates a default perspective camera.
            </summary>
            <returns>A perspective camera.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.FindPanVector(HelixToolkit.Wpf.SharpDX.Camera,System.Double,System.Double)">
            <summary>
            Finds the pan vector.
            </summary>
            <param name="camera">The camera.</param>
            <param name="dx">The delta x.</param>
            <param name="dy">The delta y.</param>
            <returns>
            The <see cref="T:System.Windows.Media.Media3D.Vector3D" /> .
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.GetInfo(HelixToolkit.Wpf.SharpDX.Camera)">
            <summary>
            Gets an information string about the specified camera.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <returns>
            The get info.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.GetInverseViewProjectionMatrix3D(HelixToolkit.Wpf.SharpDX.Camera,System.Double)">
            <summary>
            Gets the inverse camera transform.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="aspectRatio">
            The aspect ratio.
            </param>
            <returns>
            The inverse transform.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.GetInverseViewProjectionMatrix(HelixToolkit.SharpDX.Cameras.CameraCore,System.Double)">
            <summary>
            Gets the inverse camera transform.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="aspectRatio">
            The aspect ratio.
            </param>
            <returns>
            The inverse transform.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.GetProjectionMatrix3D(HelixToolkit.Wpf.SharpDX.Camera,System.Double)">
            <summary>
            Gets the projection matrix for the specified camera.
            </summary>
            <param name="camera">The camera.</param>
            <param name="aspectRatio">The aspect ratio.</param>
            <returns>The projection matrix.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.GetProjectionMatrix(HelixToolkit.SharpDX.Cameras.CameraCore,System.Double)">
            <summary>
            Gets the projection matrix for the specified camera.
            </summary>
            <param name="camera">The camera.</param>
            <param name="aspectRatio">The aspect ratio.</param>
            <returns>The projection matrix.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.GetViewProjectionMatrix3D(HelixToolkit.Wpf.SharpDX.Camera,System.Double)">
            <summary>
            Get the combined view and projection transform
            </summary>
            <param name="camera">The camera.</param>
            <param name="aspectRatio">The aspect ratio.</param>
            <returns>The total view and projection transform.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.GetViewProjectionMatrix(HelixToolkit.SharpDX.Cameras.CameraCore,System.Double)">
            <summary>
            Get the combined view and projection transform
            </summary>
            <param name="camera">The camera.</param>
            <param name="aspectRatio">The aspect ratio.</param>
            <returns>The total view and projection transform.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.GetViewMatrix3D(HelixToolkit.Wpf.SharpDX.Camera)">
            <summary>
            Obtains the view transform matrix for a camera. (see page 327)
            </summary>
            <param name="camera">
            Camera to obtain the ViewMatrix for
            </param>
            <returns>
            A Matrix object with the camera view transform matrix, or a Matrix with all zeros if the "camera" is null.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.GetViewMatrix(HelixToolkit.SharpDX.Cameras.CameraCore)">
            <summary>
            Obtains the view transform matrix for a camera. (see page 327)
            </summary>
            <param name="camera">
            Camera to obtain the ViewMatrix for
            </param>
            <returns>
            A Matrix object with the camera view transform matrix, or a Matrix with all zeros if the "camera" is null.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.LookAt(HelixToolkit.Wpf.SharpDX.ICameraModel,System.Windows.Media.Media3D.Point3D,System.Double)">
            <summary>
            Set the camera target point without changing the look direction.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="target">
            The target.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.LookAt(HelixToolkit.Wpf.SharpDX.ICameraModel,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
            <summary>
            Set the camera target point and look direction
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="target">
            The target.
            </param>
            <param name="newLookDirection">
            The new look direction.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.LookAt(HelixToolkit.Wpf.SharpDX.ICameraModel,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
            <summary>
            Set the camera target point and directions
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="target">
            The target.
            </param>
            <param name="newLookDirection">
            The new look direction.
            </param>
            <param name="newUpDirection">
            The new up direction.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.LookAt(HelixToolkit.Wpf.SharpDX.Camera,System.Windows.Media.Media3D.Point3D,System.Double,System.Double)">
            <summary>
            Set the camera target point and camera distance.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="target">
            The target point.
            </param>
            <param name="distance">
            The distance to the camera.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.Reset(HelixToolkit.Wpf.SharpDX.Camera)">
            <summary>
            Resets the specified camera.
            </summary>
            <param name="camera">
            The camera.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.Reset(HelixToolkit.Wpf.SharpDX.PerspectiveCamera)">
            <summary>
            Resets the specified perspective camera.
            </summary>
            <param name="camera">
            The camera.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.Reset(HelixToolkit.Wpf.SharpDX.OrthographicCamera)">
            <summary>
            Resets the specified orthographic camera.
            </summary>
            <param name="camera">
            The camera.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.ZoomExtents(HelixToolkit.Wpf.SharpDX.Camera,HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Double)">
            <summary>
            Zooms to fit the extents of the specified viewport.
            </summary>
            <param name="camera">
            The actual camera.
            </param>
            <param name="viewport">
            The viewport.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.ZoomExtents(HelixToolkit.Wpf.SharpDX.Camera,HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Windows.Media.Media3D.Rect3D,System.Double)">
            <summary>
            Zooms to fit the specified bounding rectangle.
            </summary>
            <param name="camera">
            The actual camera.
            </param>
            <param name="viewport">
            The viewport.
            </param>
            <param name="bounds">
            The bounding rectangle.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.ZoomExtents(HelixToolkit.Wpf.SharpDX.Camera,HelixToolkit.Wpf.SharpDX.Viewport3DX,HelixToolkit.Maths.BoundingBox,System.Double)">
            <summary>
            Zooms to fit the specified bounding rectangle.
            </summary>
            <param name="camera">
            The actual camera.
            </param>
            <param name="viewport">
            The viewport.
            </param>
            <param name="bounds">
            The bounding rectangle.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.ZoomExtents(HelixToolkit.Wpf.SharpDX.Camera,HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Windows.Media.Media3D.Point3D,System.Double,System.Double)">
            <summary>
            Zooms to fit the specified sphere.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="viewport">
            The viewport.
            </param>
            <param name="center">
            The center of the sphere.
            </param>
            <param name="radius">
            The radius of the sphere.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.ZoomToRectangle(HelixToolkit.Wpf.SharpDX.Camera,HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Windows.Rect)">
            <summary>
            Zooms the camera to the specified rectangle.
            </summary>
            <param name="camera">
            The camera.
            </param>
            <param name="viewport">
            The viewport.
            </param>
            <param name="zoomRectangle">
            The zoom rectangle.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraExtensions.MoveCameraPosition(HelixToolkit.Wpf.SharpDX.Camera,System.Windows.Media.Media3D.Vector3D)">
            <summary>
            Moves the camera position.
            </summary>
            <param name="camera">The camera.</param>
            <param name="delta">The delta.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ViewportExtensions">
            <summary>
            Provides extension methods for <see cref="T:HelixToolkit.Wpf.SharpDX.Viewport3DX" />.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.GetTotalNumberOfTriangles(HelixToolkit.Wpf.SharpDX.Viewport3DX)">
            <summary>
            Gets the total number of triangles in the viewport.
            </summary>
            <param name="viewport">The viewport.</param>
            <returns>The total number of triangles</returns>        
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.Copy(HelixToolkit.Wpf.SharpDX.Viewport3DX)">
            <summary>
            Copies the specified viewport to the clipboard.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.GetViewProjectionMatrix3D(HelixToolkit.Wpf.SharpDX.Viewport3DX)">
            <summary>
            Gets the camera transform.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <returns>
            The camera transform.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.GetScreenViewProjectionMatrix3D(HelixToolkit.Wpf.SharpDX.Viewport3DX)">
            <summary>
            Gets the total transform for a Viewport3DX. 
            Old name of this function: GetTotalTransform
            New name of the function: GetScreenViewProjectionTransform
            </summary>
            <param name="viewport">The viewport.</param>
            <returns>The total transform.</returns>     
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.GetViewportMatrix3D(HelixToolkit.Wpf.SharpDX.Viewport3DX)">
            <summary>
            Gets the viewport transform aka the screen-space transform.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <returns>The transform.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.FindBounds3D(HelixToolkit.Wpf.SharpDX.Viewport3DX)">
            <summary>
            Finds the bounding box of the viewport.
            </summary>
            <param name="viewport">The viewport.</param>
            <returns>The bounding box.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.Traverse``1(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Action{``0,System.Windows.Media.Media3D.Transform3D})">
            <summary>
            Traverses the Visual3D/Element3D tree and invokes the specified action on each Element3D of the specified type.
            </summary>
            <typeparam name="T">
            The type filter.
            </typeparam>
            <param name="viewport">
            The viewport.
            </param>
            <param name="action">
            The action.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.Traverse``1(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Func{``0,System.Boolean})">
            <summary>
            Traverses the specified action.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="viewport">The viewport.</param>
            <param name="function">The function. Return true to continue traverse, otherwise stop at current node</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.Traverse``1(HelixToolkit.Wpf.SharpDX.Element3D,System.Action{``0,System.Windows.Media.Media3D.Transform3D})">
            <summary>
            Traverses the Visual3D/Element3D tree and invokes the specified action on each Element3D of the specified type.
            </summary>
            <typeparam name="T">
            The type filter.
            </typeparam>
            <param name="element">
            The element.
            </param>
            <param name="action">
            The action.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.FindHits(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Windows.Point)">
            <summary>
            Finds the hits for a given 2D viewport position.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <param name="position">
            The position.
            </param>
            <returns>
            List of hits, sorted with the nearest hit first.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.FindNearest(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Windows.Point,System.Windows.Media.Media3D.Point3D@,System.Windows.Media.Media3D.Vector3D@,HelixToolkit.Wpf.SharpDX.Element3D@,HelixToolkit.SharpDX.Model.Scene.SceneNode@)">
            <summary>
            Finds the nearest point and its normal.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <param name="position">
            The position.
            </param>
            <param name="point">
            The point.
            </param>
            <param name="normal">
            The normal.
            </param>
            <param name="model">
            The model.
            </param>
            <param name="node"></param>
            <returns>
            The find nearest.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.FindNearestPoint(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Windows.Point)">
            <summary>
            Find the coordinates of the nearest point given a 2D position in the viewport
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="position">The position.</param>
            <returns>The nearest point, or null if no point was found.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.UnProject(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Numerics.Vector2)">
            <summary>
            Un-projects a 2D screen point.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="point2d">The input point.</param>
            <returns>The ray.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.UnProject(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Windows.Point)">
            <summary>
            Un-projects a 2D screen point.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="point2d">The input point.</param>
            <returns>The ray.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.UnProjectOnPlane(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Windows.Point,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D)">
            <summary>
            Un-project a point from the screen (2D) to a point on plane (3D)
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <param name="p">
            The 2D point.
            </param>
            <param name="position">
            plane position
            </param>
            <param name="normal">
            plane normal
            </param>
            <returns>
            A 3D point.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.UnProjectOnPlane(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Numerics.Vector2,System.Numerics.Plane)">
            <summary>
            
            </summary>
            <param name="viewport"></param>
            <param name="p"></param>
            <param name="plane"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.UnProjectOnPlane(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Windows.Point)">
            <summary>
            Un-projects a point from the screen (2D) to a point on the plane trough the camera target point.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <param name="p">
            The 2D point.
            </param>
            <returns>
            A 3D point.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.Project(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Windows.Media.Media3D.Point3D)">
            <summary>
            Projects the specified 3D point to a 2D screen point.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="point">The 3D point.</param>
            <returns>The point.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.Print(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.String)">
            <summary>
            Prints the specified viewport.
            </summary>
            <param name="vp">
            The viewport.
            </param>
            <param name="description">
            The description.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.RenderBitmap(HelixToolkit.Wpf.SharpDX.Viewport3DX)">
            <summary>
            Renders the viewport to a bitmap.
            </summary>
            <param name="view">The viewport.</param>
            <returns>A bitmap.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.RenderBitmap(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Int32,System.Int32)">
            <summary>
            Renders the viewport to a bitmap.
            </summary>
            <param name="view">The viewport.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>A bitmap.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.ResizeAndArrange(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Int32,System.Int32)">
            <summary>
            Resizes and arranges the viewport.
            </summary>
            <param name="view">
            The view.
            </param>
            <param name="width">
            The width.
            </param>
            <param name="height">
            The height.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.SaveScreen(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.String)">
            <summary>
            Saves the bitmap.
            </summary>
            <param name="view">The view.</param>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.SaveScreen(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.String,HelixToolkit.SharpDX.Direct2DImageFormat)">
            <summary>
            Saves the bitmap.
            </summary>
            <param name="view">The view.</param>
            <param name="fileName">Name of the file.</param>
            <param name="format">The format.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.ZoomExtents(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Double)">
            <summary>
            Zooms to the extents of the specified viewport.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="animationTime">The animation time.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.ZoomExtents(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Windows.Media.Media3D.Rect3D,System.Double)">
            <summary>
            Zooms to the extents of the specified bounding box.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="bounds">The bounding rectangle.</param>
            <param name="animationTime">The animation time.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.ZoomExtents(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Windows.Media.Media3D.Point3D,System.Double,System.Double)">
            <summary>
            Zooms to the extents of the specified bounding sphere.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="center">The center of the sphere.</param>
            <param name="radius">The radius of the sphere.</param>
            <param name="animationTime">The animation time.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.ZoomToRectangle(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Windows.Rect)">
            <summary>
            Zooms the viewport to the specified rectangle.
            </summary>
            <param name="viewport">The viewport.</param>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ViewportExtensions.ZoomByChangingFieldOfView(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Double)">
            <summary>
            Changes the field of view and tries to keep the scale fixed.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
            <param name="delta">
            The relative change in fov.
            </param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Element3D">
            <summary>
            Base class for renderable elements.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Element3D.IsRenderingProperty">
            <summary>
            Indicates, if this element should be rendered,
            default is true
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Element3D.IsRendering">
            <summary>
            Indicates, if this element should be rendered.
            Use this also to make the model visible/unvisible
            default is true
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Element3D.VisibilityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Element3D.Visibility">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Element3D.TransformProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Element3D.Transform">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Element3D.IsHitTestVisibleProperty">
            <summary>
            The is hit test visible property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Element3D.IsHitTestVisible">
            <summary>
            Indicates, if this element should be hit-tested.
            default is true
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Element3D.RenderOrder">
            <summary>
            Gets or sets the manual render order.
            </summary>
            <value>
            The render order.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Element3D.RenderOrderProperty">
            <summary>
            The render order property
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.Element3D.MouseDown3D">
            <summary>
            Provide CLR accessors for the event 
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.Element3D.MouseUp3D">
            <summary>
            Provide CLR accessors for the event 
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.Element3D.MouseMove3D">
            <summary>
            Provide CLR accessors for the event 
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Element3D.FindVisualAncestor``1(System.Windows.DependencyObject)">
            <summary>
            Looks for the first visual ancestor of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type of visual ancestor.</typeparam>
            <param name="obj">The respective <see cref="T:System.Windows.DependencyObject"/>.</param>
            <returns>
            The first visual ancestor of type <typeparamref name="T"/> if exists, else <c>null</c>.
            </returns>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.GroupElement3D">
            <summary>
            Supports both ItemsSource binding and Xaml children. Binds with ObservableElement3DCollection 
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.GroupElement3D.ItemsSourceProperty">
            <summary>
            ItemsSource for binding to collection. Please use ObservableElement3DCollection for observable, otherwise may cause memory leak.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.GroupElement3D.OctreeManagerProperty">
            <summary>
            Add octree manager to use octree hit test.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.GroupElement3D.ItemsSource">
            <summary>
            ItemsSource for binding to collection. Please use ObservableElement3DCollection for observable, otherwise may cause memory leak.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.GroupElement3D.AlwaysHittable">
            <summary>
            Gets or sets a value indicating whether [always hittable].
            </summary>
            <value>
              <c>true</c> if [always hittable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.GroupElement3D.Children">
            <summary>
            Gets the children.
            </summary>
            <value>
            The children.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.GroupElement3D.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.GroupElement3D"/> class.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraModel3D.Camera">
            <summary>
            Distance of the directional light from origin
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.DraggableGeometryModel3D">
            <summary>
            Example class how to implement mouse dragging for objects.
            Probably it should be moved to a "Dragging Demo."
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ItemsModel3D">
            <summary>
                Represents a model that can be used to present a collection of items. supports generating child items by a
                <see cref="T:System.Windows.DataTemplate" />.
            </summary>
            <remarks>
                Use the ItemsSource property to specify the collection to use to generate the content of your ItemsControl. You can set the ItemsSource
                property to any type that implements IEnumerable. ItemsSource is typically used to display a data collection or to bind an
                ItemsControl to a collection object.
            </remarks>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ItemsModel3D.ItemTemplateProperty">
            <summary>
                The item template property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ItemsModel3D.ItemsSourceProperty">
            <summary>
            ItemsSource for binding to collection. Please use ObservableElement3DCollection for observable, otherwise may cause memory leak.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ItemsModel3D.OctreeManagerProperty">
            <summary>
            Add octree manager to use octree hit test.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ItemsModel3D.ItemTemplate">
            <summary>
                Gets or sets the <see cref="T:System.Windows.DataTemplate" /> used to display each item.
            </summary>
            <value>
                The item template.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ItemsModel3D.ItemsSource">
            <summary>
                Gets or sets a collection used to generate the content of the <see cref="T:HelixToolkit.Wpf.SharpDX.ItemsModel3D" />.
            </summary>
            <value>
                The items source.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.CanRotateXProperty">
            <summary>
            The can rotate x property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.CanRotateYProperty">
            <summary>
            The can rotate y property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.CanRotateZProperty">
            <summary>
            The can rotate z property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.CanTranslateXProperty">
            <summary>
            The can translate x property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.CanTranslateYProperty">
            <summary>
            The can translate y property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.CanTranslateZProperty">
            <summary>
            The can translate z property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.DiameterProperty">
            <summary>
            The diameter property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.TargetTransformProperty">
            <summary>
              The target transform property.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.TargetTransform">
            <summary>
              Gets or sets TargetTransform.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.CanRotateX">
            <summary>
            Gets or sets a value indicating whether this instance can rotate X.
            </summary>
            <value> <c>true</c> if this instance can rotate X; otherwise, <c>false</c> . </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.CanRotateY">
            <summary>
            Gets or sets a value indicating whether this instance can rotate Y.
            </summary>
            <value> <c>true</c> if this instance can rotate Y; otherwise, <c>false</c> . </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.CanRotateZ">
            <summary>
            Gets or sets a value indicating whether this instance can rotate Z.
            </summary>
            <value> <c>true</c> if this instance can rotate Z; otherwise, <c>false</c> . </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.CanTranslateX">
            <summary>
            Gets or sets a value indicating whether this instance can translate X.
            </summary>
            <value> <c>true</c> if this instance can translate X; otherwise, <c>false</c> . </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.CanTranslateY">
            <summary>
            Gets or sets a value indicating whether this instance can translate Y.
            </summary>
            <value> <c>true</c> if this instance can translate Y; otherwise, <c>false</c> . </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.CanTranslateZ">
            <summary>
            Gets or sets a value indicating whether this instance can translate Z.
            </summary>
            <value> <c>true</c> if this instance can translate Z; otherwise, <c>false</c> . </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.Diameter">
            <summary>
            Gets or sets the diameter.
            </summary>
            <value> The diameter. </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.Bind(HelixToolkit.Wpf.SharpDX.GeometryModel3D)">
            <summary>
            Binds this manipulator to a given Model3D.
            </summary>
            <param name="source">
            Source Visual3D which receives the manipulator transforms. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.UnBind">
            <summary>
              Releases the binding of this manipulator.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.OnChildrenChanged">
            <summary>
            The on children changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UICompositeManipulator3D.ChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            The children changed.
            </summary>
            <param name="d">
            The d.
            </param>
            <param name="e">
            The event arguments.
            </param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.UIManipulator3D">
            <summary>
              An abstract base class for manipulators.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UIManipulator3D.TargetTransformProperty">
            <summary>
              The target transform property. 
              Bind the Tranform of the Target to this Property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UIManipulator3D.OffsetProperty">
            <summary>
              The offset property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UIManipulator3D.ValueProperty">
            <summary>
              The value property.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.ValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when value has been changed.
            </summary>
            <param name="d">
            The sender. 
            </param>
            <param name="e">
            The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.OffsetChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UIManipulator3D.TargetTransform">
            <summary>
              Gets or sets TargetTransform.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UIManipulator3D.Offset">
            <summary>
              Gets or sets the offset of the visual (this vector is added to the Position point).
            </summary>
            <value> The offset. </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UIManipulator3D.Value">
            <summary>
              Gets or sets the manipulator value.
            </summary>
            <value> The value. </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.Bind(HelixToolkit.Wpf.SharpDX.Element3D)">
            <summary>
            Binds this manipulator to a given Model3D.
            </summary>
            <param name="source">
            Source Visual3D which receives the manipulator transforms. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.UnBind">
            <summary>
              Releases the binding of this manipulator.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.OnValueChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when value is changed.
            </summary>
            <param name="e">
            The e.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.OnOffetChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.OnMouse3DDown(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.OnMouse3DUp(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.OnMouse3DMove(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.UpdateManipulator(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.ModelChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when Geometry is changed.
            </summary>
            <param name="d">
            The sender. 
            </param>
            <param name="e">
            The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs"/> instance containing the event data. 
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.OnModelChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.ToWorldPos(System.Numerics.Vector3)">
            <summary>
            
            </summary>
            <param name="vec"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.ToWorldVec(System.Numerics.Vector3)">
            <summary>
            
            </summary>
            <param name="vec"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.ToModelPos(System.Numerics.Vector3)">
            <summary>
            
            </summary>
            <param name="vec"></param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIManipulator3D.ToModelVec(System.Numerics.Vector3)">
            <summary>
            
            </summary>
            <param name="vec"></param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.UIRotateManipulator3D">
            <summary>
              A translate manipulator.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UIRotateManipulator3D.AxisProperty">
            <summary>
            The axis property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UIRotateManipulator3D.OuterDiameterProperty">
            <summary>
            The diameter property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UIRotateManipulator3D.InnerDiameterProperty">
            <summary>
            The inner diameter property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UIRotateManipulator3D.LengthProperty">
            <summary>
            The length property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UIRotateManipulator3D.PivotProperty">
            <summary>
            The pivot point property.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UIRotateManipulator3D.Axis">
            <summary>
            Gets or sets the rotation axis.
            </summary>
            <value>The axis.</value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UIRotateManipulator3D.OuterDiameter">
            <summary>
            Gets or sets the diameter of the manipulator arrow.
            </summary>
            <value> The diameter. </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UIRotateManipulator3D.InnerDiameter">
            <summary>
            Gets or sets the inner diameter.
            </summary>
            <value>The inner diameter.</value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UIRotateManipulator3D.Length">
            <summary>
            Gets or sets the length of the cylinder.
            </summary>
            <value>The length.</value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UIRotateManipulator3D.Pivot">
            <summary>
            Gets or sets the pivot point of the manipulator.
            </summary>
            <value> The position. </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIRotateManipulator3D.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.UIManipulator3D" /> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIRotateManipulator3D.OnModelChanged">
            <summary>
            Called when geometry has been changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIRotateManipulator3D.UpdateManipulator(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>        
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UIRotateManipulator3D.OnMouse3DMove(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.UITranslateManipulator3D">
            <summary>
              A translate manipulator.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UITranslateManipulator3D.DiameterProperty">
            <summary>
            The diameter property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UITranslateManipulator3D.DirectionProperty">
            <summary>
            The direction property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.UITranslateManipulator3D.LengthProperty">
            <summary>
            The length property.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UITranslateManipulator3D.Diameter">
            <summary>
            Gets or sets the diameter of the manipulator arrow.
            </summary>
            <value> The diameter. </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UITranslateManipulator3D.Direction">
            <summary>
            Gets or sets the direction of the translation.
            </summary>
            <value> The direction. </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.UITranslateManipulator3D.Length">
            <summary>
            Gets or sets the length of the manipulator arrow.
            </summary>
            <value> The length. </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UITranslateManipulator3D.#ctor">
            <summary>
              Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.UIManipulator3D" /> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UITranslateManipulator3D.OnModelChanged">
            <summary>
            Called when geometry has been changed.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.UITranslateManipulator3D.UpdateManipulator(System.Windows.RoutedEventArgs)">
            <summary>
            
            </summary>        
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Exporter">
            <summary>
            An abstract base class providing common functionality for exporters.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Exporter.Traverse``1(HelixToolkit.Wpf.SharpDX.Viewport3DX,System.Action{``0,System.Windows.Media.Media3D.Transform3D})">
            <summary>
            Traverses the Viewport3DX tree and invokes the specified action on each SceneNode of the specified type.
            </summary>
            <typeparam name="T">
            The type filter.
            </typeparam>
            <param name="viewport">
            The viewport.
            </param>
            <param name="action">
            The action.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Exporter.Traverse``1(HelixToolkit.SharpDX.Model.Scene.SceneNode,System.Action{``0,System.Windows.Media.Media3D.Transform3D})">
            <summary>
            Traverses the SceneNode tree and invokes the specified action on each SceneNode of the specified type.
            </summary>
            <typeparam name="T">
            The type filter.
            </typeparam>
            <param name="model">
            The model.
            </param>
            <param name="action">
            The action.
            </param>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Exporter.disposed">
            <summary>
            The disposed flag.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Exporter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Exporter.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Exporter.Close">
            <summary>
            Closes this exporter.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Exporter.RenderBrush(System.String,System.IO.Stream)">
            <summary>
            Renders the brush.
            </summary>
            <param name="path">
            The path.
            </param>
            <param name="brush">
            The brush.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Exporter.Export(HelixToolkit.Wpf.SharpDX.Viewport3DX)">
            <summary>
            Exports the specified viewport.
            Exports model, camera and lights.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Exporter.Export(HelixToolkit.SharpDX.Model.Scene.SceneNode)">
            <summary>
            Exports the specified model.
            </summary>
            <param name="model">
            The model.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Exporter.ExportHeader">
            <summary>
            Exports the header.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Exporter.ExportViewport(HelixToolkit.Wpf.SharpDX.Viewport3DX)">
            <summary>
            Exports the viewport.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Exporter.ExportModel(HelixToolkit.SharpDX.Model.Scene.MeshNode,System.Windows.Media.Media3D.Transform3D)">
            <summary>
            Exports the model.
            </summary>
            <param name="model">
            The model.
            </param>
            <param name="transform">
            The transform.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Exporter.ExportCamera(HelixToolkit.Wpf.SharpDX.Camera)">
            <summary>
            Exports the camera.
            </summary>
            <param name="camera">
            The camera.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Exporter.ExportLight(HelixToolkit.SharpDX.Model.Scene.LightNode,System.Windows.Media.Media3D.Transform3D)">
            <summary>
            Exports the light.
            </summary>
            <param name="light">
            The light.
            </param>
            <param name="transform">
            The transform.
            </param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.IExporter">
            <summary>
            Interface for 3D exporters.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.IExporter.Export(HelixToolkit.Wpf.SharpDX.Viewport3DX)">
            <summary>
            Exports the specified viewport.
            </summary>
            <param name="viewport">
            The viewport.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.IExporter.Export(HelixToolkit.SharpDX.Model.Scene.SceneNode)">
            <summary>
            Exports the specified model.
            </summary>
            <param name="model">
            The model.
            </param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ObjExporter">
            <summary>
            Export the 3D visual tree to a Wavefront OBJ file
            </summary>
            <remarks>
            http://en.wikipedia.org/wiki/Obj
            http://www.martinreddy.net/gfx/3d/OBJ.spec
            http://www.eg-models.de/formats/Format_Obj.html
            </remarks>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ObjExporter.ExportNormals">
            <summary>
            Gets or sets a value indicating whether to export normals.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ObjExporter.UseDissolveForTransparency">
            <summary>
            Gets or sets a value indicating whether to use "d" for transparency (default is "Tr").
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ObjExporter.SwitchYZ">
            <summary>
            Gets or sets a value indicating whether to switch Y and Z coordinates.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ObjExporter.directory">
            <summary>
            The directory.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ObjExporter.exportedMaterials">
            <summary>
            The exported materials.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ObjExporter.mwriter">
            <summary>
            The mwriter.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ObjExporter.writer">
            <summary>
            The writer.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ObjExporter.normalIndex">
            <summary>
            Normal index counter.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ObjExporter.textureIndex">
            <summary>
            Texture index counter.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ObjExporter.vertexIndex">
            <summary>
            Vertex index counter.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ObjExporter.objectNo">
            <summary>
            Object index counter.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ObjExporter.groupNo">
            <summary>
            Group index counter.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ObjExporter.matNo">
            <summary>
            Material index counter.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ObjExporter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.ObjExporter"/> class.
            </summary>
            <param name="outputFileName">
            Name of the output file.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ObjExporter.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.ObjExporter"/> class.
            </summary>
            <param name="outputFileName">
            Name of the output file.
            </param>
            <param name="comment">
            The comment.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ObjExporter.Close">
            <summary>
            Closes this exporter.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ObjExporter.ExportModel(HelixToolkit.SharpDX.Model.Scene.MeshNode,System.Windows.Media.Media3D.Transform3D)">
            <summary>
            The export model.
            </summary>
            <param name="model">
            The model.
            </param>
            <param name="transform">
            The transform.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ObjExporter.ExportMesh(HelixToolkit.SharpDX.MeshGeometry3D,System.Nullable{System.Numerics.Matrix4x4})">
            <summary>
            The export mesh.
            </summary>
            <param name="m">
            The m.
            </param>
            <param name="t">
            The t.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ObjExporter.ExportMaterial(System.String,HelixToolkit.SharpDX.Model.MaterialCore)">
            <summary>
            The export material.
            </summary>
            <param name="matName">
            The mat name.
            </param>
            <param name="material">
            The material.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ObjExporter.ToColorString(HelixToolkit.Maths.Color4)">
            <summary>
            Converts a color to a string.
            </summary>
            <param name="color">
            The color.
            </param>
            <returns>
            The string.
            </returns>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Camera">
            <summary>
            Specifies what portion of the 3D scene is rendered by the Viewport3DX element.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Camera.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Camera.LookDirection">
            <summary>
            Gets or sets the look direction.
            </summary>
            <value>
            The look direction.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Camera.UpDirection">
            <summary>
            Gets or sets up direction.
            </summary>
            <value>
            Up direction.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Camera.CreateLeftHandSystem">
            <summary>
            Gets or sets a value indicating whether [create left hand system].
            </summary>
            <value>
              <c>true</c> if [create left hand system]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Camera.CameraInternal">
            <summary>
            Gets the camera internal.
            </summary>
            <value>
            The camera internal.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Camera.CreateViewMatrix">
            <summary>
            Creates the view matrix.
            </summary>
            <returns>A <see cref="T:System.Numerics.Matrix4x4" />.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Camera.CreateProjectionMatrix(System.Double)">
            <summary>
            Creates the projection matrix.
            </summary>
            <param name="aspectRatio">The aspect ratio.</param>
            <returns>A <see cref="T:System.Numerics.Matrix4x4" />.</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Camera.CreatePortableCameraCore">
            <summary>
            Creates the portable camera core.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Camera.OnCoreCreated(HelixToolkit.SharpDX.Cameras.CameraCore)">
            <summary>
            Called when [core created].
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Camera.AnimateTo(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Double)">
            <summary>
            Animates to.
            </summary>
            <param name="newPosition">The new position.</param>
            <param name="newDirection">The new direction.</param>
            <param name="newUpDirection">The new up direction.</param>
            <param name="animationTime">The animation time.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Camera.OnTimeStep">
            <summary>
            Called when [time step] to update camera animation.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ICameraModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ICameraModel.CreateLeftHandSystem">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ICameraModel.Position">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ICameraModel.LookDirection">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ICameraModel.UpDirection">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ICameraModel.CameraInternal">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.OrthographicCamera">
            <summary>
            Represents an orthographic projection camera.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.OrthographicCamera.WidthProperty">
            <summary>
            The width property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.OrthographicCamera.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.PerspectiveCamera">
            <summary>
            Represents a perspective projection camera.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PerspectiveCamera.FieldOfViewProperty">
            <summary>
            The field of view property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PerspectiveCamera.FieldOfView">
            <summary>
            Gets or sets the field of view.
            </summary>
            <value>
            The field of view.
            </value>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ProjectionCamera">
            <summary>
            An abstract base class for perspective and orthographic projection cameras.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ProjectionCamera.CreateLeftHandSystemProperty">
            <summary>
            The create left hand system property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ProjectionCamera.FarPlaneDistanceProperty">
            <summary>
            The far plane distance property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ProjectionCamera.LookDirectionProperty">
            <summary>
            The look direction property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ProjectionCamera.NearPlaneDistanceProperty">
            <summary>
            The near plane distance property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ProjectionCamera.PositionProperty">
            <summary>
            The position property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ProjectionCamera.UpDirectionProperty">
            <summary>
            Up direction property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ProjectionCamera.CreateLeftHandSystem">
            <summary>
            Gets or sets a value indicating whether to create a left hand system.
            </summary>
            <value>
            <c>true</c> if creating a left hand system; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ProjectionCamera.FarPlaneDistance">
            <summary>
            Gets or sets the far plane distance.
            </summary>
            <value>
            The far plane distance.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ProjectionCamera.LookDirection">
            <summary>
            Gets or sets the look direction.
            </summary>
            <value>
            The look direction.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ProjectionCamera.NearPlaneDistance">
            <summary>
            Gets or sets the near plane distance.
            </summary>
            <value>
            The near plane distance.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ProjectionCamera.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>
            The position.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ProjectionCamera.Target">
            <summary>
            Gets the target position.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ProjectionCamera.UpDirection">
            <summary>
            Gets or sets up direction.
            </summary>
            <value>
            Up direction.
            </value>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ModelContainer3DX">
            <summary>
            Use to contain shared models for multiple viewports. 
            <para>Suggest to bind effects manager in viewmodel. Assign effect manager from code behind may cause memory leak</para>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.EffectsManagerProperty">
            <summary>
            The EffectsManager property. Suggest to bind effects manager in viewmodel. Assign effect manager from code behind may cause memory leak
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.EffectsManager">
            <summary>
            Gets or sets the <see cref="F:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.EffectsManagerProperty"/>.
            <para>The EffectsManager property. Suggest bind effects manager in viewmodel. Assign effect manager from code behind may cause memory leak.</para>
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.ExceptionOccurred">
            <summary>
            Fired whenever an exception occurred on this object.
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.OnNewRenderTargetTexture">
            <summary>
            Occurs when [on new render target texture].
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.StartRenderLoop">
            <summary>
            Occurs when [start render loop].
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.StopRenderLoop">
            <summary>
            Occurs when [stop render loop].
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.Rendered">
            <summary>
            Occurs when each render frame finished rendering.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.GUID">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.IsRendering">
            <summary>
            Gets or sets a value indicating whether this instance is rendering.
            </summary>
            <value>
              <c>true</c> if this instance is rendering; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.CurrentRenderHost">
            <summary>
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.PerFrameFlattenedScene">
            <summary>
            Gets the current frame renderables for rendering.
            </summary>
            <value>
            The per frame renderable.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.PerFrameLights">
            <summary>
            Gets the current frame Lights for rendering.
            </summary>
            <value>
            The per frame renderable.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.PerFrameNodesWithPostEffect">
            <summary>
            Gets the per frame post effect cores.
            </summary>
            <value>
            The per frame post effect cores.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.PerFrameOpaqueNodes">
            <summary>
            Gets the per frame general render cores.
            </summary>
            <value>
            The per frame general render cores.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.PerFrameOpaqueNodesInFrustum">
            <summary>
            Gets the per frame opaque nodes in frustum.
            </summary>
            <value>
            The per frame opaque nodes in frustum.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.PerFrameTransparentNodes">
            <summary>
            Gets the per frame transparent nodes. , <see cref="F:HelixToolkit.SharpDX.RenderType.Transparent"/>
            </summary>
            <value>
            The per frame transparent nodes.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.PerFrameTransparentNodesInFrustum">
            <summary>
            Gets the per frame transparent nodes in frustum.
            </summary>
            <value>
            The per frame transparent nodes in frustum.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.PerFrameParticleNodes">
            <summary>
            Gets the per frame particle nodes. <see cref="F:HelixToolkit.SharpDX.RenderType.Particle" />
            </summary>
            <value>
            The per frame particle nodes.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.EffectsManagerPropertyChanged">
            <summary>
            Handles the change of the effects manager.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.AttachViewport3DX(HelixToolkit.SharpDX.IViewport3DX)">
            <summary>
            </summary>
            <param name="viewport"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.DettachViewport3DX(HelixToolkit.SharpDX.IViewport3DX)">
            <summary>
            </summary>
            <param name="viewport"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.InvalidateRender">
            <summary>
            Invalidates the render.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.InvalidateSceneGraph">
            <summary>
            Invalidates the scene graph.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.InvalidatePerFrameRenderables">
            <summary>
            Invalidates the per frame renderables.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.SetDefaultRenderTargets(System.Boolean)">
            <summary>
            Sets the default render targets.
            </summary>
            <param name="clear">if set to <c>true</c> [clear].</param>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.Renderables">
            <summary>
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.Device">
            <summary>
            Gets the device.
            </summary>
            <value>
            The device.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.Device2D">
            <summary>
            Gets the device2d.
            </summary>
            <value>
            The device2d.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.ClearColor">
            <summary>
            Gets or sets the color of the clear.
            </summary>
            <value>
            The color of the clear.
            </value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.IsShadowMapEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is shadow map enabled.
            </summary>
            <value>
              <c>true</c> if this instance is shadow map enabled; otherwise, <c>false</c>.
            </value>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.MSAA">
            <summary>
            Gets or sets the msaa.
            </summary>
            <value>
            The msaa.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.Viewport">
            <summary>
            Gets or sets the viewport.
            </summary>
            <value>
            The viewport.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.RenderContext">
            <summary>
            Gets the render context.
            </summary>
            <value>
            The render context.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.IsBusy">
            <summary>
            Indicates if DPFCanvas busy on rendering.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.EnableRenderFrustum">
            <summary>
            Gets or sets a value indicating whether [enable render frustum].
            </summary>
            <value>
              <c>true</c> if [enable render frustum]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.MaxFPS">
            <summary>
            Gets or sets the maximum FPS.
            </summary>
            <value>
            The maximum FPS.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.IsDeferredLighting">
            <summary>
            Gets a value indicating whether this instance is deferred lighting.
            </summary>
            <value>
              <c>true</c> if this instance is deferred lighting; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.SharedModelContainer">
            <summary>
            Gets or sets the shared model container.
            </summary>
            <value>
            The shared model container.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.EnableSharingModelMode">
            <summary>
            Gets or sets a value indicating whether [enable sharing model mode].
            </summary>
            <value>
              <c>true</c> if [enable sharing model mode]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.RenderTargetBufferView">
            <summary>
            Gets the color buffer view.
            </summary>
            <value>
            The color buffer view.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.DepthStencilBufferView">
            <summary>
            Gets the depth stencil buffer view.
            </summary>
            <value>
            The depth stencil buffer view.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.D2DTarget">
            <summary>
            Gets the d2d target.
            </summary>
            <value>
            The d2d target.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.RenderStatistics">
            <summary>
            Gets the render statistics.
            </summary>
            <value>
            The render statistics.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.ShowRenderDetail">
            <summary>
            Gets or sets a value indicating whether [show statistics].
            </summary>
            <value>
              <c>true</c> if [show statistics]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.RenderConfiguration">
            <summary>
            Gets or sets the render configuration.
            </summary>
            <value>
            The render configuration.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.Attach(HelixToolkit.SharpDX.IRenderHost)">
            <summary>
            Attaches the specified host.
            </summary>
            <param name="host">The host.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.Detach(HelixToolkit.SharpDX.IRenderHost)">
            <summary>
            Detaches this instance.
            </summary>
            <param name="host"></param>
            <exception cref="T:System.IndexOutOfRangeException">D3DCounter is negative.</exception>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.StartD3D(System.Int32,System.Int32)">
            <summary>
            Starts the d3 d.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.EndD3D">
            <summary>
            Ends the d3 d.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.UpdateAndRender">
            <summary>
            Updates the and render.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.Resize(System.Int32,System.Int32)">
            <summary>
            Resizes
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ModelContainer3DX.ClearRenderTarget(HelixToolkit.SharpDX.Render.DeviceContextProxy,System.Boolean,System.Boolean)">
            <summary>
            Clears the render target.
            </summary>
            <param name="context">The context.</param>
            <param name="clearBackBuffer">if set to <c>true</c> [clear back buffer].</param>
            <param name="clearDepthStencilBuffer">if set to <c>true</c> [clear depth stencil buffer].</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.CameraSetting">
            <summary>
            Represents camera settings.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraSetting.#ctor(HelixToolkit.Wpf.SharpDX.Camera)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.CameraSetting"/> class.
            </summary>
            <param name="camera">
            The camera.
            </param>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraSetting.FarPlaneDistance">
            <summary>
            Gets or sets FarPlaneDistance.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraSetting.FieldOfView">
            <summary>
            Gets or sets FieldOfView.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraSetting.LookDirection">
            <summary>
            Gets or sets LookDirection.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraSetting.NearPlaneDistance">
            <summary>
            Gets or sets NearPlaneDistance.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraSetting.Position">
            <summary>
            Gets or sets Position.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraSetting.UpDirection">
            <summary>
            Gets or sets UpDirection.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CameraSetting.Width">
            <summary>
            Gets or sets Width.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CameraSetting.UpdateCamera(HelixToolkit.Wpf.SharpDX.Camera)">
            <summary>
            Sets the properties of the specified camera to the settings stored in this object.
            </summary>
            <param name="camera">
            The camera.
            </param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ManipulationAction">
            <summary>
            Specifies constants that define actions performed by manipulation.
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ManipulationBinding">
            <summary>
            Binds a <see cref="T:HelixToolkit.Wpf.SharpDX.ManipulationGesture"/> to an <see cref="T:System.Windows.Input.ICommand"/> implementation.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ManipulationBinding.FingerCount">
            <summary>
            Gets the finger count.
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ManipulationEventArgs">
            <summary>
            Provides data for the manipulation events.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ManipulationEventArgs.#ctor(System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.ManipulationEventArgs"/> class.
            </summary>
            <param name="currentPosition">
            The current position.
            </param>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ManipulationEventArgs.CurrentPosition">
            <summary>
            Gets the current position.
            </summary>
            <value>The current position.</value>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.PanHandler">
            <summary>
            Handles panning.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PanHandler.panPoint3D">
            <summary>
            The 3D pan origin.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PanHandler.#ctor(HelixToolkit.Wpf.SharpDX.CameraController)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.PanHandler"/> class.
            </summary>
            <param name="controller">
            The camera controller.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PanHandler.Delta(System.Windows.Point)">
            <summary>
            Occurs when the position is changed during a manipulation.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Point"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PanHandler.Pan(System.Numerics.Vector3,System.Boolean)">
            <summary>
            Pans the camera by the specified 3D vector (world coordinates).
            </summary>
            <param name="delta">
            The panning vector.
            </param>
            <param name="stopOther">Stop other manipulation</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PanHandler.Pan(System.Numerics.Vector2,System.Boolean)">
            <summary>
            Pans the camera by the specified 2D vector (screen coordinates).
            </summary>
            <param name="delta">
            The delta.
            </param>
            <param name="stopOther">Stop other manipulation</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PanHandler.Started(System.Windows.Point)">
            <summary>
            Occurs when the manipulation is started.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Point"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PanHandler.CanExecute">
            <summary>
            Occurs when the command associated with this handler initiates a check to determine whether the command can be executed on the command target.
            </summary>
            <returns>
            True if the execution can continue.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PanHandler.GetCursor">
            <summary>
            Gets the cursor for the gesture.
            </summary>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PanHandler.OnInertiaStarting(System.Double)">
            <summary>
            Called when inertia is starting.
            </summary>
            <param name="elapsedTime">
            The elapsed time (milliseconds).
            </param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.RotateHandler">
            <summary>
            Handles rotation.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.RotateHandler.changeLookAt">
            <summary>
            The change look at.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.RotateHandler.rotationAxisX">
            <summary>
            The x rotation axis.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.RotateHandler.rotationAxisY">
            <summary>
            The y rotation axis.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.RotateHandler.rotationPoint">
            <summary>
            The rotation point.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.RotateHandler.rotationPoint3D">
            <summary>
            The 3D rotation point.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RotateHandler.#ctor(HelixToolkit.Wpf.SharpDX.CameraController,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.RotateHandler"/> class.
            </summary>
            <param name="controller">
            The controller.
            </param>
            <param name="changeLookAt">
            The change look at.
            </param>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.RotateHandler.CameraRotationMode">
            <summary>
            Gets the camera rotation mode.
            </summary>
            <value>
            The camera rotation mode.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RotateHandler.Completed(System.Windows.Point)">
            <summary>
            Occurs when the manipulation is completed.
            </summary>
            <param name="e">The <see cref="T:HelixToolkit.Wpf.SharpDX.ManipulationEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RotateHandler.Delta(System.Windows.Point)">
            <summary>
            Occurs when the position is changed during a manipulation.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RotateHandler.LookAt(System.Numerics.Vector3,System.Double)">
            <summary>
            Change the "look-at" point.
            </summary>
            <param name="target">
            The target.
            </param>
            <param name="animationTime">
            The animation time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RotateHandler.Rotate(System.Windows.Point,System.Windows.Point,System.Numerics.Vector3)">
            <summary>
            Rotate the camera around the specified point.
            </summary>
            <param name="p0">
            The p 0.
            </param>
            <param name="p1">
            The p 1.
            </param>
            <param name="rotateAround">
            The rotate around.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RotateHandler.Rotate(System.Numerics.Vector2,System.Numerics.Vector2,System.Numerics.Vector3,System.Boolean)">
            <summary>
            Rotate the camera around the specified point.
            </summary>
            <param name="p0">
            The p 0.
            </param>
            <param name="p1">
            The p 1.
            </param>
            <param name="rotateAround">
            The rotate around.
            </param>
            <param name="stopOther">Stop other manipulation</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RotateHandler.Rotate(System.Numerics.Vector2)">
            <summary>
            The rotate.
            </summary>
            <param name="delta">
            The delta.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RotateHandler.Started(System.Windows.Point)">
            <summary>
            Occurs when the manipulation is started.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RotateHandler.CanExecute">
            <summary>
            The can execute.
            </summary>
            <returns>
            True if the execution can continue.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RotateHandler.GetCursor">
            <summary>
            Gets the cursor.
            </summary>
            <returns>
            A cursor.
            </returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.RotateHandler.OnInertiaStarting(System.Double)">
            <summary>
            Called when inertia is starting.
            </summary>
            <param name="elapsedTime">
            The elapsed time.
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.EmptyStringToVisibilityConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:HelixToolkit.Wpf.SharpDX.EmptyStringToVisibilityConverter" /> class.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.EmptyStringToVisibilityConverter.Inverted">
            <summary>
            Gets or sets a value indicating whether this converter is inverted.
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.NotNullToVisibilityConverter">
            <summary>
            A not-null reference to Visibility value converter.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.NotNullToVisibilityConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:HelixToolkit.Wpf.SharpDX.NotNullToVisibilityConverter" /> class.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.NotNullToVisibilityConverter.Inverted">
            <summary>
            Gets or sets a value indicating whether this converter is inverted.
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Geometry3DExtensions">
            <summary>
            Contains extension methods for geometry.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Geometry3DExtensions.ToUnshared``1(``0)">
            <summary>
            Returns a copy of this <see cref="T:HelixToolkit.SharpDX.Geometry3D"/> with unshared vertices. 
            Note that <see cref="P:HelixToolkit.SharpDX.Geometry3D.Indices"/> could be set to null if unindexed drawing was supported.
            </summary>
            <typeparam name="T">The concrete type of this <see cref="T:HelixToolkit.SharpDX.Geometry3D"/>.</typeparam>
            <param name="source">This respective <see cref="T:HelixToolkit.SharpDX.Geometry3D"/>.</param>
            <returns>A copy of this <see cref="T:HelixToolkit.SharpDX.Geometry3D"/> with unshared vertices.</returns>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Elements2D.Element2D.VisibilityProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Elements2D.Element2D.Visibility">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Elements2D.Element2D.IsMouseOverProperty">
            <summary>
            The is mouse over2 d property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Elements2D.Element2D.IsMouseOver">
            <summary>
            Gets or sets a value indicating whether this instance is mouse over2 d.
            </summary>
            <value>
              <c>true</c> if this instance is mouse over2 d; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Elements2D.Element2D.Transform">
            <summary>
            Render transform
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Elements2D.MoverButton2D">
            <summary>
            Use to apply style for mover button from Generic.xaml/>
            </summary>
            <seealso cref="T:HelixToolkit.Wpf.SharpDX.Elements2D.Button2D" />
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Elements2D.ScreenSpaceMoveDirection">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Elements2D.ScreenSpacePositionMover">
            <summary>
            
            </summary>
            <seealso cref="T:HelixToolkit.Wpf.SharpDX.Elements2D.ScreenSpacePositionMoverBase" />
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.ScreenSpacePositionMover.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.Elements2D.ScreenSpacePositionMover"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.ScreenSpacePositionMover.Node2DMover.OnHitTest(System.Numerics.Vector2@,HelixToolkit.SharpDX.HitTest2DResult@)">
            <summary>
            Called when [hit test].
            </summary>
            <param name="mousePoint">The mouse point.</param>
            <param name="hitResult">The hit result.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Elements2D.ScreenSpacePositionMoverBase">
            <summary>
            
            </summary>
            <seealso cref="T:HelixToolkit.Wpf.SharpDX.Elements2D.Panel2D" />
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Elements2D.ScreenSpacePositionMoverBase.EnableMover">
            <summary>
            Gets or sets a value indicating whether [enable mover].
            </summary>
            <value>
              <c>true</c> if [enable mover]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Elements2D.ScreenSpacePositionMoverBase.EnableMoverProperty">
            <summary>
            The enable mover property
            </summary>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.Elements2D.ScreenSpacePositionMoverBase.OnMoveClicked">
            <summary>
            Occurs when [on move clicked].
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.ScreenSpacePositionMoverBase.RaiseOnMoveClick(HelixToolkit.Wpf.SharpDX.Elements2D.ScreenSpaceMoveDirection)">
            <summary>
            Raises the on move click.
            </summary>
            <param name="direction">The direction.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Elements2D.Canvas2D">
            <summary>
            Supports both ItemsSource binding and Xaml children. Binds with ObservableElement2DCollection 
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Elements2D.Canvas2D.LeftProperty">
            <summary>
            The left property
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.Canvas2D.SetLeft(HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore,System.Double)">
            <summary>
            Sets the left.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.Canvas2D.GetLeft(HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore)">
            <summary>
            Gets the left.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Elements2D.Canvas2D.TopProperty">
            <summary>
            The top property
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.Canvas2D.SetTop(HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore,System.Double)">
            <summary>
            Sets the top.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.Canvas2D.GetTop(HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore)">
            <summary>
            Gets the top.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Elements2D.Canvas2D.RightProperty">
            <summary>
            The right property
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.Canvas2D.SetRight(HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore,System.Double)">
            <summary>
            Sets the right.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.Canvas2D.GetRight(HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore)">
            <summary>
            Gets the right.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Elements2D.Canvas2D.BottomProperty">
            <summary>
            The bottom property
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.Canvas2D.SetBottom(HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore,System.Double)">
            <summary>
            Sets the bottom.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.Canvas2D.GetBottom(HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore)">
            <summary>
            Gets the bottom.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.Canvas2D.Node2DCanvas.MeasureOverride(System.Numerics.Vector2)">
            <summary>
            Measures the override.
            </summary>
            <param name="availableSize">Size of the available.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.Canvas2D.Node2DCanvas.ArrangeOverride(HelixToolkit.Maths.RectangleF)">
            <summary>
            Arranges the override.
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Elements2D.ImageModel2D">
            <summary>
            
            </summary>
            <seealso cref="T:HelixToolkit.Wpf.SharpDX.Elements2D.Element2D" />
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Elements2D.ImageModel2D.ImageStream">
            <summary>
            Gets or sets the image stream.
            </summary>
            <value>
            The image stream.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Elements2D.ImageModel2D.ImageStreamProperty">
            <summary>
            The image stream property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Elements2D.ImageModel2D.Opacity">
            <summary>
            Gets or sets the opacity.
            </summary>
            <value>
            The opacity.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Elements2D.ImageModel2D.OpacityProperty">
            <summary>
            The opacity property
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Elements2D.RelativePositionCanvas2D">
            <summary>
            Position content using relative position. 
            <para>Relative position (0,0) is the center of the canvas. LeftTop = (-1,1); RightTop = (1,1); LeftBottom = (-1,-1); RightBottom = (1, -1)</para>
            </summary>
            <seealso cref="T:HelixToolkit.Wpf.SharpDX.Elements2D.Panel2D" />
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Elements2D.RelativePositionCanvas2D.RelativeXProperty">
            <summary>
            The relative x property
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.RelativePositionCanvas2D.SetRelativeX(HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore,System.Double)">
            <summary>
            Sets the relative x.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.RelativePositionCanvas2D.GetRelativeX(HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore)">
            <summary>
            Gets the relative x.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Elements2D.RelativePositionCanvas2D.RelativeYProperty">
            <summary>
            The relative y property
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.RelativePositionCanvas2D.SetRelativeY(HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore,System.Double)">
            <summary>
            Sets the relative y.
            </summary>
            <param name="element">The element.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.RelativePositionCanvas2D.GetRelativeY(HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore)">
            <summary>
            Gets the relative y.
            </summary>
            <param name="element">The element.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.RelativePositionCanvas2D.Node2DRelativePositionCanvas.MeasureOverride(System.Numerics.Vector2)">
            <summary>
            Measures the override.
            </summary>
            <param name="availableSize">Size of the available.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Elements2D.RelativePositionCanvas2D.Node2DRelativePositionCanvas.ArrangeOverride(HelixToolkit.Maths.RectangleF)">
            <summary>
            Arranges the override.
            </summary>
            <param name="finalSize">The final size.</param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Elements2D.StackPanel2D.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>
            The orientation.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Elements2D.StackPanel2D.OrientationProperty">
            <summary>
            The orientation property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Elements2D.TextModel2D.TextAlignment">
            <summary>
            Gets or sets the text alignment.
            </summary>
            <value>
            The text alignment.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Elements2D.TextModel2D.TextAlignmentProperty">
            <summary>
            The text alignment property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Elements2D.TextModel2D.FlowDirection">
            <summary>
            Gets or sets the text alignment.
            </summary>
            <value>
            The text alignment.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Elements2D.TextModel2D.FlowDirectionProperty">
            <summary>
            The text alignment property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Elements2D.TextModel2D.FontFamily">
            <summary>
            Gets or sets the font family.
            </summary>
            <value>
            The font family.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Elements2D.TextModel2D.FontFamilyProperty">
            <summary>
            The font family property
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore">
            <summary>
            External Wrapper core to be used for different platform
            </summary>
            todo
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore.GUID">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore.OnCreateSceneNode">
            <summary>
            Called when [create scene node].
            </summary>
            <returns></returns>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore.OnSceneNodeCreated">
            <summary>
            Occurs when [on scene node created]. Make sure to hook up this event at the top of constructor of class, otherwise may miss the event.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Core2D.Element2DCore.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.BoundChangedEventArgs">
            <summary>
            
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BoundChangedEventArgs.NewBound">
            <summary>
            The new bound
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BoundChangedEventArgs.OldBound">
            <summary>
            The old bound
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.BoundChangedEventArgs.#ctor(HelixToolkit.Maths.BoundingBox,HelixToolkit.Maths.BoundingBox)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.BoundChangedEventArgs"/> class.
            </summary>
            <param name="newBound">The new bound.</param>
            <param name="oldBound">The old bound.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.Model.Element3DCore">
            <summary>
            External Wrapper core to be used for different platform
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Model.Element3DCore.GUID">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Model.Element3DCore.TotalModelMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Model.Element3DCore.OnCreateSceneNode">
            <summary>
            Called when [create scene node].
            </summary>
            <returns></returns>
        </member>
        <member name="E:HelixToolkit.Wpf.SharpDX.Model.Element3DCore.OnSceneNodeCreated">
            <summary>
            Occurs when [on scene node created]. Make sure to hook up this event at the top of constructor of class, otherwise may miss the event.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Model.Element3DCore.Bounds">
            <summary>
            Gets the bounds.
            </summary>
            <value>
            The bounds.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Model.Element3DCore.BoundsWithTransform">
            <summary>
            Gets the bounds with transform.
            </summary>
            <value>
            The bounds with transform.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Model.Element3DCore.BoundsSphere">
            <summary>
            Gets the bounds sphere.
            </summary>
            <value>
            The bounds sphere.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Model.Element3DCore.BoundsSphereWithTransform">
            <summary>
            Gets the bounds sphere with transform.
            </summary>
            <value>
            The bounds sphere with transform.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Model.Element3DCore.HitTest(HelixToolkit.SharpDX.HitTestContext,System.Collections.Generic.List{HelixToolkit.SharpDX.HitTestResult}@)">
            <summary>
            Hits the test.
            </summary>
            <param name="context">The context.</param>
            <param name="hits">The hits.</param>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Model.Element3DCore.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Model.Element3DCore.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.GeometryModel3D">
            <summary>
            Provides a base class for a scene model which contains geometry
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.GeometryModel3D.GeometryProperty">
            <summary>
            The geometry property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.GeometryModel3D.DepthBiasProperty">
            <summary>
            The depth bias property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.GeometryModel3D.SlopeScaledDepthBiasProperty">
            <summary>
            The slope scaled depth bias property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.GeometryModel3D.IsSelectedProperty">
            <summary>
            The is selected property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.GeometryModel3D.IsMultisampleEnabledProperty">
            <summary>
            The is multisample enabled property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.GeometryModel3D.FillModeProperty">
            <summary>
            The fill mode property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.GeometryModel3D.IsScissorEnabledProperty">
            <summary>
            The is scissor enabled property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.GeometryModel3D.EnableViewFrustumCheckProperty">
            <summary>
            The enable view frustum check property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.GeometryModel3D.IsDepthClipEnabledProperty">
            <summary>
            The is depth clip enabled property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.GeometryModel3D.PostEffectsProperty">
            <summary>
            The post effects property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.GeometryModel3D.AlwaysHittableProperty">
            <summary>
            The always hittable property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.GeometryModel3D.Geometry">
            <summary>
            Gets or sets the geometry.
            </summary>
            <value>
            The geometry.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.GeometryModel3D.IsThrowingShadow">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IThrowingShadow.IsThrowingShadow"/>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.GeometryModel3D.InstancesProperty">
            <summary>
            List of instance matrix.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.GeometryModel3D.Instances">
            <summary>
            List of instance matrix. 
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.GeometryModel3D.DepthBias">
            <summary>
            Gets or sets the depth bias.
            </summary>
            <value>
            The depth bias.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.GeometryModel3D.SlopeScaledDepthBias">
            <summary>
            Gets or sets the slope scaled depth bias.
            </summary>
            <value>
            The slope scaled depth bias.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.GeometryModel3D.IsSelected">
            <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
            <value>
              <c>true</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.GeometryModel3D.IsMultisampleEnabled">
            <summary>
            Only works under FillMode = Wireframe. MSAA is determined by viewport MSAA settings for FillMode = Solid
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.GeometryModel3D.FillMode">
            <summary>
            Gets or sets the fill mode.
            </summary>
            <value>
            The fill mode.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.GeometryModel3D.IsScissorEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is scissor enabled.
            </summary>
            <value>
              <c>true</c> if this instance is scissor enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.GeometryModel3D.IsDepthClipEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is depth clip enabled.
            </summary>
            <value>
              <c>true</c> if this instance is depth clip enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.GeometryModel3D.EnableViewFrustumCheck">
            <summary>
            Gets or sets a value indicating whether [enable view frustum check].
            </summary>
            <value>
              <c>true</c> if [enable view frustum check]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.GeometryModel3D.AlwaysHittable">
            <summary>
            Gets or sets a value indicating whether [always hittable] even it is not rendering.
            </summary>
            <value>
              <c>true</c> if [always hittable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.MaterialGeometryModel3D">
            <summary>
            
            </summary>
            <seealso cref="T:HelixToolkit.Wpf.SharpDX.GeometryModel3D" />
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.MaterialGeometryModel3D.MaterialProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.MaterialGeometryModel3D.IsTransparentProperty">
            <summary>
            Specifiy if model material is transparent. 
            During rendering, transparent objects are rendered after opaque objects. Transparent objects' order in scene graph are preserved.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MaterialGeometryModel3D.Material">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MaterialGeometryModel3D.IsTransparent">
            <summary>
            Specifiy if model material is transparent. 
            During rendering, transparent objects are rendered after opaque objects. Transparent objects' order in scene graph are preserved.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MaterialGeometryModel3D.AssignDefaultValuesToSceneNode(HelixToolkit.SharpDX.Model.Scene.SceneNode)">
            <summary>
            Assigns the default values to scene node.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Mouse3DEventArgs.OriginalInputEventArgs">
            <summary>
            The original mouse/touch event that generated this one.
            
            Useful for knowing what mouse button got pressed.
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.AutoSpacing">
            <summary>
            Gets or sets a value indicating whether [automatic spacing].
            </summary>
            <value>
              <c>true</c> if [automatic spacing]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.AutoSpacingProperty">
            <summary>
            The automatic spacing property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.AutoSpacingRate">
            <summary>
            Gets or sets the automatic spacing rate. Default perspective camera =5. If using Orthographic camera, increase the rate to > 15
            </summary>
            <value>
            The automatic spacing rate.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.AutoSpacingRateProperty">
            <summary>
            The automatic spacing rate property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.GridSpacing">
            <summary>
            Gets or sets the grid spacing.
            </summary>
            <value>
            The grid spacing.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.GridSpacingProperty">
            <summary>
            The grid spacing property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.GridThickness">
            <summary>
            Gets or sets the grid thickness.
            </summary>
            <value>
            The grid thickness.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.GridThicknessProperty">
            <summary>
            The grid thickness property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.FadingFactor">
            <summary>
            Gets or sets the fading factor.
            </summary>
            <value>
            The fading factor.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.FadingFactorProperty">
            <summary>
            The fading factor property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.PlaneColor">
            <summary>
            Gets or sets the color of the plane.
            </summary>
            <value>
            The color of the plane.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.PlaneColorProperty">
            <summary>
            The plane color property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.GridColor">
            <summary>
            Gets or sets the color of the grid.
            </summary>
            <value>
            The color of the grid.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.GridColorProperty">
            <summary>
            The grid color property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.RenderShadowMap">
            <summary>
            Gets or sets a value indicating whether [render shadow map].
            </summary>
            <value>
              <c>true</c> if [render shadow map]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.RenderShadowMapProperty">
            <summary>
            The render shadow map property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.UpAxis">
            <summary>
            Gets or sets up axis.
            </summary>
            <value>
            Up axis.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.UpAxisProperty">
            <summary>
            Up axis property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>
            The offset.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.OffsetProperty">
            <summary>
            The offset property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.GridPattern">
            <summary>
            Gets or sets the grid pattern.
            </summary>
            <value>
            The grid pattern.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.AxisPlaneGridModel3D.GridPatternProperty">
            <summary>
            The grid pattern property
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D">
            <summary>
            Static mesh batching. Supports multiple <see cref="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.BatchedMaterials"/>. All geometries are merged into single buffer for rendering. Indivisual material color infomations are encoded into vertex buffer.
            <para>
            <see cref="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.Material"/> is used if <see cref="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.BatchedMaterials"/> = null. And also used for shared material texture binding.
            </para>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.DepthBiasProperty">
            <summary>
            The depth bias property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.SlopeScaledDepthBiasProperty">
            <summary>
            The slope scaled depth bias property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.IsSelectedProperty">
            <summary>
            The is selected property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.IsMultisampleEnabledProperty">
            <summary>
            The is multisample enabled property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.FillModeProperty">
            <summary>
            The fill mode property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.IsScissorEnabledProperty">
            <summary>
            The is scissor enabled property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.EnableViewFrustumCheckProperty">
            <summary>
            The enable view frustum check property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.IsDepthClipEnabledProperty">
            <summary>
            The is depth clip enabled property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.MaterialProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.IsTransparentProperty">
            <summary>
            Specifiy if model material is transparent. 
            During rendering, transparent objects are rendered after opaque objects. Transparent objects' order in scene graph are preserved.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.FrontCounterClockwiseProperty">
            <summary>
            The front counter clockwise property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.CullModeProperty">
            <summary>
            The cull mode property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.InvertNormalProperty">
            <summary>
            The invert normal property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.RenderWireframeProperty">
            <summary>
            The render wireframe property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.WireframeColorProperty">
            <summary>
            The wireframe color property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.AlwaysHittableProperty">
            <summary>
            The always hittable property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.IsThrowingShadow">
            <summary>
            <see cref="P:HelixToolkit.SharpDX.Core.IThrowingShadow.IsThrowingShadow"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.DepthBias">
            <summary>
            Gets or sets the depth bias.
            </summary>
            <value>
            The depth bias.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.SlopeScaledDepthBias">
            <summary>
            Gets or sets the slope scaled depth bias.
            </summary>
            <value>
            The slope scaled depth bias.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.IsSelected">
            <summary>
            Gets or sets a value indicating whether this instance is selected.
            </summary>
            <value>
              <c>true</c> if this instance is selected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.IsMultisampleEnabled">
            <summary>
            Only works under FillMode = Wireframe. MSAA is determined by viewport MSAA settings for FillMode = Solid
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.FillMode">
            <summary>
            Gets or sets the fill mode.
            </summary>
            <value>
            The fill mode.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.IsScissorEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is scissor enabled.
            </summary>
            <value>
              <c>true</c> if this instance is scissor enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.IsDepthClipEnabled">
            <summary>
            Gets or sets a value indicating whether this instance is depth clip enabled.
            </summary>
            <value>
              <c>true</c> if this instance is depth clip enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.EnableViewFrustumCheck">
            <summary>
            Gets or sets a value indicating whether [enable view frustum check].
            </summary>
            <value>
              <c>true</c> if [enable view frustum check]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.Material">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.IsTransparent">
            <summary>
            Specifiy if model material is transparent. 
            During rendering, transparent objects are rendered after opaque objects. Transparent objects' order in scene graph are preserved.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.RenderWireframe">
            <summary>
            Gets or sets a value indicating whether [render overlapping wireframe].
            </summary>
            <value>
              <c>true</c> if [render wireframe]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.WireframeColor">
            <summary>
            Gets or sets the color of the wireframe.
            </summary>
            <value>
            The color of the wireframe.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.FrontCounterClockwise">
            <summary>
            Gets or sets a value indicating whether [front counter clockwise].
            </summary>
            <value>
              <c>true</c> if [front counter clockwise]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.CullMode">
            <summary>
            Gets or sets the cull mode.
            </summary>
            <value>
            The cull mode.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.InvertNormal">
            <summary>
            Invert the surface normal during rendering
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BatchedMeshGeometryModel3D.AlwaysHittable">
            <summary>
            Gets or sets a value indicating whether [always hittable] even it is not rendering.
            </summary>
            <value>
              <c>true</c> if [always hittable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.BillboardTextModel3D">
            <summary>
            
            </summary>
            <seealso cref="T:HelixToolkit.Wpf.SharpDX.GeometryModel3D" />
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BillboardTextModel3D.FixedSizeProperty">
            <summary>
            Fixed sized billboard. Default = true. 
            <para>When FixedSize = true, the billboard render size will be scale to normalized device coordinates(screen) size</para>
            <para>When FixedSize = false, the billboard render size will be actual size in 3D world space</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BillboardTextModel3D.FixedSize">
            <summary>
            Fixed sized billboard. Default = true. 
            <para>When FixedSize = true, the billboard render size will be scale to normalized device coordinates(screen) size</para>
            <para>When FixedSize = false, the billboard render size will be actual size in 3D world space</para>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BillboardTextModel3D.IsTransparentProperty">
            <summary>
            Specifiy if billboard texture is transparent. 
            During rendering, transparent objects are rendered after opaque objects. Transparent objects' order in scene graph are preserved.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BillboardTextModel3D.IsTransparent">
            <summary>
            Specifiy if  billboard texture is transparent. 
            During rendering, transparent objects are rendered after opaque objects. Transparent objects' order in scene graph are preserved.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BillboardTextModel3D.SamplerDescription">
            <summary>
            Gets or sets the sampler description.
            </summary>
            <value>
            The sampler description.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BillboardTextModel3D.SamplerDescriptionProperty">
            <summary>
            The sampler description property
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.BillboardTextModel3D.OnCreateSceneNode">
            <summary>
            Called when [create scene node].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.BillboardTextModel3D.AssignDefaultValuesToSceneNode(HelixToolkit.SharpDX.Model.Scene.SceneNode)">
            <summary>
            Assigns the default values to core.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.BoneGroupModel3D">
            <summary>
            Used to share bone matrices for multiple <see cref="T:HelixToolkit.Wpf.SharpDX.BoneSkinMeshGeometryModel3D"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.BoneGroupModel3D.BoneMatrices">
            <summary>
            Gets or sets the bone matrices.
            </summary>
            <value>
            The bone matrices.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.BoneGroupModel3D.BoneMatricesProperty">
            <summary>
            The bone matrices property
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.BoneSkinMeshGeometryModel3D">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.CompositeModel3D">
            <summary>
                Represents a composite Model3D.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CompositeModel3D.AlwaysHittable">
            <summary>
            Gets or sets a value indicating whether [always hittable].
            </summary>
            <value>
              <c>true</c> if [always hittable]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CompositeModel3D.Children">
            <summary>
                Gets the children.
            </summary>
            <value>
                The children.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CompositeModel3D.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.CompositeModel3D" /> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.CompositeModel3D.ChildrenChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Handles changes in the Children collection.
            </summary>
            <param name="sender">
            The sender.
            </param>
            <param name="e">
            The <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ContinuousRender3D">
            <summary>
            Use this model to keep update rendering in each frame.
            <para>Default behavior for render host is lazy rendering. 
            Only property changes trigger a render inside render loop. 
            However, sometimes user want to keep updating rendering each frame while doing shader animation using TimeStamp.
            Use this model to invalidate rendering in each frame and keep render host busy.
            </para>
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.AxisXColorProperty">
            <summary>
            <see cref="P:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.AxisXColor"/>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.AxisYColorProperty">
            <summary>
            <see cref="P:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.AxisYColor"/>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.AxisZColorProperty">
            <summary>
            <see cref="P:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.AxisZColor"/>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.LabelColorProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.CoordinateSystemLabelXProperty">
            <summary>
            The coordinate system label x property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.CoordinateSystemLabelYProperty">
            <summary>
            The coordinate system label Y property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.CoordinateSystemLabelZProperty">
            <summary>
            The coordinate system label Z property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.AxisXColor">
            <summary>
            Axis X Color
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.AxisYColor">
            <summary>
            Axis Y Color
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.AxisZColor">
            <summary>
            Axis Z Color
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.LabelColor">
            <summary>
            Label Color
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.CoordinateSystemLabelX">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.CoordinateSystemLabelY">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CoordinateSystemModel3D.CoordinateSystemLabelZ">
            <summary>
            
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D">
            <summary>
            Defines the <see cref="T:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D" />
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.CuttingOperation">
            <summary>
            Gets or sets the cutting operation.
            </summary>
            <value>
            The cutting operation.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.CuttingOperationProperty">
            <summary>
            The cutting operation property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.CrossSectionColorProperty">
            <summary>
            Defines the CrossSectionColorProperty
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.CrossSectionColor">
            <summary>
            Gets or sets the CrossSectionColor
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane1Property">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane1">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane2Property">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane2">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane3Property">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane3">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane4Property">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane4">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane5Property">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane5">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane6Property">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane6">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane7Property">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane7">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane8Property">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.EnablePlane8">
            <summary>
            Enable CrossSection Plane
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane1Property">
            <summary>
            Defines the Plane1Property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane1">
            <summary>
            Gets or sets the Plane1
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane2Property">
            <summary>
            Defines the Plane2Property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane2">
            <summary>
            Gets or sets the Plane2
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane3Property">
            <summary>
            Defines the Plane3Property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane3">
            <summary>
            Gets or sets the Plane3
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane4Property">
            <summary>
            Defines the Plane4Property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane4">
            <summary>
            Gets or sets the Plane4
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane5Property">
            <summary>
            Defines the Plane5Property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane5">
            <summary>
            Gets or sets the Plane5
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane6Property">
            <summary>
            Defines the Plane6Property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane6">
            <summary>
            Gets or sets the Plane6
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane7Property">
            <summary>
            Defines the Plane7Property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane7">
            <summary>
            Gets or sets the Plane7
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane8Property">
            <summary>
            Defines the Plane8Property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.CrossSectionMeshGeometryModel3D.Plane8">
            <summary>
            Gets or sets the Plane8
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.DepthPrepassElement3D">
            <summary>
            Do a depth prepass before rendering.
            <para>Must customize the DefaultEffectsManager and set DepthStencilState to DefaultDepthStencilDescriptions.DSSDepthEqualNoWrite in default ShaderPass from EffectsManager to achieve best performance.</para>
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DepthPrepassElement3D.OnCreateSceneNode">
            <summary>
            Called when [create scene node].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DepthPrepassElement3D.HitTest(HelixToolkit.SharpDX.HitTestContext,System.Collections.Generic.List{HelixToolkit.SharpDX.HitTestResult}@)">
            <summary>
            Hits the test.
            </summary>
            <param name="context">The context.</param>
            <param name="hits">The hits.</param>
            <returns></returns>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DynamicReflectionMap3D.EnableReflector">
            <summary>
            Gets or sets a value indicating whether [enable reflector].
            </summary>
            <value>
              <c>true</c> if [enable reflector]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.DynamicReflectionMap3D.EnableReflectorProperty">
            <summary>
            The enable reflector property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DynamicReflectionMap3D.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.DynamicReflectionMap3D.SizeProperty">
            <summary>
            The size property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DynamicReflectionMap3D.FarField">
            <summary>
            Gets or sets the far field.
            </summary>
            <value>
            The far field.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.DynamicReflectionMap3D.FarFieldProperty">
            <summary>
            The far field property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DynamicReflectionMap3D.NearField">
            <summary>
            Gets or sets the near field.
            </summary>
            <value>
            The near field.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.DynamicReflectionMap3D.NearFieldProperty">
            <summary>
            The near field property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DynamicReflectionMap3D.IsLeftHanded">
            <summary>
            Gets or sets a value indicating whether this instance is left handed.
            </summary>
            <value>
              <c>true</c> if this instance is left handed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.DynamicReflectionMap3D.IsLeftHandedProperty">
            <summary>
            The is left handed property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DynamicReflectionMap3D.IsDynamicScene">
            <summary>
            Gets or sets a value indicating whether this scene is dynamic scene.
            If true, reflection map will be updated in each frame. Otherwise it will only be updated if scene graph or visibility changed.
            </summary>
            <value>
              <c>true</c> if this instance is dynamic scene; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Element3DPresenter.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.Element3DPresenter.ContentProperty">
            <summary>
            The content property
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.EnvironmentMap3D">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.EnvironmentMap3D.TextureProperty">
            <summary>
            The texture property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.EnvironmentMap3D.Texture">
            <summary>
            Gets or sets the texture.
            </summary>
            <value>
            The texture.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.EnvironmentMap3D.SkipRendering">
            <summary>
            Skip environment map rendering, but still keep it available for other object to use.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.EnvironmentMap3D.OnCreateSceneNode">
            <summary>
            Called when [create scene node].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.EnvironmentMap3D.AssignDefaultValuesToSceneNode(HelixToolkit.SharpDX.Model.Scene.SceneNode)">
            <summary>
            Assigns the default values to scene node.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.GroupModel3D">
            <summary>
            
            </summary>
            <seealso cref="T:HelixToolkit.Wpf.SharpDX.GroupElement3D" />
            <seealso cref="T:HelixToolkit.SharpDX.IHitable" />
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.InstancingBillboardModel3D">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.InstancingBillboardModel3D.InstanceAdvArrayProperty">
            <summary>
            List of instance parameter. 
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.InstancingBillboardModel3D.InstanceParamArray">
            <summary>
            List of instance parameters. 
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.InstancingBillboardModel3D.OnCreateSceneNode">
            <summary>
            Called when [create scene node].
            </summary>
            <returns></returns>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.InstancingMeshGeometryModel3D.InstanceIdentifiersProperty">
            <summary>
            If bind to identifiers, hit test returns identifier as Tag in HitTestResult.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.InstancingMeshGeometryModel3D.OctreeManagerProperty">
            <summary>
            Add octree manager to use octree hit test.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.InstancingMeshGeometryModel3D.InstanceAdvArrayProperty">
            <summary>
            List of instance parameter. 
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.InstancingMeshGeometryModel3D.InstanceIdentifiers">
            <summary>
            If bind to identifiers, hit test returns identifier as Tag in HitTestResult.
            </summary>        
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.InstancingMeshGeometryModel3D.InstanceParamArray">
            <summary>
            List of instance parameters. 
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.LineGeometryModel3D">
            <summary>
            
            </summary>
            <seealso cref="T:HelixToolkit.Wpf.SharpDX.GeometryModel3D" />
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.LineGeometryModel3D.ColorProperty">
            <summary>
            The color property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.LineGeometryModel3D.ThicknessProperty">
            <summary>
            The thickness property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.LineGeometryModel3D.SmoothnessProperty">
            <summary>
            The smoothness property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.LineGeometryModel3D.HitTestThicknessProperty">
            <summary>
            The hit test thickness property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.LineGeometryModel3D.FixedSizeProperty">
            <summary>
            Fixed sized billboard. Default = true. 
            <para>When FixedSize = true, the billboard render size will be scale to normalized device coordinates(screen) size</para>
            <para>When FixedSize = false, the billboard render size will be actual size in 3D world space</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineGeometryModel3D.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineGeometryModel3D.Thickness">
            <summary>
            Gets or sets the thickness.
            </summary>
            <value>
            The thickness.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineGeometryModel3D.Smoothness">
            <summary>
            Gets or sets the smoothness.
            </summary>
            <value>
            The smoothness.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineGeometryModel3D.HitTestThickness">
            <summary>
            Used only for point/line hit test
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineGeometryModel3D.FixedSize">
            <summary>
            Fixed sized billboard. Default = true. 
            <para>When FixedSize = true, the billboard render size will be scale to normalized device coordinates(screen) size</para>
            <para>When FixedSize = false, the billboard render size will be actual size in 3D world space</para>
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.LineGeometryModel3D.OnCreateSceneNode">
            <summary>
            Called when [create scene node].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.LineGeometryModel3D.AssignDefaultValuesToSceneNode(HelixToolkit.SharpDX.Model.Scene.SceneNode)">
            <summary>
            Assigns the default values to core.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.LineMaterialGeometryModel3D.MaterialProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineMaterialGeometryModel3D.Material">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.LineMaterialGeometryModel3D.HitTestThicknessProperty">
            <summary>
            The hit test thickness property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineMaterialGeometryModel3D.HitTestThickness">
            <summary>
            Used only for point/line hit test
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.LineMaterialGeometryModel3D.OnCreateSceneNode">
            <summary>
            Called when [create scene node].
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.MeshGeometryModel3D">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.MeshGeometryModel3D.FrontCounterClockwiseProperty">
            <summary>
            The front counter clockwise property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.MeshGeometryModel3D.CullModeProperty">
            <summary>
            The cull mode property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.MeshGeometryModel3D.InvertNormalProperty">
            <summary>
            The invert normal property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.MeshGeometryModel3D.RenderWireframeProperty">
            <summary>
            The render wireframe property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.MeshGeometryModel3D.WireframeColorProperty">
            <summary>
            The wireframe color property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MeshGeometryModel3D.RenderWireframe">
            <summary>
            Gets or sets a value indicating whether [render overlapping wireframe].
            </summary>
            <value>
              <c>true</c> if [render wireframe]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MeshGeometryModel3D.WireframeColor">
            <summary>
            Gets or sets the color of the wireframe.
            </summary>
            <value>
            The color of the wireframe.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MeshGeometryModel3D.FrontCounterClockwise">
            <summary>
            Gets or sets a value indicating whether [front counter clockwise].
            </summary>
            <value>
              <c>true</c> if [front counter clockwise]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MeshGeometryModel3D.CullMode">
            <summary>
            Gets or sets the cull mode.
            </summary>
            <value>
            The cull mode.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.MeshGeometryModel3D.InvertNormal">
            <summary>
            Invert the surface normal during rendering
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MeshGeometryModel3D.OnCreateSceneNode">
            <summary>
            Called when [create scene node].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.MeshGeometryModel3D.AssignDefaultValuesToSceneNode(HelixToolkit.SharpDX.Model.Scene.SceneNode)">
            <summary>
            Assigns the default values to core.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ObservableElement3DCollection">
            <summary>
            Provides an observable collection of Element3D.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ParticleStormModel3D.BlendFactor">
            <summary>
            Gets or sets the blend factor for blending
            </summary>
            <value>
            The blend factor.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ParticleStormModel3D.BlendFactorProperty">
            <summary>
            The blend factor property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ParticleStormModel3D.SampleMask">
            <summary>
            Gets or sets the sample mask used during blending
            </summary>
            <value>
            The sample mask.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ParticleStormModel3D.SampleMaskProperty">
            <summary>
            The sample mask property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ParticleStormModel3D.Instances">
            <summary>
            List of instance matrix. 
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ParticleStormModel3D.InstancesProperty">
            <summary>
            List of instance matrix.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ParticleStormModel3D.EnableViewFrustumCheckProperty">
            <summary>
            The enable view frustum check property
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.PointGeometryModel3D">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PointGeometryModel3D.FixedSizeProperty">
            <summary>
            Fixed sized. Default = true. 
            <para>When FixedSize = true, the render size will be scale to normalized device coordinates(screen) size</para>
            <para>When FixedSize = false, the render size will be actual size in 3D world space</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointGeometryModel3D.HitTestThickness">
            <summary>
            Used only for point/line hit test
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointGeometryModel3D.FixedSize">
            <summary>
            Fixed sized billboard. Default = true. 
            <para>When FixedSize = true, the billboard render size will be scale to normalized device coordinates(screen) size</para>
            <para>When FixedSize = false, the billboard render size will be actual size in 3D world space</para>
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointGeometryModel3D.EnableColorBlending">
            <summary>
            Gets or sets a value indicating whether [enable color blending].
            <para>Once enabled, final color 
            = <see cref="P:HelixToolkit.Wpf.SharpDX.PointGeometryModel3D.BlendingFactor"/> * <see cref="P:HelixToolkit.Wpf.SharpDX.PointGeometryModel3D.Color"/> + (1 - <see cref="P:HelixToolkit.Wpf.SharpDX.PointGeometryModel3D.BlendingFactor"/>) * Vertex Color.</para>
            </summary>
            <value>
              <c>true</c> if [enable color blending]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointGeometryModel3D.BlendingFactor">
            <summary>
            Gets or sets the blending factor.
            <para>Used when <see cref="P:HelixToolkit.Wpf.SharpDX.PointGeometryModel3D.EnableColorBlending"/> = true.</para>
            </summary>
            <value>
            The blending factor.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PointGeometryModel3D.OnCreateSceneNode">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PointGeometryModel3D.AssignDefaultValuesToSceneNode(HelixToolkit.SharpDX.Model.Scene.SceneNode)">
            <summary>
            Assigns the default values to core.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PointMaterialGeometryModel3D.MaterialProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointMaterialGeometryModel3D.Material">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PointMaterialGeometryModel3D.HitTestThicknessProperty">
            <summary>
            The hit test thickness property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointMaterialGeometryModel3D.HitTestThickness">
            <summary>
            Used only for point/line hit test
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PointMaterialGeometryModel3D.OnCreateSceneNode">
            <summary>
            Called when [create render core].
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.PostEffectBloom">
            <summary>
            
            </summary>
            <seealso cref="T:HelixToolkit.Wpf.SharpDX.Element3D" />
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectBloom.EffectName">
            <summary>
            Gets or sets the name of the effect.
            </summary>
            <value>
            The name of the effect.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectBloom.EffectNameProperty">
            <summary>
            The effect name property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectBloom.ThresholdColor">
            <summary>
            Gets or sets the threshold color.
            </summary>
            <value>
            The threshold color.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectBloom.ThresholdColorProperty">
            <summary>
            The threshold color property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectBloom.NumberOfBlurPass">
            <summary>
            Gets or sets the number of blur pass.
            </summary>
            <value>
            The number of blur pass.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectBloom.NumberOfBlurPassProperty">
            <summary>
            The number of blur pass property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectBloom.BloomExtractIntensity">
            <summary>
            Gets or sets the bloom extract intensity.
            </summary>
            <value>
            The bloom extract intensity.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectBloom.BloomExtractIntensityProperty">
            <summary>
            The bloom extract intensity property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectBloom.BloomPassIntensity">
            <summary>
            Gets or sets the bloom pass intensity.
            </summary>
            <value>
            The bloom pass intensity.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectBloom.BloomPassIntensityProperty">
            <summary>
            The bloom pass intensity property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectBloom.BloomCombineIntensity">
            <summary>
            Gets or sets the bloom combine intensity.
            </summary>
            <value>
            The bloom combine intensity.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectBloom.BloomCombineIntensityProperty">
            <summary>
            The bloom combine intensity property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectBloom.BloomCombineSaturation">
            <summary>
            Gets or sets the bloom combine saturation.
            </summary>
            <value>
            The bloom combine saturation.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectBloom.BloomCombineSaturationProperty">
            <summary>
            The bloom combine saturation property
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PostEffectBloom.AssignDefaultValuesToSceneNode(HelixToolkit.SharpDX.Model.Scene.SceneNode)">
            <summary>
            Assigns the default values to core.
            </summary>
            <param name="node">The core.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.PostEffectMeshBorderHighlight">
            <summary>
            Highlight the border of meshes
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectMeshBorderHighlight.DrawMode">
            <summary>
            Gets or sets the draw mode.
            </summary>
            <value>
            The draw mode.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectMeshBorderHighlight.DrawModeProperty">
            <summary>
            The draw mode property
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.PostEffectMeshOutlineBlur">
            <summary>
            Highlight the border of meshes
            </summary>
            <seealso cref="T:HelixToolkit.Wpf.SharpDX.Element3D" />
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectMeshOutlineBlur.EffectName">
            <summary>
            Gets or sets the name of the effect.
            </summary>
            <value>
            The name of the effect.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectMeshOutlineBlur.EffectNameProperty">
            <summary>
            The effect name property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectMeshOutlineBlur.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectMeshOutlineBlur.ColorProperty">
            <summary>
            The color property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectMeshOutlineBlur.ScaleX">
            <summary>
            Gets or sets the scale x.
            </summary>
            <value>
            The scale x.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectMeshOutlineBlur.ScaleXProperty">
            <summary>
            The scale x property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectMeshOutlineBlur.ScaleY">
            <summary>
            Gets or sets the scale y.
            </summary>
            <value>
            The scale y.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectMeshOutlineBlur.ScaleYProperty">
            <summary>
            The scale y property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectMeshOutlineBlur.NumberOfBlurPass">
            <summary>
            Gets or sets the number of blur pass.
            </summary>
            <value>
            The number of blur pass.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectMeshOutlineBlur.NumberOfBlurPassProperty">
            <summary>
            The number of blur pass property
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRay">
            <summary>
            
            </summary>
            <seealso cref="T:HelixToolkit.Wpf.SharpDX.Element3D" />
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRay.EffectNameProperty">
            <summary>
            The effect name property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRay.EffectName">
            <summary>
            Gets or sets the name of the effect.
            </summary>
            <value>
            The name of the effect.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRay.OutlineColorProperty">
            <summary>
            The outline color property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRay.OutlineColor">
            <summary>
            Gets or sets the color of the outline.
            </summary>
            <value>
            The color of the outline.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRay.OutlineFadingFactorProperty">
            <summary>
            The outline fading factor property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRay.OutlineFadingFactor">
            <summary>
            Gets or sets the outline fading factor.
            </summary>
            <value>
            The outline fading factor.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRay.EnableDoublePassProperty">
            <summary>
            Gets or sets a value indicating whether [double pass]. Double pass uses stencil buffer to reduce overlapping artifacts
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRay.EnableDoublePass">
            <summary>
            Gets or sets a value indicating whether [double pass]. Double pass uses stencil buffer to reduce overlapping artifacts
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRay.AssignDefaultValuesToSceneNode(HelixToolkit.SharpDX.Model.Scene.SceneNode)">
            <summary>
            Assigns the default values to core.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRayGrid">
            <summary>
            
            </summary>
            <seealso cref="T:HelixToolkit.Wpf.SharpDX.Element3D" />
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRayGrid.EffectNameProperty">
            <summary>
            The effect name property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRayGrid.EffectName">
            <summary>
            Gets or sets the name of the effect.
            </summary>
            <value>
            The name of the effect.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRayGrid.GridColorProperty">
            <summary>
            The outline color property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRayGrid.GridColor">
            <summary>
            Gets or sets the color of the outline.
            </summary>
            <value>
            The color of the outline.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRayGrid.GridDensity">
            <summary>
            Gets or sets the grid density.
            </summary>
            <value>
            The grid density.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRayGrid.GridDensityProperty">
            <summary>
            The grid density property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRayGrid.DimmingFactor">
            <summary>
            Gets or sets the dimming factor.
            </summary>
            <value>
            The dimming factor.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRayGrid.DimmingFactorProperty">
            <summary>
            The dimming factor property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRayGrid.BlendingFactor">
            <summary>
            Gets or sets the blending factor for grid and original mesh color blending
            </summary>
            <value>
            The blending factor.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRayGrid.BlendingFactorProperty">
            <summary>
            The blending factor property
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PostEffectMeshXRayGrid.AssignDefaultValuesToSceneNode(HelixToolkit.SharpDX.Model.Scene.SceneNode)">
            <summary>
            Assigns the default values to core.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.SceneNodeGroupModel3D">
            <summary>
            Used to hold scene nodes without WPF/UWP dependencies.
            Used for code behind only. Avoid performance penalty from Dependency Properties.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.SceneNodeGroupModel3D.AddNode(HelixToolkit.SharpDX.Model.Scene.SceneNode)">
            <summary>
            Adds a child node. <see cref="M:HelixToolkit.SharpDX.Model.Scene.GroupNodeBase.AddChildNode(HelixToolkit.SharpDX.Model.Scene.SceneNode)"/>
            </summary>
            <param name="node">The node.</param>
            <returns>Success or not</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.SceneNodeGroupModel3D.RemoveNode(HelixToolkit.SharpDX.Model.Scene.SceneNode,System.Boolean)">
            <summary>
            Removes child node. <see cref="M:HelixToolkit.SharpDX.Model.Scene.GroupNodeBase.RemoveChildNode(HelixToolkit.SharpDX.Model.Scene.SceneNode,System.Boolean)"/>
            If detach = false, then developer must manage the life cycle of the removed child node manually.
            </summary>
            <param name="node">The node.</param>
            <param name="detachChildren">Detach children after being removed.</param>
            <returns>Sucess or not</returns>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.SceneNodeGroupModel3D.Clear(System.Boolean)">
            <summary>
            Clears this group. <see cref="M:HelixToolkit.SharpDX.Model.Scene.GroupNodeBase.Clear(System.Boolean)"/>. If detach = false, then developer must manage the life cycle of the cleared child nodes manually.
            </summary>
            <param name="detachChildren">
            </param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.SceneNodeGroupModel3D.MoveNode(System.Int32,System.Int32)">
            <summary>
            Moves the child node order. <see cref="M:HelixToolkit.SharpDX.Model.Scene.GroupNodeBase.MoveChildNode(System.Int32,System.Int32)"/>
            </summary>
            <param name="fromIndex">From index.</param>
            <param name="toIndex">To index.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.SceneNodeGroupModel3D.TransferNode(HelixToolkit.SharpDX.Model.Scene.SceneNode,HelixToolkit.SharpDX.Model.Scene.GroupNodeBase)">
            <summary>
            Transfers the node to another group. <see cref="M:HelixToolkit.SharpDX.Model.Scene.GroupNodeBase.TransferChildNode(HelixToolkit.SharpDX.Model.Scene.SceneNode,HelixToolkit.SharpDX.Model.Scene.GroupNodeBase)"/>
            </summary>
            <param name="item">The item.</param>
            <param name="target">The target.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.SceneNodeGroupModel3D.OnCreateSceneNode">
            <summary>
            Called when [create scene node].
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ScreenDuplicationModel">
            <summary>
            Limitation: Under switchable graphics card setup(Laptop with integrated graphics card and external graphics card), 
            only monitor outputs using integrated graphics card is fully supported.
            Trying to clone monitor outputs by external graphics card, 
            the clone window must reside in those monitors which is rendered by external graphics card, or error will be occurred.
            Ref: https://support.microsoft.com/en-us/help/3019314/error-generated-when-desktop-duplication-api-capable-application-is-ru
            </summary>
            <seealso cref="T:HelixToolkit.Wpf.SharpDX.Element3D" />
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenDuplicationModel.CaptureRectangle">
            <summary>
            Gets or sets the screen rectangle on current display
            </summary>
            <value>
            The screen rectangle.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ScreenDuplicationModel.CaptureRectangleProperty">
            <summary>
            The screen rectangle property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenDuplicationModel.DisplayIndex">
            <summary>
            Gets or sets the display index.
            </summary>
            <value>
            The display index.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ScreenDuplicationModel.DisplayIndexProperty">
            <summary>
            The display index property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenDuplicationModel.StretchToFill">
            <summary>
            Gets or sets a value indicating whether [stretch to fill].
            </summary>
            <value>
              <c>true</c> if [stretch to fill]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ScreenDuplicationModel.StretchToFillProperty">
            <summary>
            The stretch to fill property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenDuplicationModel.ShowMouseCursor">
            <summary>
            Gets or sets a value indicating whether [show mouse cursor].
            </summary>
            <value>
              <c>true</c> if [show mouse cursor]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ScreenDuplicationModel.ShowMouseCursorProperty">
            <summary>
            The show mouse cursor property
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ScreenDuplicationModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.ScreenDuplicationModel"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ScreenDuplicationModel.AssignDefaultValuesToSceneNode(HelixToolkit.SharpDX.Model.Scene.SceneNode)">
            <summary>
            Assigns the default values to core.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ScreenQuadModel3D">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenQuadModel3D.Depth">
            <summary>
            Gets or sets the depth of the quad, range from 0 ~ 1.
            </summary>
            <value>
            The depth.
            </value>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D">
            <summary>
            ScreenSpacedElement3D uses a fixed camera to render model (Mainly used for view box and coordinate system rendering) onto screen which is separated from viewport camera.
            <para>
            Default fix camera is perspective camera with FOV 45 degree and camera distance = 20. Look direction is always looking at (0,0,0).
            </para>
            <para>
            User must properly scale the model to fit into the camera frustum. The usual maximum size is from (5,5,5) to (-5,-5,-5) bounding box.
            </para>
            <para>
            User can use <see cref="P:HelixToolkit.SharpDX.Model.Scene.ScreenSpacedNode.SizeScale"/> to scale the size of the rendering.
            </para>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.RelativeScreenLocationXProperty">
            <summary>
            <see cref="P:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.RelativeScreenLocationX"/>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.RelativeScreenLocationYProperty">
            <summary>
            <see cref="P:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.RelativeScreenLocationY"/>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.SizeScaleProperty">
            <summary>
            <see cref="P:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.SizeScale"/>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.EnableMoverProperty">
            <summary>
            The enable mover property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.ModeProperty">
            <summary>
            The mode property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.AbsolutePosition3DProperty">
            <summary>
            The absolute position3 d property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.EnableMover">
            <summary>
            Gets or sets a value indicating whether [enable mover].
            </summary>
            <value>
              <c>true</c> if [enable mover]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.RelativeScreenLocationX">
            <summary>
            Relative Location X on screen. Range from -1~1
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.RelativeScreenLocationY">
            <summary>
            Relative Location Y on screen. Range from -1~1
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.SizeScale">
            <summary>
            Size scaling
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>
            The mode.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.CameraType">
            <summary>
            Only being used when <see cref="P:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.Mode"/> is RelativeScreenSpaced
            </summary>
            <value>
            The type of the camera.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.AbsolutePosition3D">
            <summary>
            Gets or sets the absolute position in 3d. Use by <see cref="P:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.Mode"/> = <see cref="F:HelixToolkit.SharpDX.ScreenSpacedMode.AbsolutePosition3D"/>
            </summary>
            <value>
            The absolute position3 d.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.FarPlaneDistance">
            <summary>
            Gets or sets the far plane distance.
            </summary>
            <value>
            The far plane distance.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.NearPlaneDistance">
            <summary>
            Gets or sets the near plane distance.
            </summary>
            <value>
            The near plane distance.
            </value>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ScreenSpacedGroup3D">
            <summary>
            ScreenSpacedGroup3D uses a fixed camera to render model (Mainly used for view box and coordinate system rendering) onto screen which is separated from viewport camera.
            <para>
            Default fix camera is perspective camera with FOV 45 degree and camera distance = 20. Look direction is always looking at (0,0,0).
            </para>
            <para>
            User must properly scale the model to fit into the camera frustum. The usual maximum size is from (5,5,5) to (-5,-5,-5) bounding box.
            </para>
            <para>
            User can use <see cref="P:HelixToolkit.Wpf.SharpDX.ScreenSpacedElement3D.SizeScale"/> to scale the size of the rendering.
            </para>
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.SortingGroupModel3D.EnableSorting">
            <summary>
            Gets or sets a value indicating whether [enable sorting].
            </summary>
            <value>
              <c>true</c> if [enable sorting]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.SortingGroupModel3D.EnableSortingProperty">
            <summary>
            The enable sorting property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.SortingGroupModel3D.SortingInterval">
            <summary>
            Gets or sets the sorting interval by milliseconds. Default is 500ms
            </summary>
            <value>
            The sorting interval.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.SortingGroupModel3D.SortingIntervalProperty">
            <summary>
            The sorting interval property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.SortingGroupModel3D.SortTransparentOnly">
            <summary>
            Gets or sets a value indicating whether [sort transparent only].
            </summary>
            <value>
              <c>true</c> if [sort transparent only]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.SortingGroupModel3D.SortTransparentOnlyProperty">
            <summary>
            The sort transparent only property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.SortingGroupModel3D.SortingMethod">
            <summary>
            Gets or sets the sorting method.
            </summary>
            <value>
            The sorting method.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.SortingGroupModel3D.SortingMethodProperty">
            <summary>
            The sorting method property
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.TopMostGroup3D">
            <summary>
            Provides a way to render child elements always on top of other elements
            This is rendered at the same level of screen spaced group items.
            Child items do not support post effects.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.TopMostGroup3D.EnableTopMost">
            <summary>
            Gets or sets a value indicating whether [enable top most mode].
            </summary>
            <value>
              <c>true</c> if [enable top most mode]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.TransformManipulator3D.OnTargetChanged(HelixToolkit.Wpf.SharpDX.Element3D)">
            <summary>
            Called when [target changed]. Use target boundingbox center as Manipulator center
            </summary>
            <param name="target">The target.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ViewBoxModel3D">
            <summary>
            <para>Viewbox replacement for Viewport using swapchain rendering.</para>
            <para>To replace box texture (such as text, colors), bind to custom material with different diffuseMap. </para>
            <para>Create a image with 1 row and 6 evenly distributed columns. Each column occupies one box face. The face order is Front, Back, Down, Up, Left, Right</para>
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ViewBoxModel3D.UpDirectionProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ViewBoxModel3D.UpDirection">
            <summary>
            Gets or sets up direction.
            </summary>
            <value>
            Up direction.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ViewBoxModel3D.EnableEdgeClick">
            <summary>
            Gets or sets a value indicating whether [enable edge click].
            </summary>
            <value>
              <c>true</c> if [enable edge click]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ViewBoxModel3D.EnableEdgeClickProperty">
            <summary>
            The enable edge click property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.VolumeTextureModel3D.VolumeMaterial">
            <summary>
            Gets or sets the volume material.
            </summary>
            <value>
            The volume material.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DirectionalLight3D.Direction">
            <summary>
            Direction of the light.
            It applies to Directional Light and to Spot Light,
            for all other lights it is ignored.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.Light3D.Color">
            <summary>
            Color of the light.
            For simplicity, this color applies to the diffuse and specular properties of the light.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointLight3D.Position">
            <summary>
            The position of the model in world space.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointLight3D.Attenuation">
            <summary>
            Attenuation coefficients:
            X = constant attenuation,
            Y = linar attenuation,
            Z = quadratic attenuation.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb172279(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointLight3D.Range">
            <summary>
            Range of this light. This is the maximum distance 
            of a pixel being lit by this light.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb172279(v=vs.85).aspx
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ShadowMap3D">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ShadowMap3D.ResolutionProperty">
            <summary>
            The resolution property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ShadowMap3D.BiasProperty">
            <summary>
            The bias property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ShadowMap3D.IntensityProperty">
            <summary>
            The intensity property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ShadowMap3D.LightCameraProperty">
            <summary>
            The light camera property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ShadowMap3D.DistanceProperty">
            <summary>
            The distance property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ShadowMap3D.OrthoWidthProperty">
            <summary>
            The ortho width property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ShadowMap3D.FarFieldDistanceProperty">
            <summary>
            The far field distance property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ShadowMap3D.NearFieldDistanceProperty">
            <summary>
            The near field distance property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ShadowMap3D.Distance">
            <summary>
            Gets or sets the distance for shadow caster.
            </summary>
            <value>
            The distance of the shadow caster
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ShadowMap3D.OrthoWidth">
            <summary>
            Gets or sets the width of the orthographic camera used in shadow caster.
            </summary>
            <value>
            The width of the orthographic matrix.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ShadowMap3D.Resolution">
            <summary>
            Gets or sets the resolution.
            </summary>
            <value>
            The resolution.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ShadowMap3D.Bias">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ShadowMap3D.Intensity">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ShadowMap3D.NearFieldDistance">
            <summary>
            Gets or sets the near field distance.
            </summary>
            <value>
            The near field distance.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ShadowMap3D.FarFieldDistance">
            <summary>
            Gets or sets the far field distance.
            </summary>
            <value>
            The far field distance.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ShadowMap3D.LightCamera">
            <summary>
            Distance of the directional light from origin
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ShadowMap3D.AutoCoverCompleteScene">
            <summary>
            Gets or sets a value indicating whether shadow map should automatically cover complete scene. Only effective with directional light.
            <para>Limitation: Currently unable to properly cover BoneSkinned model animation.</para>
            </summary>
            <value>
              <c>true</c> if [automaticcally cover complete scene]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ShadowMap3D.IsSceneDynamic">
            <summary>
            Gets or sets a value indicating whether the scene is dynamic. Only effective if <see cref="P:HelixToolkit.Wpf.SharpDX.ShadowMap3D.AutoCoverCompleteScene"/> is true.
            <para>Setting to true will force shadow map to update the shadow camera for each frame. May impact the performance.</para>
            </summary>
            <value>
              <c>true</c> if scene is dynamic; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.ShadowMap3D.AssignDefaultValuesToSceneNode(HelixToolkit.SharpDX.Model.Scene.SceneNode)">
            <summary>
            Assigns the default values to core.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.SpotLight3D.Direction">
            <summary>
            Direction of the light.
            It applies to Directional Light and to Spot Light,
            for all other lights it is ignored.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.SpotLight3D.Falloff">
            <summary>
            Decay Exponent of the spotlight.
            The falloff the spotlight between inner and outer angle
            depends on this value.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb174697(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.SpotLight3D.OuterAngle">
            <summary>
            Full outer angle of the spot (Phi) in degrees
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb174697(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.SpotLight3D.InnerAngle">
            <summary>
            Full inner angle of the spot (Theta) in degrees. 
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb174697(v=vs.85).aspx
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.ColorStripeMaterial">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ColorStripeMaterial.DiffuseColorProperty">
            <summary>
            The diffuse color property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ColorStripeMaterial.DiffuseColor">
            <summary>
            Gets or sets the diffuse color for the material.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ColorStripeMaterial.ColorStripeXProperty">
            <summary>
            The color stripe property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ColorStripeMaterial.ColorStripeX">
            <summary>
            Gets or sets the color stripe.
            </summary>
            <value>
            The color stripe.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ColorStripeMaterial.ColorStripeYProperty">
            <summary>
            The color stripe property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ColorStripeMaterial.ColorStripeY">
            <summary>
            Gets or sets the color stripe.
            </summary>
            <value>
            The color stripe.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ColorStripeMaterial.ColorStripeSamplerProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ColorStripeMaterial.ColorStripeXEnabled">
            <summary>
            Gets or sets a value indicating whether [color stripe x enabled].
            </summary>
            <value>
              <c>true</c> if [color stripe x enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ColorStripeMaterial.ColorStripeXEnabledProperty">
            <summary>
            The color stripe x enabled property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ColorStripeMaterial.ColorStripeYEnabled">
            <summary>
            Gets or sets a value indicating whether [color stripe y enabled].
            </summary>
            <value>
              <c>true</c> if [color stripe y enabled]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.ColorStripeMaterial.ColorStripeYEnabledProperty">
            <summary>
            The color stripe y enabled property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.ColorStripeMaterial.ColorStripeSampler">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.DiffuseMaterial.DiffuseColorProperty">
            <summary>
            The diffuse color property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DiffuseMaterial.DiffuseColor">
            <summary>
            Gets or sets the diffuse color for the material.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb147175(v=vs.85).aspx
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.DiffuseMaterial.DiffuseMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DiffuseMaterial.DiffuseMap">
            <summary>
            Gets or sets the diffuse map.
            </summary>
            <value>
            The diffuse map.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.DiffuseMaterial.DiffuseMapSamplerProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DiffuseMaterial.DiffuseMapSampler">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.DiffuseMaterial.UVTransformProperty">
            <summary>
            The uv transform property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DiffuseMaterial.UVTransform">
            <summary>
            Gets or sets the texture uv transform.
            </summary>
            <value>
            The uv transform.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DiffuseMaterial.EnableUnLit">
            <summary>
            Gets or sets a value indicating whether whether disable lighting. Directly render diffuse color and diffuse map.
            </summary>
            <value>
              <c>true</c> if [enable un lit]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.DiffuseMaterial.EnableUnLitProperty">
            <summary>
            The enable un lit property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DiffuseMaterial.EnableFlatShading">
            <summary>
            Gets or sets a value indicating whether [enable flat shading].
            </summary>
            <value>
              <c>true</c> if [enable flat shading]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.DiffuseMaterial.VertexColorBlendingFactor">
            <summary>
            Gets or sets the vertex color blending factor.
            Final Diffuse Color = (1 - VertexColorBlendingFactor) * Diffuse + VertexColorBlendingFactor * Vertex Color
            </summary>
            <value>
            The vertex color blending factor.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DiffuseMaterials.FromScRgb(System.Single,System.Single,System.Single,System.Single)">
            <summary>
             FromScRgb
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.DiffuseMaterials.ScRgbTosRgb(System.Single)">
            <summary>
             private helper function to set context values from a color value with a set context and ScRgb values
            </summary>
            
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.LineMaterial.ColorProperty">
            <summary>
            The color property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.LineMaterial.ThicknessProperty">
            <summary>
            The thickness property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.LineMaterial.SmoothnessProperty">
            <summary>
            The smoothness property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineMaterial.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineMaterial.Thickness">
            <summary>
            Gets or sets the thickness.
            </summary>
            <value>
            The thickness.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineMaterial.Smoothness">
            <summary>
            Gets or sets the smoothness.
            </summary>
            <value>
            The smoothness.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineMaterial.EnableDistanceFading">
            <summary>
            Gets or sets a value indicating whether [enable distance fading].
            </summary>
            <value>
              <c>true</c> if [enable distance fading]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineMaterial.FadingNearDistance">
            <summary>
            Gets or sets the fading near distance.
            </summary>
            <value>
            The fading near distance.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineMaterial.FadingFarDistance">
            <summary>
            Gets or sets the fading far distance.
            </summary>
            <value>
            The fading far distance.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineMaterial.Texture">
            <summary>
            Gets or sets the texture.
            </summary>
            <value>
            The texture.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineMaterial.TextureScale">
            <summary>
            Gets or sets the texture scale. Scale on texture X length
            </summary>
            <value>
            The texture scale.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineMaterial.SamplerDescription">
            <summary>
            Gets or sets the sampler.
            </summary>
            <value>
            The sampler.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.LineMaterial.FixedSize">
            <summary>
            Gets or sets a value indicating whether [fixed size].
            </summary>
            <value>
              <c>true</c> if [fixed size]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Material.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.Material"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.Material.#ctor(HelixToolkit.SharpDX.Model.MaterialCore)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.Material"/> class.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.NormalMaterial">
            <summary>
            Render color by triangle normal
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.NormalMaterial.#ctor(HelixToolkit.SharpDX.Model.NormalMaterialCore)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.NormalMaterial"/> class.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.NormalMaterial.OnCreateCore">
            <summary>
            Called when [create core].
            </summary>
            <returns></returns>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.NormalVectorMaterial">
            <summary>
            Render color by triangle normal
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.NormalVectorMaterial.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.NormalVectorMaterial"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.NormalVectorMaterial.#ctor(HelixToolkit.SharpDX.Model.NormalMaterialCore)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.NormalVectorMaterial"/> class.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.AlbedoColorProperty">
            <summary>
            Identifies the System.Windows.Media.Media3D.DiffuseMaterial.Color�dependency
            property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.EmissiveColorProperty">
            <summary>
            The albedo color property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.MetallicFactorProperty">
            <summary>
                    
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.RoughnessFactorProperty">
            <summary>
                    
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.AmbientOcclusionFactorProperty">
            <summary>
                    
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.ReflectanceFactorProperty">
            <summary>
                    
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.ClearCoatStrengthProperty">
            <summary>
                    
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.ClearCoatRoughnessProperty">
            <summary>
                    
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.AlbedoMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.EmissiveMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.RoughnessMetallicMapProperty">
            <summary>
            glTF2 defines metalness as B channel, roughness as G channel, and occlusion as R channel
            If uses RMA map, set both <see cref="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.RoughnessMetallicMap"/> and <see cref="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.AmbientOcculsionMap"/> to the same texture.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.AmbientOcculsionMapProperty">
            <summary>
            glTF2 defines metalness as B channel, roughness as G channel, and occlusion as R channel.
            If uses RMA map, set both <see cref="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.RoughnessMetallicMap"/> and <see cref="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.AmbientOcculsionMap"/> to the same texture.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.NormalMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.DisplacementMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.IrradianceMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.DisplacementMapScaleMaskProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.SurfaceMapSamplerProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.IBLSamplerProperty">
             <summary>
            
             </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.DisplacementMapSamplerProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderAlbedoMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderEmissiveMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderRoughnessMetallicMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderAmbientOcclusionMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderIrradianceMapProperty">
            <summary>
            
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderNormalMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderDisplacementMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderEnvironmentMapProperty">
            <summary>
            The render environment map property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderShadowMapProperty">
            <summary>
            The render shadow map property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.EnableAutoTangentProperty">
            <summary>
            The enable automatic tangent
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.EnableTessellationProperty">
            <summary>
            The enable tessellation property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.MaxDistanceTessellationFactorProperty">
            <summary>
            The tessellation factor at <see cref="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.MaxTessellationDistance"/> property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.MinDistanceTessellationFactorProperty">
            <summary>
            The tessellation factor at <see cref="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.MinTessellationDistance"/> property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.MaxTessellationDistanceProperty">
            <summary>
            The maximum tessellation distance property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.MinTessellationDistanceProperty">
            <summary>
            The minimum tessellation distance property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.UVTransformProperty">
            <summary>
            The uv transform property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PBRMaterial.EnableFlatShadingProperty">
            <summary>
            The enable flat shading property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.AlbedoColor">
            <summary>
            Gets or sets the diffuse color for the material.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb147175(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.MetallicFactor">
            <summary>
            Gets or sets the metallic factor. If RMA map is used, for each pixel, metallic factor = <see cref="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.MetallicFactor"/> * RMA map B Channel
            </summary>
            <value>
            The metallic factor.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.RoughnessFactor">
            <summary>
            Gets or sets the roughness factor. If RMA map is used, for each pixel, roughness factor = <see cref="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.RoughnessFactor"/> * RMA map G Channel
            </summary>
            <value>
            The roughness factor.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.AmbientOcclusionFactor">
            <summary>
            Gets or sets the ambient occlusion factor. If RMA map is used, for each pixel, ambient occlusion factor = <see cref="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.AmbientOcclusionFactor"/> * RMA map R Channel
            </summary>
            <value>
            The ambient occlusion factor.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.RoughnessMetallicMap">
            <summary>
            Gets or sets the Roughness, Metallic, Ambient Occlusion map. 
            glTF2 defines occlusion as R channel, roughness as G channel, metalness as B channel
            </summary>
            <value>
            The rma map.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.AmbientOcculsionMap">
            <summary>
            Gets or sets the ambient occlusion map. 
            glTF2 defines occlusion as R channel, roughness as G channel, metalness as B channel.
            If uses RMA map, set both <see cref="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.RoughnessMetallicMap"/> and <see cref="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.AmbientOcculsionMap"/> to the same texture
            </summary>
            <value>
            The ao map.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.NormalMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.DisplacementMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.SurfaceMapSampler">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.IBLSampler">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.DisplacementMapSampler">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderAlbedoMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderNormalMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderEmissiveMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderRoughnessMetallicMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderAmbientOcclusionMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderIrradianceMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderDisplacementMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderEnvironmentMap">
            <summary>
            Gets or sets a value indicating whether [render environment map]. Default is false
            </summary>
            <value>
              <c>true</c> if [render environment map]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.RenderShadowMap">
            <summary>
            Gets or sets a value indicating whether [render shadow map]. Default is false
            </summary>
            <value>
              <c>true</c> if [render shadow map]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.EnableAutoTangent">
            <summary>
            Gets or sets a value indicating whether [enable automatic tangent].
            </summary>
            <value>
              <c>true</c> if [enable automatic tangent]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.EnableTessellation">
            <summary>
            Gets or sets a value indicating whether [enable tessellation].
            </summary>
            <value>
              <c>true</c> if [enable tessellation]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.MaxDistanceTessellationFactor">
            <summary>
            Gets or sets the tessellation factor at <see cref="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.MaxTessellationDistance"/>.
            </summary>
            <value>
            The maximum tessellation factor.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.MinDistanceTessellationFactor">
            <summary>
            Gets or sets the tessellation factor at <see cref="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.MinTessellationDistance"/>
            </summary>
            <value>
            The minimum tessellation factor.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.MaxTessellationDistance">
            <summary>
            Gets or sets the maximum tessellation distance.
            </summary>
            <value>
            The maximum tessellation distance.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.MinTessellationDistance">
            <summary>
            Gets or sets the minimum tessellation distance.
            </summary>
            <value>
            The minimum tessellation distance.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.UVTransform">
            <summary>
            Gets or sets the texture uv transform.
            </summary>
            <value>
            The uv transform.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.EnableFlatShading">
            <summary>
            Gets or sets a value indicating whether [enable flat shading].
            </summary>
            <value>
              <c>true</c> if [enable flat shading]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PBRMaterial.VertexColorBlendingFactor">
            <summary>
            Gets or sets the vertex color blending factor.
            Final Diffuse Color = (1 - VertexColorBlendingFactor) * Diffuse + VertexColorBlendingFactor * Vertex Color
            </summary>
            <value>
            The vertex color blending factor.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PBRMaterial.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.PBRMaterial"/> class.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PBRMaterial.#ctor(HelixToolkit.SharpDX.Model.PBRMaterialCore)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.PBRMaterial"/> class.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.PBRSampleColors">
            <summary>
            https://google.github.io/filament/images/material_chart.jpg
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.PhongMaterial">
            <summary>
            Implements a phong-material with its all properties
            Includes Diffuse, Normal, Displacement, Specular, etc. maps
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.AmbientColorProperty">
            <summary>
            Identifies the System.Windows.Media.Media3D.DiffuseMaterial.AmbientColor�dependency
            property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.DiffuseColorProperty">
            <summary>
            Identifies the System.Windows.Media.Media3D.DiffuseMaterial.Color�dependency
            property.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.EmissiveColorProperty">
            <summary>
                    
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.SpecularColorProperty">
            <summary>
                    
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.SpecularShininessProperty">
            <summary>
                    
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.ReflectiveColorProperty">
            <summary>
                    
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.DiffuseMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.DiffuseAlphaMapProperty">
            <summary>
            Supports alpha channel image, such as PNG.
            Usage: Load the image file(BMP, PNG, etc) as a TextureModel.
            It can be used to replace DiffuseMap, or used as a mask and apply onto diffuse map. 
            The color will be cDiffuse*cAlpha.
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.NormalMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.SpecularColorMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.DisplacementMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.EmissiveMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.DisplacementMapScaleMaskProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.DiffuseMapSamplerProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.DisplacementMapSamplerProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderDiffuseMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderDiffuseAlphaMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderNormalMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderSpecularColorMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderDisplacementMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderEnvironmentMapProperty">
            <summary>
            The render environment map property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderShadowMapProperty">
            <summary>
            The render shadow map property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderEmissiveMapProperty">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.EnableAutoTangentProperty">
            <summary>
            The enable automatic tangent
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.EnableTessellationProperty">
            <summary>
            The enable tessellation property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.MaxDistanceTessellationFactorProperty">
            <summary>
            The tessellation factor at <see cref="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.MaxTessellationDistance"/> property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.MinDistanceTessellationFactorProperty">
            <summary>
            The tessellation factor at <see cref="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.MinTessellationDistance"/> property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.MaxTessellationDistanceProperty">
            <summary>
            The maximum tessellation distance property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.MinTessellationDistanceProperty">
            <summary>
            The minimum tessellation distance property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.PhongMaterial.UVTransformProperty">
            <summary>
            The uv transform property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.EnableFlatShading">
            <summary>
            Gets or sets a value indicating whether [enable flat shading].
            </summary>
            <value>
              <c>true</c> if [enable flat shading]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.AmbientColor">
            <summary>
            Gets or sets a color that represents how the material reflects System.Windows.Media.Media3D.AmbientLight.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb147175(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.DiffuseColor">
            <summary>
            Gets or sets the diffuse color for the material.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb147175(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.EmissiveColor">
            <summary>
            Gets or sets the emissive color for the material.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb147175(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.ReflectiveColor">
            <summary>
            A fake parameter for reflectivity of the environment map
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.SpecularColor">
            <summary>
            Gets or sets the specular color for the material.
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb147175(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.SpecularShininess">
            <summary>
            The power of specular reflections. 
            For details see: http://msdn.microsoft.com/en-us/library/windows/desktop/bb147175(v=vs.85).aspx
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.DiffuseMap">
            <summary>
            System.Windows.Media.Brush to be applied as a System.Windows.Media.Media3D.Material
            to a 3-D model.
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.NormalMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.SpecularColorMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.DisplacementMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.DiffuseMapSampler">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.DisplacementMapSampler">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderDiffuseMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderNormalMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderSpecularColorMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderDiffuseAlphaMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderDisplacementMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderEnvironmentMap">
            <summary>
            Gets or sets a value indicating whether [render environment map]. Default is false
            </summary>
            <value>
              <c>true</c> if [render environment map]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderShadowMap">
            <summary>
            Gets or sets a value indicating whether [render shadow map]. Default is false
            </summary>
            <value>
              <c>true</c> if [render shadow map]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.RenderEmissiveMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.EnableAutoTangent">
            <summary>
            Gets or sets a value indicating whether [enable automatic tangent].
            </summary>
            <value>
              <c>true</c> if [enable automatic tangent]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.EnableTessellation">
            <summary>
            Gets or sets a value indicating whether [enable tessellation].
            </summary>
            <value>
              <c>true</c> if [enable tessellation]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.MaxDistanceTessellationFactor">
            <summary>
            Gets or sets the tessellation factor at <see cref="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.MaxTessellationDistance"/>.
            </summary>
            <value>
            The maximum tessellation factor.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.MinDistanceTessellationFactor">
            <summary>
            Gets or sets the tessellation factor at <see cref="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.MinTessellationDistance"/>
            </summary>
            <value>
            The minimum tessellation factor.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.MaxTessellationDistance">
            <summary>
            Gets or sets the maximum tessellation distance.
            </summary>
            <value>
            The maximum tessellation distance.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.MinTessellationDistance">
            <summary>
            Gets or sets the minimum tessellation distance.
            </summary>
            <value>
            The minimum tessellation distance.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.UVTransform">
            <summary>
            Gets or sets the texture uv transform.
            </summary>
            <value>
            The uv transform.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PhongMaterial.VertexColorBlendingFactor">
            <summary>
            Gets or sets the vertex color blending factor.
            Final Diffuse Color = (1 - VertexColorBlendingFactor) * Diffuse + VertexColorBlendingFactor * Vertex Color
            </summary>
            <value>
            The vertex color blending factor.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PhongMaterial.#ctor">
            <summary>
            Constructs a Shading Material which correspnds with 
            the Phong and BlinnPhong lighting models.
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PhongMaterial.#ctor(HelixToolkit.SharpDX.Model.PhongMaterialCore)">
            <summary>
            Initializes a new instance of the <see cref="T:HelixToolkit.Wpf.SharpDX.PhongMaterial"/> class.
            </summary>
            <param name="core">The core.</param>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.PhongMaterials">
            <summary>
            
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PhongMaterials.FromScRgb(System.Single,System.Single,System.Single,System.Single)">
            <summary>
             FromScRgb
            </summary>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.PhongMaterials.ScRgbTosRgb(System.Single)">
            <summary>
             private helper function to set context values from a color value with a set context and ScRgb values
            </summary>
            
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointMaterial.Color">
            <summary>
            Gets or sets the point color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointMaterial.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>
            The size.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointMaterial.Figure">
            <summary>
            Gets or sets the figure.
            </summary>
            <value>
            The figure.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointMaterial.FigureRatio">
            <summary>
            Gets or sets the figure ratio.
            </summary>
            <value>
            The figure ratio.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointMaterial.EnableDistanceFading">
            <summary>
            Gets or sets a value indicating whether [enable distance fading].
            </summary>
            <value>
              <c>true</c> if [enable distance fading]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointMaterial.FadingNearDistance">
            <summary>
            Gets or sets the fading near distance.
            </summary>
            <value>
            The fading near distance.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointMaterial.FadingFarDistance">
            <summary>
            Gets or sets the fading far distance.
            </summary>
            <value>
            The fading far distance.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointMaterial.EnableColorBlending">
            <summary>
            Gets or sets a value indicating whether [enable color blending].
            <para>Once enabled, final color 
            = <see cref="P:HelixToolkit.Wpf.SharpDX.PointMaterial.BlendingFactor"/> * <see cref="P:HelixToolkit.Wpf.SharpDX.PointMaterial.Color"/> + (1 - <see cref="P:HelixToolkit.Wpf.SharpDX.PointMaterial.BlendingFactor"/>) * Vertex Color.</para>
            </summary>
            <value>
              <c>true</c> if [enable color blending]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.PointMaterial.BlendingFactor">
            <summary>
            Gets or sets the blending factor.
            <para>Used when <see cref="P:HelixToolkit.Wpf.SharpDX.PointMaterial.EnableColorBlending"/> = true.</para>
            </summary>
            <value>
            The blending factor.
            </value>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.PositionColorMaterial">
            <summary>
            Render color by mesh vertex position
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.VertColorMaterial">
            <summary>
            Render color by mesh vertex color
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.VolumeTextureDDS3DMaterial">
            <summary>
            Default Volume Texture Material. Supports 3D DDS memory stream as <see cref="P:HelixToolkit.SharpDX.Model.VolumeTextureMaterialCoreBase`1.VolumeTexture"/>
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.VolumeTextureDDS3DMaterial.Texture">
            <summary>
            Gets or sets the texture. Only supports 3D DDS texture stream
            </summary>
            <value>
            The texture.
            </value>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.VolumeTextureDiffuseMaterial">
            <summary>
            Used to use gradient data as Volume 3D texture. 
            User must create their own data reader to read texture files as pixel byte[] and pass the necessary information as <see cref="T:HelixToolkit.SharpDX.Model.VolumeTextureParams"/>
            <para>
            Pixel Byte[] is equal to Width * Height * Depth * BytesPerPixel.
            </para>
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.VolumeTextureDiffuseMaterial.Texture">
            <summary>
            Gets or sets the texture.
            </summary>
            <value>
            The texture.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.VolumeTextureMaterialBase.SampleDistance">
            <summary>
            Gets or sets the sample distance. Default = 1.0
            </summary>
            <value>
            The size of the step.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.VolumeTextureMaterialBase.MaxIterations">
            <summary>
            Gets or sets the max iterations. Usually equal to the Texture Depth. Default = INT.MAX for automatic iteration
            </summary>
            <value>
            The iterations.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.VolumeTextureMaterialBase.IterationOffset">
            <summary>
            Gets or sets the iteration offset. This can be used to achieve cross section
            </summary>
            <value>
            The iteration offset.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.VolumeTextureMaterialBase.IsoValue">
            <summary>
            Gets or sets the iso value. Only data with isovalue > sepecified iso value will be displayed
            Value must be normalized to 0~1. Default = 1, show all data.
            </summary>
            <value>
            The iso value.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.VolumeTextureMaterialBase.Color">
            <summary>
            Gets or sets the color. It can also used to adjust opacity
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.VolumeTextureMaterialBase.TransferMap">
            <summary>
            Gets or sets the Color Transfer Map.
            </summary>
            <value>
            The gradient map.
            </value>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.VolumeTextureRawDataMaterial">
            <summary>
            Used to use raw data as Volume 3D texture. 
            User must create their own data reader to read texture files as pixel byte[] and pass the necessary information as <see cref="T:HelixToolkit.SharpDX.Model.VolumeTextureParams"/>
            <para>
            Pixel Byte[] is equal to Width * Height * Depth * BytesPerPixel.
            </para>
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.VolumeTextureRawDataMaterial.Texture">
            <summary>
            Gets or sets the texture.
            </summary>
            <value>
            The texture.
            </value>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.GeometryModel3DOctreeManager">
            <summary>
            Use to create geometryModel3D octree for groups. Each ItemsModel3D must has its own manager, do not share between two ItemsModel3D
            </summary>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.IOctreeManagerWrapper">
            <summary>
            
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.IOctreeManagerWrapper.Octree">
            <summary>
            Gets the octree.
            </summary>
            <value>
            The octree.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.IOctreeManagerWrapper.Manager">
            <summary>
            Gets the manager.
            </summary>
            <value>
            The manager.
            </value>
        </member>
        <member name="T:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper">
            <summary>
            
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.OctreeProperty">
            <summary>
            The octree property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.EnableOctreeOutputProperty">
            <summary>
            The enable octree output property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.MinSizeProperty">
            <summary>
            The minimum size property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.AutoDeleteIfEmptyProperty">
            <summary>
            The automatic delete if empty property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.CubifyPropertyProperty">
            <summary>
            The cubify property property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.RecordHitPathBoundingBoxesProperty">
            <summary>
            The record hit path bounding boxes property
            </summary>
        </member>
        <member name="F:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.MinObjectSizeToSplitProperty">
            <summary>
            The minimum object size to split property
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.Octree">
            <summary>
            Gets or sets the octree.
            </summary>
            <value>
            The octree.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.EnableOctreeOutput">
            <summary>
            Gets or sets a value indicating whether [enable octree output].
            </summary>
            <value>
              <c>true</c> if [enable octree output]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.MinSize">
            <summary>
            Minimum octant size
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.AutoDeleteIfEmpty">
            <summary>
            Delete octant node if its empty
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.Cubify">
            <summary>
            Create cube octree
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.RecordHitPathBoundingBoxes">
            <summary>
            Record the hit path bounding box for debugging
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.MinObjectSizeToSplit">
            <summary>
            Minimum object in each octant to start splitting into smaller octant during build
            </summary>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.Manager">
            <summary>
            Gets the manager.
            </summary>
            <value>
            The manager.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper"/> is enabled.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.Parameter">
            <summary>
            Gets or sets the parameter.
            </summary>
            <value>
            The parameter.
            </value>
        </member>
        <member name="M:HelixToolkit.Wpf.SharpDX.OctreeManagerBaseWrapper.OnCreateManager">
            <summary>
            Called when [create manager].
            </summary>
            <returns></returns>
        </member>
        <member name="T:Wpf3DTools.Trackball">
            <summary>
                Trackball is a utility class which observes the mouse events
                on a specified FrameworkElement and produces a Transform3D
                with the resultant rotation and scale.
            
                Example Usage:
            
                    Trackball trackball = new Trackball();
                    trackball.EventSource = myElement;
                    myViewport3D.Camera.Transform = trackball.Transform;
            
                Because Viewport3Ds only raise events when the mouse is over the
                rendered 3D geometry (as opposed to not when the mouse is within
                the layout bounds) you usually want to use another element as 
                your EventSource.  For example, a transparent border placed on
                top of your Viewport3D works well:
                
                    <Grid>
                      <ColumnDefinition />
                      <RowDefinition />
                      <Viewport3D Name="myViewport" ClipToBounds="True" Grid.Row="0" Grid.Column="0" />
                      <Border Name="myElement" Background="Transparent" Grid.Row="0" Grid.Column="0" />
                    </Grid>
                
                NOTE: The Transform property may be shared by multiple Cameras
                      if you want to have auxiliary views following the trackball.
            
                      It can also be useful to share the Transform property with
                      models in the scene that you want to move with the camera.
                      (For example, the Trackport3D's headlight is implemented
                      this way.)
            
                      You may also use a Transform3DGroup to combine the
                      Transform property with additional Transforms.
            </summary>
        </member>
        <member name="P:Wpf3DTools.Trackball.Transform">
            <summary>
                A transform to move the camera or scene to the trackball's
                current orientation and scale.
            </summary>
        </member>
        <member name="P:Wpf3DTools.Trackball.RotateTransform">
            <summary>
            Rotation component of the transform
            </summary>
        </member>
        <member name="P:Wpf3DTools.Trackball.EventSource">
            <summary>
                The FrameworkElement we listen to for mouse events.
            </summary>
        </member>
        <member name="M:Wpf3DTools.Trackball.OnMouseDown(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Wpf3DTools.Trackball.OnMouseUp(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Wpf3DTools.Trackball.OnMouseMove(System.Object,System.Windows.Input.MouseEventArgs)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Wpf3DTools.Trackball.Look(System.Windows.Point)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Wpf3DTools.Trackball.Pan(System.Windows.Point)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Wpf3DTools.Trackball.ProjectToTrackball(System.Double,System.Double,System.Windows.Point)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Wpf3DTools.Trackball.Zoom(System.Windows.Point)">
            <summary>
            
            </summary>
        </member>
        <member name="T:DependencyPropertyGenerator.AddOwnerAttribute">
            <summary>
            https://docs.microsoft.com/en-us/dotnet/desktop/wpf/advanced/how-to-add-an-owner-type-for-a-dependency-property?view=netframeworkdesktop-4.8
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.Name">
            <summary>
            Name of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.Type">
            <summary>
            Type of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.DefaultValue">
            <summary>
            Default value of this dependency property. <br/>
            If you need to pass a new() expression, use <see cref="P:DependencyPropertyGenerator.AddOwnerAttribute.DefaultValueExpression"/>. <br/>
            Default - <see langword="default(type)"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.DefaultValueExpression">
            <summary>
            Default value expression of this dependency property. <br/>
            Used to pass a new() expression to an initializer. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.IsReadOnly">
            <summary>
            The property will create through RegisterAttachedReadOnly (if the platform supports it) and 
            the property setter will contain the protected modifier. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.IsDirect">
            <summary>
            Avalonia: Direct properties are a lightweight version of styled properties. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.Description">
            <summary>
            Description of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.DescriptionAttribute"/> with this value. <br/>
            This will also be used in the xml documentation if not explicitly specified. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.Category">
            <summary>
            Category of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.CategoryAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.TypeConverter">
            <summary>
            Type converter of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.TypeConverterAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.Bindable">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.BindableAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.Browsable">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.BrowsableAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.DesignerSerializationVisibility">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.ClsCompliant">
            <summary>
            The property will contain a <see cref="T:System.CLSCompliantAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.Localizability">
            <summary>
            The property will contain a System.Windows.LocalizabilityAttribute with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.FromType">
            <summary>
            The type that owns the original Dependency Property. <br/>
            Required.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.XmlDocumentation">
            <summary>
            The dependency property xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.GetterXmlDocumentation">
            <summary>
            The property getter xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.SetterXmlDocumentation">
            <summary>
            The property setter xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.BindEvent">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - string.Empty.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.BindEvents">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.OnChanged">
            <summary>
            Allows to set a custom name for the OnChanged method call, allowing this method to be non-partial.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.AffectsMeasure">
            <summary>
            WPF: The measure pass of layout compositions is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.AffectsArrange">
            <summary>
            WPF: The arrange pass of layout composition is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.AffectsParentMeasure">
            <summary>
            WPF: The measure pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.AffectsParentArrange">
            <summary>
            WPF: The arrange pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.AffectsRender">
            <summary>
            WPF: Some aspect of rendering or layout composition (other than measure or arrange) is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.Inherits">
            <summary>
            WPF: The values of this dependency property are inherited by child elements.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.OverridesInheritanceBehavior">
            <summary>
            WPF: The values of this dependency property span separated trees for purposes of property value inheritance.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.NotDataBindable">
            <summary>
            WPF: Data binding to this dependency property is not allowed.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.Journal">
            <summary>
            WPF: The values of this dependency property should be saved or restored by journaling processes, or when navigating by Uniform resource identifiers (URIs).
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.SubPropertiesDoNotAffectRender">
            <summary>
            WPF: The sub properties on the value of this dependency property do not affect any aspect of rendering.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.IsAnimationProhibited">
            <summary>
            WPF: true to prevent the property system from animating the property that this metadata
            is applied to. Such properties will raise a run-time exception originating from
            the property system if animations of them are attempted. The default is false.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.DefaultUpdateSourceTrigger">
            <summary>
            WPF: The System.Windows.Data.UpdateSourceTrigger to use when bindings for this property
            are applied that have their System.Windows.Data.UpdateSourceTrigger set to 
            System.Windows.Data.UpdateSourceTrigger.Default.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.DefaultBindingMode">
            <summary>
            Avalonia/MAUI: Default BindingMode. <br/>
            WPF: Only Default/TwoWay is supported. <br/>
            Default - <see cref="F:DependencyPropertyGenerator.DefaultBindingMode.Default"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.Coerce">
            <summary>
            WPF: partial method for coerceValueCallback will be created.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.Validate">
            <summary>
            WPF: partial method for validateValueCallback will be created.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute.CreateDefaultValueCallback">
            <summary>
            UWP/WinUI/Uno/MAUI: partial method for createDefaultValueCallback will be created.
            </summary>
        </member>
        <member name="M:DependencyPropertyGenerator.AddOwnerAttribute.#ctor(System.String,System.Type,System.Type)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <param name="fromType"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:DependencyPropertyGenerator.AddOwnerAttribute`2">
            <summary>
            https://docs.microsoft.com/en-us/dotnet/desktop/wpf/advanced/how-to-add-an-owner-type-for-a-dependency-property?view=netframeworkdesktop-4.8
            </summary>
            <typeparam name="T">Type of this dependency property.</typeparam>
            <typeparam name="TFromType">The type for which the extension is intended.</typeparam>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.Name">
            <summary>
            Name of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.Type">
            <summary>
            Type of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.DefaultValue">
            <summary>
            Default value of this dependency property. <br/>
            If you need to pass a new() expression, use <see cref="P:DependencyPropertyGenerator.AddOwnerAttribute`2.DefaultValueExpression"/>. <br/>
            Default - <see langword="default(type)"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.DefaultValueExpression">
            <summary>
            Default value expression of this dependency property. <br/>
            Used to pass a new() expression to an initializer. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.IsReadOnly">
            <summary>
            The property will create through RegisterAttachedReadOnly (if the platform supports it) and 
            the property setter will contain the protected modifier. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.IsDirect">
            <summary>
            Avalonia: Direct properties are a lightweight version of styled properties. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.Description">
            <summary>
            Description of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.DescriptionAttribute"/> with this value. <br/>
            This will also be used in the xml documentation if not explicitly specified. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.Category">
            <summary>
            Category of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.CategoryAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.TypeConverter">
            <summary>
            Type converter of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.TypeConverterAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.Bindable">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.BindableAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.Browsable">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.BrowsableAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.DesignerSerializationVisibility">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.ClsCompliant">
            <summary>
            The property will contain a <see cref="T:System.CLSCompliantAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.Localizability">
            <summary>
            The property will contain a System.Windows.LocalizabilityAttribute with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.FromType">
            <summary>
            The type that owns the original Dependency Property. <br/>
            Required.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.XmlDocumentation">
            <summary>
            The dependency property xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.GetterXmlDocumentation">
            <summary>
            The property getter xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.SetterXmlDocumentation">
            <summary>
            The property setter xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.BindEvent">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - string.Empty.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.BindEvents">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.OnChanged">
            <summary>
            Allows to set a custom name for the OnChanged method call, allowing this method to be non-partial.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.AffectsMeasure">
            <summary>
            WPF: The measure pass of layout compositions is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.AffectsArrange">
            <summary>
            WPF: The arrange pass of layout composition is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.AffectsParentMeasure">
            <summary>
            WPF: The measure pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.AffectsParentArrange">
            <summary>
            WPF: The arrange pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.AffectsRender">
            <summary>
            WPF: Some aspect of rendering or layout composition (other than measure or arrange) is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.Inherits">
            <summary>
            WPF: The values of this dependency property are inherited by child elements.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.OverridesInheritanceBehavior">
            <summary>
            WPF: The values of this dependency property span separated trees for purposes of property value inheritance.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.NotDataBindable">
            <summary>
            WPF: Data binding to this dependency property is not allowed.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.Journal">
            <summary>
            WPF: The values of this dependency property should be saved or restored by journaling processes, or when navigating by Uniform resource identifiers (URIs).
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.SubPropertiesDoNotAffectRender">
            <summary>
            WPF: The sub properties on the value of this dependency property do not affect any aspect of rendering.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.IsAnimationProhibited">
            <summary>
            WPF: true to prevent the property system from animating the property that this metadata
            is applied to. Such properties will raise a run-time exception originating from
            the property system if animations of them are attempted. The default is false.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.DefaultUpdateSourceTrigger">
            <summary>
            WPF: The System.Windows.Data.UpdateSourceTrigger to use when bindings for this property
            are applied that have their System.Windows.Data.UpdateSourceTrigger set to 
            System.Windows.Data.UpdateSourceTrigger.Default.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.DefaultBindingMode">
            <summary>
            Avalonia/MAUI: Default BindingMode. <br/>
            WPF: Only Default/TwoWay is supported. <br/>
            Default - <see cref="F:DependencyPropertyGenerator.DefaultBindingMode.Default"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.Coerce">
            <summary>
            WPF: partial method for coerceValueCallback will be created.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.Validate">
            <summary>
            WPF: partial method for validateValueCallback will be created.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AddOwnerAttribute`2.CreateDefaultValueCallback">
            <summary>
            UWP/WinUI/Uno/MAUI: partial method for createDefaultValueCallback will be created.
            </summary>
        </member>
        <member name="M:DependencyPropertyGenerator.AddOwnerAttribute`2.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute">
            <summary>
            Generates attached dependency property using DependencyProperty.RegisterAttached.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.Name">
            <summary>
            Name of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.Type">
            <summary>
            Type of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.DefaultValue">
            <summary>
            Default value of this dependency property. <br/>
            If you need to pass a new() expression, use <see cref="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.DefaultValueExpression"/>. <br/>
            Default - <see langword="default(type)"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.DefaultValueExpression">
            <summary>
            Default value expression of this dependency property. <br/>
            Used to pass a new() expression to an initializer. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.IsReadOnly">
            <summary>
            The property will create through RegisterAttachedReadOnly (if the platform supports it) and 
            the property setter will contain the protected modifier. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.Description">
            <summary>
            Description of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.DescriptionAttribute"/> with this value. <br/>
            This will also be used in the xml documentation if not explicitly specified. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.Category">
            <summary>
            Category of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.CategoryAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.TypeConverter">
            <summary>
            Type converter of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.TypeConverterAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.Bindable">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.BindableAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.Browsable">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.BrowsableAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.DesignerSerializationVisibility">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.ClsCompliant">
            <summary>
            The property will contain a <see cref="T:System.CLSCompliantAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.Localizability">
            <summary>
            The property will contain a System.Windows.LocalizabilityAttribute with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.BrowsableForType">
            <summary>
            The type for which the extension is intended. <br/>
            Default - DependencyObject.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.XmlDocumentation">
            <summary>
            The dependency property xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.GetterXmlDocumentation">
            <summary>
            The property getter xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.SetterXmlDocumentation">
            <summary>
            The property setter xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.BindEvent">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - string.Empty.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.BindEvents">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.OnChanged">
            <summary>
            Allows to set a custom name for the OnChanged method call, allowing this method to be non-partial.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.AffectsMeasure">
            <summary>
            WPF: The measure pass of layout compositions is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.AffectsArrange">
            <summary>
            WPF: The arrange pass of layout composition is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.AffectsParentMeasure">
            <summary>
            WPF: The measure pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.AffectsParentArrange">
            <summary>
            WPF: The arrange pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.AffectsRender">
            <summary>
            WPF: Some aspect of rendering or layout composition (other than measure or arrange) is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.Inherits">
            <summary>
            WPF: The values of this dependency property are inherited by child elements.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.OverridesInheritanceBehavior">
            <summary>
            WPF: The values of this dependency property span separated trees for purposes of property value inheritance.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.NotDataBindable">
            <summary>
            WPF: Data binding to this dependency property is not allowed.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.Journal">
            <summary>
            WPF: The values of this dependency property should be saved or restored by journaling processes, or when navigating by Uniform resource identifiers (URIs).
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.SubPropertiesDoNotAffectRender">
            <summary>
            WPF: The sub properties on the value of this dependency property do not affect any aspect of rendering.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.IsAnimationProhibited">
            <summary>
            WPF: true to prevent the property system from animating the property that this metadata
            is applied to. Such properties will raise a run-time exception originating from
            the property system if animations of them are attempted. The default is false.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.DefaultUpdateSourceTrigger">
            <summary>
            WPF: The System.Windows.Data.UpdateSourceTrigger to use when bindings for this property
            are applied that have their System.Windows.Data.UpdateSourceTrigger set to 
            System.Windows.Data.UpdateSourceTrigger.Default.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.DefaultBindingMode">
            <summary>
            Avalonia/MAUI: Default BindingMode. <br/>
            WPF: Only Default/TwoWay is supported. <br/>
            Default - <see cref="F:DependencyPropertyGenerator.DefaultBindingMode.Default"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.Coerce">
            <summary>
            WPF: partial method for coerceValueCallback will be created.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.Validate">
            <summary>
            WPF: partial method for validateValueCallback will be created.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.CreateDefaultValueCallback">
            <summary>
            UWP/WinUI/Uno/MAUI: partial method for createDefaultValueCallback will be created.
            </summary>
        </member>
        <member name="M:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute.#ctor(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1">
            <summary>
            Will generates attached dependency property using DependencyProperty.RegisterAttached.
            </summary>
            <typeparam name="T">Type of this dependency property.</typeparam>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.Name">
            <summary>
            Name of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.Type">
            <summary>
            Type of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.DefaultValue">
            <summary>
            Default value of this dependency property. <br/>
            If you need to pass a new() expression, use <see cref="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.DefaultValueExpression"/>. <br/>
            Default - <see langword="default(type)"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.DefaultValueExpression">
            <summary>
            Default value expression of this dependency property. <br/>
            Used to pass a new() expression to an initializer. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.IsReadOnly">
            <summary>
            The property will create through RegisterAttachedReadOnly (if the platform supports it) and 
            the property setter will contain the protected modifier. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.Description">
            <summary>
            Description of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.DescriptionAttribute"/> with this value. <br/>
            This will also be used in the xml documentation if not explicitly specified. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.Category">
            <summary>
            Category of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.CategoryAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.TypeConverter">
            <summary>
            Type converter of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.TypeConverterAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.Bindable">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.BindableAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.Browsable">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.BrowsableAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.DesignerSerializationVisibility">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.ClsCompliant">
            <summary>
            The property will contain a <see cref="T:System.CLSCompliantAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.Localizability">
            <summary>
            The property will contain a System.Windows.LocalizabilityAttribute with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.BrowsableForType">
            <summary>
            The type for which the extension is intended. <br/>
            Default - DependencyObject.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.XmlDocumentation">
            <summary>
            The dependency property xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.GetterXmlDocumentation">
            <summary>
            The property getter xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.SetterXmlDocumentation">
            <summary>
            The property setter xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.BindEvent">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - string.Empty.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.BindEvents">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.OnChanged">
            <summary>
            Allows to set a custom name for the OnChanged method call, allowing this method to be non-partial.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.AffectsMeasure">
            <summary>
            WPF: The measure pass of layout compositions is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.AffectsArrange">
            <summary>
            WPF: The arrange pass of layout composition is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.AffectsParentMeasure">
            <summary>
            WPF: The measure pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.AffectsParentArrange">
            <summary>
            WPF: The arrange pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.AffectsRender">
            <summary>
            WPF: Some aspect of rendering or layout composition (other than measure or arrange) is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.Inherits">
            <summary>
            WPF: The values of this dependency property are inherited by child elements.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.OverridesInheritanceBehavior">
            <summary>
            WPF: The values of this dependency property span separated trees for purposes of property value inheritance.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.NotDataBindable">
            <summary>
            WPF: Data binding to this dependency property is not allowed.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.Journal">
            <summary>
            WPF: The values of this dependency property should be saved or restored by journaling processes, or when navigating by Uniform resource identifiers (URIs).
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.SubPropertiesDoNotAffectRender">
            <summary>
            WPF: The sub properties on the value of this dependency property do not affect any aspect of rendering.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.IsAnimationProhibited">
            <summary>
            WPF: true to prevent the property system from animating the property that this metadata
            is applied to. Such properties will raise a run-time exception originating from
            the property system if animations of them are attempted. The default is false.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.DefaultUpdateSourceTrigger">
            <summary>
            WPF: The System.Windows.Data.UpdateSourceTrigger to use when bindings for this property
            are applied that have their System.Windows.Data.UpdateSourceTrigger set to 
            System.Windows.Data.UpdateSourceTrigger.Default.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.DefaultBindingMode">
            <summary>
            Avalonia/MAUI: Default BindingMode. <br/>
            WPF: Only Default/TwoWay is supported. <br/>
            Default - <see cref="F:DependencyPropertyGenerator.DefaultBindingMode.Default"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.Coerce">
            <summary>
            WPF: partial method for coerceValueCallback will be created.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.Validate">
            <summary>
            WPF: partial method for validateValueCallback will be created.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.CreateDefaultValueCallback">
            <summary>
            UWP/WinUI/Uno/MAUI: partial method for createDefaultValueCallback will be created.
            </summary>
        </member>
        <member name="M:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`1.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2">
            <summary>
            Will generates attached dependency property using DependencyProperty.RegisterAttached.
            </summary>
            <typeparam name="T">Type of this dependency property.</typeparam>
            <typeparam name="TBrowsableForType">The type for which the extension is intended.</typeparam>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.Name">
            <summary>
            Name of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.Type">
            <summary>
            Type of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.DefaultValue">
            <summary>
            Default value of this dependency property. <br/>
            If you need to pass a new() expression, use <see cref="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.DefaultValueExpression"/>. <br/>
            Default - <see langword="default(type)"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.DefaultValueExpression">
            <summary>
            Default value expression of this dependency property. <br/>
            Used to pass a new() expression to an initializer. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.IsReadOnly">
            <summary>
            The property will create through RegisterAttachedReadOnly (if the platform supports it) and 
            the property setter will contain the protected modifier. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.Description">
            <summary>
            Description of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.DescriptionAttribute"/> with this value. <br/>
            This will also be used in the xml documentation if not explicitly specified. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.Category">
            <summary>
            Category of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.CategoryAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.TypeConverter">
            <summary>
            Type converter of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.TypeConverterAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.Bindable">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.BindableAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.Browsable">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.BrowsableAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.DesignerSerializationVisibility">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.ClsCompliant">
            <summary>
            The property will contain a <see cref="T:System.CLSCompliantAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.Localizability">
            <summary>
            The property will contain a System.Windows.LocalizabilityAttribute with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.BrowsableForType">
            <summary>
            The type for which the extension is intended. <br/>
            Default - DependencyObject.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.XmlDocumentation">
            <summary>
            The dependency property xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.GetterXmlDocumentation">
            <summary>
            The property getter xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.SetterXmlDocumentation">
            <summary>
            The property setter xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.BindEvent">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - string.Empty.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.BindEvents">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.OnChanged">
            <summary>
            Allows to set a custom name for the OnChanged method call, allowing this method to be non-partial.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.AffectsMeasure">
            <summary>
            WPF: The measure pass of layout compositions is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.AffectsArrange">
            <summary>
            WPF: The arrange pass of layout composition is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.AffectsParentMeasure">
            <summary>
            WPF: The measure pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.AffectsParentArrange">
            <summary>
            WPF: The arrange pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.AffectsRender">
            <summary>
            WPF: Some aspect of rendering or layout composition (other than measure or arrange) is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.Inherits">
            <summary>
            WPF: The values of this dependency property are inherited by child elements.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.OverridesInheritanceBehavior">
            <summary>
            WPF: The values of this dependency property span separated trees for purposes of property value inheritance.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.NotDataBindable">
            <summary>
            WPF: Data binding to this dependency property is not allowed.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.Journal">
            <summary>
            WPF: The values of this dependency property should be saved or restored by journaling processes, or when navigating by Uniform resource identifiers (URIs).
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.SubPropertiesDoNotAffectRender">
            <summary>
            WPF: The sub properties on the value of this dependency property do not affect any aspect of rendering.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.IsAnimationProhibited">
            <summary>
            WPF: true to prevent the property system from animating the property that this metadata
            is applied to. Such properties will raise a run-time exception originating from
            the property system if animations of them are attempted. The default is false.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.DefaultUpdateSourceTrigger">
            <summary>
            WPF: The System.Windows.Data.UpdateSourceTrigger to use when bindings for this property
            are applied that have their System.Windows.Data.UpdateSourceTrigger set to 
            System.Windows.Data.UpdateSourceTrigger.Default.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.DefaultBindingMode">
            <summary>
            Avalonia/MAUI: Default BindingMode. <br/>
            WPF: Only Default/TwoWay is supported. <br/>
            Default - <see cref="F:DependencyPropertyGenerator.DefaultBindingMode.Default"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.Coerce">
            <summary>
            WPF: partial method for coerceValueCallback will be created.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.Validate">
            <summary>
            WPF: partial method for validateValueCallback will be created.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.CreateDefaultValueCallback">
            <summary>
            UWP/WinUI/Uno/MAUI: partial method for createDefaultValueCallback will be created.
            </summary>
        </member>
        <member name="M:DependencyPropertyGenerator.AttachedDependencyPropertyAttribute`2.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:DependencyPropertyGenerator.DependencyPropertyAttribute">
            <summary>
            Generates attached dependency property using DependencyProperty.Register.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.Name">
            <summary>
            Name of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.Type">
            <summary>
            Type of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.DefaultValue">
            <summary>
            Default value of this dependency property. <br/>
            If you need to pass a new() expression, use <see cref="P:DependencyPropertyGenerator.DependencyPropertyAttribute.DefaultValueExpression"/>. <br/>
            Default - <see langword="default(type)"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.DefaultValueExpression">
            <summary>
            Default value expression of this dependency property. <br/>
            Used to pass a new() expression to an initializer. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.IsReadOnly">
            <summary>
            The property will create through RegisterReadOnly (if the platform supports it) and 
            the property setter will contain the protected modifier. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.IsDirect">
            <summary>
            Avalonia: Direct properties are a lightweight version of styled properties. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.Description">
            <summary>
            Description of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.DescriptionAttribute"/> with this value. <br/>
            This will also be used in the xml documentation if not explicitly specified. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.Category">
            <summary>
            Category of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.CategoryAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.TypeConverter">
            <summary>
            Type converter of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.TypeConverterAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.Bindable">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.BindableAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.Browsable">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.BrowsableAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.DesignerSerializationVisibility">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.ClsCompliant">
            <summary>
            The property will contain a <see cref="T:System.CLSCompliantAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.Localizability">
            <summary>
            The property will contain a System.Windows.LocalizabilityAttribute with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.XmlDocumentation">
            <summary>
            The dependency property xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.PropertyXmlDocumentation">
            <summary>
            The property getter/setter xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.BindEvent">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - string.Empty.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.BindEvents">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.OnChanged">
            <summary>
            Allows to set a custom name for the OnChanged method call, allowing this method to be non-partial.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.AffectsMeasure">
            <summary>
            WPF: The measure pass of layout compositions is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.AffectsArrange">
            <summary>
            WPF: The arrange pass of layout composition is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.AffectsParentMeasure">
            <summary>
            WPF: The measure pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.AffectsParentArrange">
            <summary>
            WPF: The arrange pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.AffectsRender">
            <summary>
            WPF: Some aspect of rendering or layout composition (other than measure or arrange) is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.Inherits">
            <summary>
            WPF: The values of this dependency property are inherited by child elements.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.OverridesInheritanceBehavior">
            <summary>
            WPF: The values of this dependency property span separated trees for purposes of property value inheritance.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.NotDataBindable">
            <summary>
            WPF: Data binding to this dependency property is not allowed.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.Journal">
            <summary>
            WPF: The values of this dependency property should be saved or restored by journaling processes, or when navigating by Uniform resource identifiers (URIs).
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.SubPropertiesDoNotAffectRender">
            <summary>
            WPF: The sub properties on the value of this dependency property do not affect any aspect of rendering.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.IsAnimationProhibited">
            <summary>
            WPF: true to prevent the property system from animating the property that this metadata
            is applied to. Such properties will raise a run-time exception originating from
            the property system if animations of them are attempted. The default is false.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.DefaultUpdateSourceTrigger">
            <summary>
            WPF: The System.Windows.Data.UpdateSourceTrigger to use when bindings for this property
            are applied that have their System.Windows.Data.UpdateSourceTrigger set to 
            System.Windows.Data.UpdateSourceTrigger.Default.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.DefaultBindingMode">
            <summary>
            Avalonia/MAUI: Default BindingMode. <br/>
            WPF: Only Default/TwoWay is supported. <br/>
            Default - <see cref="F:DependencyPropertyGenerator.DefaultBindingMode.Default"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.EnableDataValidation">
            <summary>
            Avalonia-DirectProperty: Whether the property is interested in data validation. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.Coerce">
            <summary>
            WPF: partial method for coerceValueCallback will be created.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.Validate">
            <summary>
            WPF: partial method for validateValueCallback will be created. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute.CreateDefaultValueCallback">
            <summary>
            UWP/WinUI/Uno/MAUI: partial method for createDefaultValueCallback will be created.
            </summary>
        </member>
        <member name="M:DependencyPropertyGenerator.DependencyPropertyAttribute.#ctor(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:DependencyPropertyGenerator.DependencyPropertyAttribute`1">
            <summary>
            Generates attached dependency property using DependencyProperty.Register.
            </summary>
            <typeparam name="T">Type of this dependency property.</typeparam>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.Name">
            <summary>
            Name of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.Type">
            <summary>
            Type of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.DefaultValue">
            <summary>
            Default value of this dependency property. <br/>
            If you need to pass a new() expression, use <see cref="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.DefaultValueExpression"/>. <br/>
            Default - <see langword="default(type)"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.DefaultValueExpression">
            <summary>
            Default value expression of this dependency property. <br/>
            Used to pass a new() expression to an initializer. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.IsReadOnly">
            <summary>
            The property will create through RegisterReadOnly (if the platform supports it) and 
            the property setter will contain the protected modifier. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.IsDirect">
            <summary>
            Avalonia: Direct properties are a lightweight version of styled properties. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.Description">
            <summary>
            Description of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.DescriptionAttribute"/> with this value. <br/>
            This will also be used in the xml documentation if not explicitly specified. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.Category">
            <summary>
            Category of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.CategoryAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.TypeConverter">
            <summary>
            Type converter of this dependency property. <br/>
            The property will contain a <see cref="T:System.ComponentModel.TypeConverterAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.Bindable">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.BindableAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.Browsable">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.BrowsableAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.DesignerSerializationVisibility">
            <summary>
            The property will contain a <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.ClsCompliant">
            <summary>
            The property will contain a <see cref="T:System.CLSCompliantAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.Localizability">
            <summary>
            The property will contain a System.Windows.LocalizabilityAttribute with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.XmlDocumentation">
            <summary>
            The dependency property xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.PropertyXmlDocumentation">
            <summary>
            The property getter/setter xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.BindEvent">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - string.Empty.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.BindEvents">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.OnChanged">
            <summary>
            Allows to set a custom name for the OnChanged method call, allowing this method to be non-partial.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.AffectsMeasure">
            <summary>
            WPF: The measure pass of layout compositions is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.AffectsArrange">
            <summary>
            WPF: The arrange pass of layout composition is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.AffectsParentMeasure">
            <summary>
            WPF: The measure pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.AffectsParentArrange">
            <summary>
            WPF: The arrange pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.AffectsRender">
            <summary>
            WPF: Some aspect of rendering or layout composition (other than measure or arrange) is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.Inherits">
            <summary>
            WPF: The values of this dependency property are inherited by child elements.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.OverridesInheritanceBehavior">
            <summary>
            WPF: The values of this dependency property span separated trees for purposes of property value inheritance.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.NotDataBindable">
            <summary>
            WPF: Data binding to this dependency property is not allowed.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.Journal">
            <summary>
            WPF: The values of this dependency property should be saved or restored by journaling processes, or when navigating by Uniform resource identifiers (URIs).
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.SubPropertiesDoNotAffectRender">
            <summary>
            WPF: The sub properties on the value of this dependency property do not affect any aspect of rendering.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.IsAnimationProhibited">
            <summary>
            WPF: true to prevent the property system from animating the property that this metadata
            is applied to. Such properties will raise a run-time exception originating from
            the property system if animations of them are attempted. The default is false.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.DefaultUpdateSourceTrigger">
            <summary>
            WPF: The System.Windows.Data.UpdateSourceTrigger to use when bindings for this property
            are applied that have their System.Windows.Data.UpdateSourceTrigger set to 
            System.Windows.Data.UpdateSourceTrigger.Default.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.DefaultBindingMode">
            <summary>
            Avalonia/MAUI: Default BindingMode. <br/>
            WPF: Only Default/TwoWay is supported. <br/>
            Default - <see cref="F:DependencyPropertyGenerator.DefaultBindingMode.Default"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.EnableDataValidation">
            <summary>
            Avalonia-DirectProperty: Whether the property is interested in data validation. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.Coerce">
            <summary>
            WPF: partial method for coerceValueCallback will be created.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.Validate">
            <summary>
            WPF: partial method for validateValueCallback will be created. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.DependencyPropertyAttribute`1.CreateDefaultValueCallback">
            <summary>
            UWP/WinUI/Uno/MAUI: partial method for createDefaultValueCallback will be created.
            </summary>
        </member>
        <member name="M:DependencyPropertyGenerator.DependencyPropertyAttribute`1.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:DependencyPropertyGenerator.OverrideMetadataAttribute">
            <summary>
            Overrides dependency property metadata using DependencyProperty.OverrideMetadata. <br/>
            Metadata override behavior: <seealso href="https://docs.microsoft.com/en-us/dotnet/desktop/wpf/properties/framework-property-metadata?view=netdesktop-6.0#metadata-override-behavior"/>
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.Name">
            <summary>
            Name of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.Type">
            <summary>
            Type of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.DefaultValue">
            <summary>
            Default value of this dependency property. <br/>
            If you need to pass a new() expression, use <see cref="P:DependencyPropertyGenerator.OverrideMetadataAttribute.DefaultValueExpression"/>. <br/>
            Default - <see langword="default(type)"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.DefaultValueExpression">
            <summary>
            Default value expression of this dependency property. <br/>
            Used to pass a new() expression to an initializer. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.IsReadOnly">
            <summary>
            The property will create through RegisterReadOnly (if the platform supports it) and 
            the property setter will contain the protected modifier. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.BindEvent">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - string.Empty.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.BindEvents">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.OnChanged">
            <summary>
            Allows to set a custom name for the OnChanged method call, allowing this method to be non-partial.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.AffectsMeasure">
            <summary>
            WPF: The measure pass of layout compositions is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.AffectsArrange">
            <summary>
            WPF: The arrange pass of layout composition is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.AffectsParentMeasure">
            <summary>
            WPF: The measure pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.AffectsParentArrange">
            <summary>
            WPF: The arrange pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.AffectsRender">
            <summary>
            WPF: Some aspect of rendering or layout composition (other than measure or arrange) is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.Inherits">
            <summary>
            WPF: The values of this dependency property are inherited by child elements.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.OverridesInheritanceBehavior">
            <summary>
            WPF: The values of this dependency property span separated trees for purposes of property value inheritance.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.NotDataBindable">
            <summary>
            WPF: Data binding to this dependency property is not allowed.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.Journal">
            <summary>
            WPF: The values of this dependency property should be saved or restored by journaling processes, or when navigating by Uniform resource identifiers (URIs).
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.SubPropertiesDoNotAffectRender">
            <summary>
            WPF: The sub properties on the value of this dependency property do not affect any aspect of rendering.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.IsAnimationProhibited">
            <summary>
            WPF: true to prevent the property system from animating the property that this metadata
            is applied to. Such properties will raise a run-time exception originating from
            the property system if animations of them are attempted. The default is false.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.DefaultUpdateSourceTrigger">
            <summary>
            WPF: The System.Windows.Data.UpdateSourceTrigger to use when bindings for this property
            are applied that have their System.Windows.Data.UpdateSourceTrigger set to 
            System.Windows.Data.UpdateSourceTrigger.Default.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.DefaultBindingMode">
            <summary>
            Avalonia/MAUI: Default BindingMode. <br/>
            WPF: Only Default/TwoWay is supported. <br/>
            Default - <see cref="F:DependencyPropertyGenerator.DefaultBindingMode.Default"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.Coerce">
            <summary>
            WPF: partial method for coerceValueCallback will be created.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute.Validate">
            <summary>
            WPF: partial method for validateValueCallback will be created.
            </summary>
        </member>
        <member name="M:DependencyPropertyGenerator.OverrideMetadataAttribute.#ctor(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:DependencyPropertyGenerator.OverrideMetadataAttribute`1">
            <summary>
            Will override dependency property metadata using DependencyProperty.OverrideMetadata. <br/>
            Metadata override behavior: <seealso href="https://docs.microsoft.com/en-us/dotnet/desktop/wpf/properties/framework-property-metadata?view=netdesktop-6.0#metadata-override-behavior"/>
            </summary>
            <typeparam name="T">Type of this dependency property.</typeparam>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.Name">
            <summary>
            Name of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.Type">
            <summary>
            Type of this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.DefaultValue">
            <summary>
            Default value of this dependency property. <br/>
            If you need to pass a new() expression, use <see cref="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.DefaultValueExpression"/>. <br/>
            Default - <see langword="default(type)"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.DefaultValueExpression">
            <summary>
            Default value expression of this dependency property. <br/>
            Used to pass a new() expression to an initializer. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.IsReadOnly">
            <summary>
            The property will create through RegisterReadOnly (if the platform supports it) and 
            the property setter will contain the protected modifier. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.BindEvent">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - string.Empty.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.BindEvents">
            <summary>
            For values other than default(type), will bind/rebind/remove the 
            On{Name}Changed_{EventName}(object sender, Args args) handler for the specified event. <br/>
            It is recommended to specify as nameof(UIElement.Drop). <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.OnChanged">
            <summary>
            Allows to set a custom name for the OnChanged method call, allowing this method to be non-partial.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.AffectsMeasure">
            <summary>
            WPF: The measure pass of layout compositions is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.AffectsArrange">
            <summary>
            WPF: The arrange pass of layout composition is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.AffectsParentMeasure">
            <summary>
            WPF: The measure pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.AffectsParentArrange">
            <summary>
            WPF: The arrange pass on the parent element is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.AffectsRender">
            <summary>
            WPF: Some aspect of rendering or layout composition (other than measure or arrange) is affected by value changes to this dependency property.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.Inherits">
            <summary>
            WPF: The values of this dependency property are inherited by child elements.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.OverridesInheritanceBehavior">
            <summary>
            WPF: The values of this dependency property span separated trees for purposes of property value inheritance.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.NotDataBindable">
            <summary>
            WPF: Data binding to this dependency property is not allowed.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.Journal">
            <summary>
            WPF: The values of this dependency property should be saved or restored by journaling processes, or when navigating by Uniform resource identifiers (URIs).
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.SubPropertiesDoNotAffectRender">
            <summary>
            WPF: The sub properties on the value of this dependency property do not affect any aspect of rendering.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.IsAnimationProhibited">
            <summary>
            WPF: true to prevent the property system from animating the property that this metadata
            is applied to. Such properties will raise a run-time exception originating from
            the property system if animations of them are attempted. The default is false.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.DefaultUpdateSourceTrigger">
            <summary>
            WPF: The System.Windows.Data.UpdateSourceTrigger to use when bindings for this property
            are applied that have their System.Windows.Data.UpdateSourceTrigger set to 
            System.Windows.Data.UpdateSourceTrigger.Default.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.DefaultBindingMode">
            <summary>
            Avalonia/MAUI: Default BindingMode. <br/>
            WPF: Only Default/TwoWay is supported. <br/>
            Default - <see cref="F:DependencyPropertyGenerator.DefaultBindingMode.Default"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.Coerce">
            <summary>
            WPF: partial method for coerceValueCallback will be created.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.OverrideMetadataAttribute`1.Validate">
            <summary>
            WPF: partial method for validateValueCallback will be created.
            </summary>
        </member>
        <member name="M:DependencyPropertyGenerator.OverrideMetadataAttribute`1.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:DependencyPropertyGenerator.RoutedEventAttribute">
            <summary>
            Generates routed event using EventManager.RegisterRoutedEvent.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute.Name">
            <summary>
            Name of this routed event.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute.Strategy">
            <summary>
            Strategy of this routed event.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute.Type">
            <summary>
            Type of this routed event. <br/>
            Default - typeof(RoutedEventHandler).
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute.IsAttached">
            <summary>
            Will generates attached routed event. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute.Description">
            <summary>
            Description of this routed event. <br/>
            The event will contain a <see cref="T:System.ComponentModel.DescriptionAttribute"/> with this value. <br/>
            This will also be used in the xml documentation if not explicitly specified. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute.Category">
            <summary>
            Category of this routed event. <br/>
            The event will contain a <see cref="T:System.ComponentModel.CategoryAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute.XmlDocumentation">
            <summary>
            The routed event xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute.EventXmlDocumentation">
            <summary>
            The event add/remove xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute.WinRtEvents">
            <summary>
            WinRT events are disabled by default due to a series of issues with them in Windows 10:<br/>
            <see href="https://github.com/HavenDV/H.NotifyIcon/issues/36"/> <br/>
            <see href="https://github.com/HavenDV/H.NotifyIcon/issues/31"/> <br/>
            </summary>
        </member>
        <member name="M:DependencyPropertyGenerator.RoutedEventAttribute.#ctor(System.String,DependencyPropertyGenerator.RoutedEventStrategy)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="strategy"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:DependencyPropertyGenerator.RoutedEventAttribute`1">
            <summary>
            Will generates routed event using EventManager.RegisterRoutedEvent.
            </summary>
            <typeparam name="T">Type of this routed event.</typeparam>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute`1.Name">
            <summary>
            Name of this routed event.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute`1.Strategy">
            <summary>
            Strategy of this routed event.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute`1.Type">
            <summary>
            Type of this routed event. <br/>
            Default - typeof(RoutedEventHandler).
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute`1.IsAttached">
            <summary>
            Will generates attached routed event. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute`1.Description">
            <summary>
            Description of this routed event. <br/>
            The event will contain a <see cref="T:System.ComponentModel.DescriptionAttribute"/> with this value. <br/>
            This will also be used in the xml documentation if not explicitly specified. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute`1.Category">
            <summary>
            Category of this routed event. <br/>
            The event will contain a <see cref="T:System.ComponentModel.CategoryAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute`1.XmlDocumentation">
            <summary>
            The routed event xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute`1.EventXmlDocumentation">
            <summary>
            The event add/remove xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.RoutedEventAttribute`1.WinRtEvents">
            <summary>
            WinRT events are disabled by default due to a series of issues with them in Windows 10:<br/>
            <see href="https://github.com/HavenDV/H.NotifyIcon/issues/36"/> <br/>
            <see href="https://github.com/HavenDV/H.NotifyIcon/issues/31"/> <br/>
            </summary>
        </member>
        <member name="M:DependencyPropertyGenerator.RoutedEventAttribute`1.#ctor(System.String,DependencyPropertyGenerator.RoutedEventStrategy)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="strategy"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:DependencyPropertyGenerator.RoutedEventStrategy">
            <summary>
            Indicates the routing strategy of a routed event.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.RoutedEventStrategy.Tunnel">
            <summary>
            The routed event uses a tunneling strategy, where the event instance routes 
            downwards through the tree, from root to source element.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.RoutedEventStrategy.Bubble">
            <summary>
            The routed event uses a bubbling strategy, where the event instance routes upwards 
            through the tree, from event source to root.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.RoutedEventStrategy.Direct">
            <summary>
            The routed event does not route through an element tree, but does support other 
            routed event capabilities such as class handling, System.Windows.EventTrigger 
            or System.Windows.EventSetter.
            </summary>
        </member>
        <member name="T:DependencyPropertyGenerator.Localizability">
            <summary>
            Specifies the category value of a System.Windows.LocalizabilityAttribute 
            for a binary XAML (BAML) class or class member.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.None">
            <summary>
            Resource does not belong to a standard category.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.Text">
            <summary>
            For a lengthy piece of text.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.Title">
            <summary>
            For a single line of text, such as text used for a title.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.Label">
            <summary>
            A System.Windows.Controls.Label or related control.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.Button">
            <summary>
            A System.Windows.Controls.Button or related control.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.CheckBox">
            <summary>
            A System.Windows.Controls.CheckBox or related control.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.ComboBox">
            <summary>
            A System.Windows.Controls.ComboBox or related control such as System.Windows.Controls.ComboBoxItem.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.ListBox">
            <summary>
            A System.Windows.Controls.ListBox or related control such as System.Windows.Controls.ListBoxItem.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.Menu">
            <summary>
            A System.Windows.Controls.Menu or related control such as System.Windows.Controls.MenuItem.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.RadioButton">
            <summary>
            A System.Windows.Controls.RadioButton or related control.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.ToolTip">
            <summary>
            A System.Windows.Controls.ToolTip or related control.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.Hyperlink">
            <summary>
            A System.Windows.Documents.Hyperlink or related control.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.TextFlow">
            <summary>
            For panels that can contain text.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.XmlData">
            <summary>
            XML data.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.Font">
            <summary>
            Font-related data such as font name, style, or size.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.Inherit">
            <summary>
            Inherits its category from a parent node.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.Ignore">
            <summary>
            Do not localize this resource. This does not apply to any child nodes that might exist.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.Localizability.NeverLocalize">
            <summary>
            Do not localize this resource, or any child nodes whose category is set to Inherit.
            </summary>
        </member>
        <member name="T:DependencyPropertyGenerator.DefaultBindingMode">
            <summary>
            Describes the direction of the data flow in a binding.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.DefaultBindingMode.TwoWay">
            <summary>
            Causes changes to either the source property or the target property to automatically
            update the other. This type of binding is appropriate for editable forms or other
            fully-interactive UI scenarios.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.DefaultBindingMode.OneWay">
            <summary>
            Updates the binding target (target) property when the binding source (source)
            changes. This type of binding is appropriate if the control being bound is implicitly
            read-only. For instance, you may bind to a source such as a stock ticker. Or
            perhaps your target property has no control interface provided for making changes,
            such as a data-bound background color of a table. If there is no need to monitor
            the changes of the target property, using the System.Windows.Data.BindingMode.OneWay
            binding mode avoids the overhead of the System.Windows.Data.BindingMode.TwoWay
            binding mode.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.DefaultBindingMode.OneTime">
            <summary>
            Updates the binding target when the application starts or when the data context
            changes. This type of binding is appropriate if you are using data where either
            a snapshot of the current state is appropriate to use or the data is truly static.
            This type of binding is also useful if you want to initialize your target property
            with some value from a source property and the data context is not known in advance.
            This is essentially a simpler form of System.Windows.Data.BindingMode.OneWay
            binding that provides better performance in cases where the source value does
            not change.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.DefaultBindingMode.OneWayToSource">
            <summary>
            Updates the source property when the target property changes.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.DefaultBindingMode.Default">
            <summary>
            Uses the default System.Windows.Data.Binding.Mode value of the binding target.
            The default value varies for each dependency property. In general, user-editable
            control properties, such as those of text boxes and check boxes, default to two-way
            bindings, whereas most other properties default to one-way bindings. A programmatic
            way to determine whether a dependency property binds one-way or two-way by default
            is to get the property metadata of the property using System.Windows.DependencyProperty.GetMetadata(System.Type)
            and then check the Boolean value of the System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault
            property.
            </summary>
        </member>
        <member name="T:DependencyPropertyGenerator.SourceTrigger">
            <summary>
            Describes the timing of binding source updates.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.SourceTrigger.Default">
            <summary>
            The default System.Windows.Data.UpdateSourceTrigger value of the binding target
            property. The default value for most dependency properties is 
            System.Windows.Data.UpdateSourceTrigger.PropertyChanged,
            while the System.Windows.Controls.TextBox.Text property has a default value of
            System.Windows.Data.UpdateSourceTrigger.LostFocus.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.SourceTrigger.PropertyChanged">
            <summary>
            Updates the binding source immediately whenever the binding target property changes.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.SourceTrigger.LostFocus">
            <summary>
            Updates the binding source whenever the binding target element loses focus.
            </summary>
        </member>
        <member name="F:DependencyPropertyGenerator.SourceTrigger.Explicit">
            <summary>
            Updates the binding source only when you call the System.Windows.Data.BindingExpression.UpdateSource method.
            </summary>
        </member>
        <member name="T:DependencyPropertyGenerator.WeakEventAttribute">
            <summary>
            Generates routed event using EventManager.RegisterRoutedEvent.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.WeakEventAttribute.Name">
            <summary>
            Name of this routed event.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.WeakEventAttribute.Type">
            <summary>
            Type of this routed event. <br/>
            Default - typeof(RoutedEventHandler).
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.WeakEventAttribute.IsStatic">
            <summary>
            Will generates static event. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.WeakEventAttribute.Description">
            <summary>
            Description of this routed event. <br/>
            The event will contain a <see cref="T:System.ComponentModel.DescriptionAttribute"/> with this value. <br/>
            This will also be used in the xml documentation if not explicitly specified. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.WeakEventAttribute.Category">
            <summary>
            Category of this routed event. <br/>
            The event will contain a <see cref="T:System.ComponentModel.CategoryAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.WeakEventAttribute.XmlDocumentation">
            <summary>
            The routed event xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.WeakEventAttribute.EventXmlDocumentation">
            <summary>
            The event add/remove xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="M:DependencyPropertyGenerator.WeakEventAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:DependencyPropertyGenerator.WeakEventAttribute`1">
            <summary>
            Will generates routed event using EventManager.RegisterRoutedEvent.
            </summary>
            <typeparam name="T">Type of this routed event.</typeparam>
        </member>
        <member name="P:DependencyPropertyGenerator.WeakEventAttribute`1.Name">
            <summary>
            Name of this routed event.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.WeakEventAttribute`1.Type">
            <summary>
            Type of this routed event. <br/>
            Default - typeof(RoutedEventHandler).
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.WeakEventAttribute`1.IsStatic">
            <summary>
            Will generates static event. <br/>
            Default - <see langword="false"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.WeakEventAttribute`1.Description">
            <summary>
            Description of this routed event. <br/>
            The event will contain a <see cref="T:System.ComponentModel.DescriptionAttribute"/> with this value. <br/>
            This will also be used in the xml documentation if not explicitly specified. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.WeakEventAttribute`1.Category">
            <summary>
            Category of this routed event. <br/>
            The event will contain a <see cref="T:System.ComponentModel.CategoryAttribute"/> with this value. <br/>
            Default - <see langword="null"/>.
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.WeakEventAttribute`1.XmlDocumentation">
            <summary>
            The routed event xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="P:DependencyPropertyGenerator.WeakEventAttribute`1.EventXmlDocumentation">
            <summary>
            The event add/remove xml documentation. <br/>
            Default - "&lt;summary&gt;&lt;/summary&gt;".
            </summary>
        </member>
        <member name="M:DependencyPropertyGenerator.WeakEventAttribute`1.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute">
            <summary>
            Specifies the priority of a member in overload resolution. When unspecified, the default priority is 0.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute"/> class.
            </summary>
            <param name="priority">The priority of the attributed member. Higher numbers are prioritized, lower numbers are deprioritized. 0 is the default if no attribute is present.</param>
        </member>
        <member name="P:System.Runtime.CompilerServices.OverloadResolutionPriorityAttribute.Priority">
            <summary>
            The priority of the member.
            </summary>
        </member>
        <member name="T:System.Runtime.CompilerServices.ParamCollectionAttribute">
            <summary>
            Indicates that a method will allow a variable number of arguments in its invocation.
            </summary>
        </member>
    </members>
</doc>
